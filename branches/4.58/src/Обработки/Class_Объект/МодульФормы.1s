//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:52
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс Объект
//_______________________________________________________________________________________
Перем КодОшибки ;      //число.  номер ошибки
Перем ПоследняяОшибка ;//строка. текстовое описание последней ошибки
Перем ФлагИзмененияСостояния; //0-состояние не изменилось с момента последнего вызова метода СостояниеИзменилось(), 1 - изменилось
Перем ОткрытаяФорма Экспорт; //ссылка на открытую форму
Перем КонтекстФормы Экспорт; //ссылка на контекст открытой формы

Перем СостояниеФормыОбъекта;//1 - если производится открытие формы вызовом ОткрытьФормуОбъекта или ОткрытьФормуОбъектаМодально
                            //2 - произведена привязка открытой формы к объекту вызовом УстановитьКонтекст
		                    //0 - во всех остальных случаях. Форма объекта не открыта или объект является элементом произвольной формы


Функция Этот(Конт) 		Возврат Конт; 			КонецФункции
Функция Сам() 			Возврат Этот(Контекст) 	КонецФункции




Функция Вид() Экспорт
	Возврат ТипЗначенияСтр(Сам());
КонецФункции	// гл


Процедура ОткрытьИнспектор() Экспорт
	глБраузер(Сам());
КонецПроцедуры


Процедура УстановитьКонтекст(пКонтекстФормы) Экспорт
	КонтекстФормы=пКонтекстФормы;
	ОткрытаяФорма=пКонтекстФормы.Форма;
	Если СостояниеФормыОбъекта<>0 Тогда
		СостояниеФормыОбъекта=2;
	КонецЕсли;
КонецПроцедуры


//функция для отработки внешних событий.
//если объект должен обрабатывать события то надо регистрировать в менеджере событий
//возвращает 1 - событие может дальше обрабатываться другими обработчиками
// 0 - дальнейшую обработку события  другими обработчиками прекратить
Функция ОбработкаСобытий(Издатель,Событие) Экспорт

	Возврат 1;
КонецФункции

Процедура СобытиеОбработано(Событие) Экспорт
	Попытка
		Событие.Обработано=1;
	Исключение
	КонецПопытки;
КонецПроцедуры


Процедура ОбновитьФорму() Экспорт
	Попытка
		Если ПустоеЗначение(КонтекстФормы)=0 Тогда
			Сервис=СоздатьОбъект("Сервис");
			Сервис.ВыполнитьПроцедуру(КонтекстФормы,"ОтобразитьРежим");
		КонецЕсли;

	Исключение
	КонецПопытки;
	ФлагИзмененияСостояния=0;
КонецПроцедуры

Функция ФормаОткрыта() Экспорт
	Если СостояниеФормыОбъекта=2 Тогда
		Возврат 1;
	КонецЕсли;
	Возврат 0;
КонецФункции

Процедура ЗакрытьФорму() Экспорт

	Сам=Сам();
	Попытка
		Если ПустоеЗначение(КонтекстФормы)=0 Тогда
			Сервис=СоздатьОбъект("Сервис");
			Сервис.ВыполнитьПроцедуру(КонтекстФормы,"ЗакрытьФорму");
		КонецЕсли;
	Исключение
	КонецПопытки;
	Сам.СброситьФорму();

КонецПроцедуры

Процедура АктивизироватьРеквизитФормы(ИмяОбъекта) Экспорт
	Попытка
		Если ПустоеЗначение(КонтекстФормы)=0 Тогда
			Сервис=СоздатьОбъект("Сервис");
			Список=СоздатьОбъект("СписокЗначений");
			Список.ДобавитьЗначение(ИмяОбъекта);
			Сервис.ВыполнитьПроцедуру(КонтекстФормы,"Активизировать",Список);
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура СброситьФорму() Экспорт
	ОткрытаяФорма="";
	КонтекстФормы="";

	СостояниеФормыОбъекта=0;
КонецПроцедуры



//Функция СостояниеИзменилось() Экспорт
//вызывать для проверки изменения состояния с момента последнего вызова этой же функции
//обычно для того, чтобы понять, надо ли перерисовывать отображение объекта

Функция СостояниеИзменилось() Экспорт
	Если ФлагИзмененияСостояния=0 Тогда
		Возврат 0;
	КонецЕсли;
	ФлагИзмененияСостояния=0;
	Возврат 1;
КонецФункции

//вызывать когда необходимо обновить экранную форму
Процедура ТребуетсяОтображение() Экспорт
	ФлагИзмененияСостояния=1;
КонецПроцедуры


Функция ПоследняяОшибка() Экспорт
	возврат ПоследняяОшибка;
КонецФункции

Функция КодОшибки() Экспорт
	возврат КодОшибки;
КонецФункции

Процедура УстановитьОшибку(_ПоследняяОшибка) Экспорт
	Сам=Сам();
	Сам.УстановитьКодИОшибку(10000,_ПоследняяОшибка);
КонецПроцедуры

Процедура Инит(РежимИнициализации=0) Экспорт
	КодОшибки=0;
	ПоследняяОшибка="";
КонецПроцедуры

Процедура УстановитьКодОшибки(_КодОшибки) Экспорт
	Сам=Сам();

	Сам.УстановитьКодИОшибку(_КодОшибки,"");
КонецПроцедуры


//Отправляет команду на запись события
Процедура ЗаписатьСобытие(Источник,ОписаниеСобытия,ДопИнфо="") экспорт

	глПослатьКоманду(Сам(),"ЗаписатьСобытие",Источник,"Система",,ОписаниеСобытия,ДопИнфо);

КонецПроцедуры


Процедура УстановитьКодИОшибку(_КодОшибки,_ПоследняяОшибка) Экспорт
	КодОшибки=_КодОшибки;
	ПоследняяОшибка=_ПоследняяОшибка;


	Попытка
		Если КодОшибки<>0 Тогда
			Сам=Сам();
			Сам.ЗаписатьСобытие("Класс:"+Сам.Вид(),"КодОшибки="+КодОшибки+" ПоследняяОшибка="+ПоследняяОшибка);
		КонецЕсли;

	Исключение
	КонецПопытки;


КонецПроцедуры

Процедура СброситьОшибку() Экспорт
	КодОшибки=0;
	ПоследняяОшибка="";
КонецПроцедуры

Функция ВыбратьОбъект(ИДФормы="ФормаСписка",Данные="") Экспорт

	Сам=Сам();
	Попытка
		возврат Сам.ОткрытьФормуОбъектаМодально(ИДФормы,Данные,1);
	Исключение
		глПредупреждение("Объект:"+Сам.Вид()+"
		|ВыбратьОбъект("+ИДФормы+")
		|
		|"+ОписаниеОшибки());
	КонецПопытки;
	Возврат 0;
КонецФункции


Функция ПолучитьИмяОткрываемойФормы(ИДФормы="ОсновнаяФорма") Экспорт
	Сам=Сам();

	ПутьКласса=Сам.ПолучитьПуть();

	Если Найти(ПутьКласса,":")>0 Тогда
		ПутьКласса=глФайловаяСистема.КаталогФайла(ПутьКласса)+"Class_"+СтрЗаменить(Сам.Вид(),".","_")+"_"+ИДФормы+".ert";
		Возврат ПутьКласса;
	Иначе
		Возврат "Обработка.Class_"+СтрЗаменить(Сам.Вид(),".","_")+"_"+ИДФормы+"#";
	КонецЕсли;

КонецФункции

//возвращает 1 - окно успешно открыто
//0 - не открыто
//ИДФормы - строка - имя формы объекта, которую надо открыть
//Данные - произвольные данные для передачи в окно диалога
Функция ОткрытьФормуОбъекта(ИДФормы="ОсновнаяФорма",Данные="") Экспорт

	Сам=Сам();


	СостояниеФормыОбъекта=1;

	_ИД=Сам.ПолучитьИмяОткрываемойФормы(ИДФормы);

	Структура=СоздатьОбъект("Структура");
	Структура.Вставить("Объект",Сам);
	Структура.Вставить("Результат",0);
	Структура.Вставить("Данные",Данные);
	Структура.Вставить("РежимВыбора",0);

	Попытка
		Если Найти(_ИД,":")=0 Тогда
			ОткрытьФорму(_ИД,Структура);
		Иначе
			ОткрытьФорму("Отчет",Структура,_ИД);
		КонецЕсли

	Исключение
		Сам.ОткрытьИнспектор();
		Возврат 0;
	КонецПопытки;


	Возврат 1;
КонецФункции	// ОткрытьФорму

Функция Представление() Экспорт
	Возврат "<"+Сам().Вид()+">";
КонецФункции	// гл


//возвращает произвольное значение - результат работы диалогового окна
//0 - окно не открыто

//ИДФормы - строка - имя формы объекта, которую надо открыть
//Данные - произвольные данные для передачи в окно диалога
//         через эту переменную можно и получить результат работы диалога
Функция ОткрытьФормуОбъектаМодально(ИДФормы="ОсновнаяФорма",Данные="",РежимВыбора=0) Экспорт
	Сам=Сам();
	СостояниеФормыОбъекта=1;
	Попытка
		_ИД=Сам.ПолучитьИмяОткрываемойФормы(ИДФормы);

		Структура=СоздатьОбъект("Структура");
		Структура.Вставить("Объект",Сам);
		Структура.Вставить("Результат",0);
		Структура.Вставить("Данные",Данные);
		Структура.Вставить("РежимВыбора",РежимВыбора);


		Попытка
			Если Найти(_ИД,":")=0 Тогда
				ОткрытьФормуМодально(_ИД,Структура);
			Иначе
				ОткрытьФормуМодально("Отчет",Структура,_ИД);
			КонецЕсли

		Исключение
			Сам.ОткрытьИнспектор();
			Возврат 0;
		КонецПопытки;

	    Сам.СброситьФорму();
		Данные=Структура.Данные;
		Возврат Структура.Результат;
	Исключение
		Сам.ОткрытьИнспектор();
	КонецПопытки;
	Сам.СброситьФорму();
	Возврат 0;
КонецФункции


Процедура Конструктор()

	КодОшибки=0;
	ПоследняяОшибка="";
	СостояниеФормыОбъекта=0;

КонецПроцедуры

Процедура Деструктор()
	
КонецПроцедуры

Функция _ПолучитьКод () Экспорт
	Возврат Представление();
КонецФункции