//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:52
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Экранная форма класса Устройство.ККМ
//Имя формы : ОсновнаяФорма
//_______________________________________________________________________________________
Перем Объект;





Функция Записать()
	Объект.Данные.Наименование=Наименование;


	Если Объект.Данные.ЭтоНовый=1 Тогда
		Объект.Данные.ИД=СокрЛП(ИД);
	ИначеЕсли Объект.Данные.ИД<>СокрЛП(ИД) Тогда
		Объект.Данные.НовыйИД=СокрЛП(ИД);
	КонецЕсли;


	Объект.Данные.Активность=Активность;
	Объект.НомерЛУ=НомерЛУ;

	СтрТипыОплаты="";
	Для Инд=1 По ТипыОплаты.РазмерСписка() Цикл
		Если ТипыОплаты.Пометка(Инд)=1 Тогда
			СтрТипыОплаты=СтрТипыОплаты+?(СтрТипыОплаты="","",",")+ТипыОплаты.ПолучитьЗначение(Инд);
		КонецЕсли;
	КонецЦикла;



	Объект.Данные.ТипыОплаты=СтрТипыОплаты;

	Объект.Данные.Драйвер=СокрЛП(ИмяДрайвера);

	Объект.Данные.СерийныйНомер=СокрЛП(СерийныйНомер);
	Объект.Данные.ПарольАдминистратора=ПарольАдминистратора;
	Объект.Данные.ПарольПользователя=ПарольПользователя;
	Объект.Данные.ПарольУстройства=ПарольУстройства;

	Объект.Данные.НаименованиеМашины=СокрЛП(НаименованиеМашины);

	Объект.Данные.ДлинаСтроки=?(ДлинаСтроки=0,34,ДлинаСтроки);
	Объект.Данные.КодФирмы=СокрЛП(КодФирмы);


	Возврат Объект.Записать();

КонецФункции

//*******************************************
Процедура ПоКнопкеЗаписать()
	Если Записать()=0 Тогда
	    Предупреждение("Объект не записан.
		|"+Объект.ПоследняяОшибка());
	КонецЕсли;  //
КонецПроцедуры

//*******************************************
Процедура ПоКнопкеОК()


	Если Записать()=0 Тогда
		Предупреждение("Объект не записан.");
	Иначе
		Форма.Закрыть();
	КонецЕсли;

КонецПроцедуры


Процедура ПриВыбореЗакладки(Номер,Название)
	Форма.ИспользоватьСлой(Название,2);
КонецПроцедуры


Процедура ПриОткрытии()

	Если ПустоеЗначение(Форма.Параметр)=1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	СтруктураПараметров=Форма.Параметр;
	Объект=СтруктураПараметров.Объект;


	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Общий,Основной","Основной");
	Форма.Закладки.ДобавитьЗначение("Общий,Оборудование","Оборудование");
	Форма.ИспользоватьСлой("Общий,Основной",2);



	ИмяДрайвера=Объект.Данные.Драйвер;

	Наименование=Объект.Данные.Наименование;

	ИД=Объект.Данные.ИД;
	НомерЛУ=Объект.НомерЛУ;
	Активность=Объект.Данные.Активность;



	Порт=Объект.Данные.Порт.ВСтроку();

	ТипыОплаты.ДобавитьЗначение("CASH","Наличные платежи");
	ТипыОплаты.ДобавитьЗначение("BANK","Безналичные платежи");

	СтрТипыОплаты=Объект.Данные.ТипыОплаты;
	Если ПустаяСтрока(СтрТипыОплаты)=0 Тогда
		СЗ=глСтроки.ПолучитьСписокИзСтроки(ВРЕГ(СтрТипыОплаты),",");
		Для Инд=1 По СЗ.РазмерСписка() Цикл
			ТипОплаты=СЗ.ПолучитьЗначение(Инд);
			Если ПустаяСтрока(ТипОплаты)=1 Тогда
				Продолжить;
			КонецЕсли;
			Поз=ТипыОплаты.НайтиЗначение(ТипОплаты);
			Если Поз>0 Тогда
				ТипыОплаты.Пометка(Поз,1);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Инд=1 По ТипыОплаты.РазмерСписка() Цикл
			ТипыОплаты.Пометка(Инд,1);
		КонецЦикла;
	КонецЕсли;


	СерийныйНомер=Объект.Данные.СерийныйНомер;
	ПарольАдминистратора=Объект.Данные.ПарольАдминистратора;
	ПарольПользователя=Объект.Данные.ПарольПользователя;
	ПарольУстройства=Объект.Данные.ПарольУстройства;

	НаименованиеМашины=Объект.Данные.НаименованиеМашины;

	ДлинаСтроки=Объект.Данные.ДлинаСтроки;
	КодФирмы=Объект.Данные.КодФирмы;


	Форма.Заголовок(Наименование);



КонецПроцедуры	// ПриОткрытии


Процедура ПриПовторномОткрытии()
	ПриОткрытии();

КонецПроцедуры	// ПриПовторномОткрытии



Процедура ПриНачалеВыбораЗначения(ИД,ФСО)
	Если ИД="Порт" Тогда
		Объект.Данные.Порт.ОткрытьФормуОбъектаМодально();
		Порт=Объект.Данные.Порт.ВСтроку();
	КонецЕсли;

КонецПроцедуры




Процедура Печать()

	МакетПечати=глДрайверы.ТекстовыйПроцессор.ПолучитьМакетПечати("Чек");

	Чек=СоздатьОбъект("Чек");
	//Чек.Прочитать("02426203-3013-4051-8ca8-95b0bf2b4f53");//продажа
	Чек.Прочитать("21814cfd-1796-4483-9f54-dcbf716ebfb4");//возврат
	//Чек.ОткрытьФормуОбъектаМодально();

	ТекстНаПечать=Чек.ПолучитьТекстЧекаПоМакету(МакетПечати,Объект);

	ТекстЧека=ТекстНаПечать;

	Если Объект.НапечататьТекст(ТекстНаПечать)=0 Тогда
		глПредупреждение("Ошибка печати: "+Объект.ИнтерфейсОборудования.ПоследняяОшибка());
	КонецЕсли;
КонецПроцедуры


Процедура ПробитьЧекККМ()

	Чек=СоздатьОбъект("Чек");
	Чек.Прочитать("c40bb94e-521b-4ae9-9319-10a288ddd5fe");//продажа
	//Чек.Прочитать("6755f09f-4b19-4d3e-a344-bc94d82a4c5e");//возврат
	Если Чек.ПробитьЧек(Объект)=0 Тогда
		глПредупреждение("Ошибка печати: "+Объект.ИнтерфейсОборудования.ПоследняяОшибка());
	КонецЕсли;

КонецПроцедуры

Процедура ПечатьКопии()


	Чек=СоздатьОбъект("Чек");
	Чек.Прочитать("28d00b74-00ea-4704-94e7-874d3395db0a");
	//Чек.Прочитать("6755f09f-4b19-4d3e-a344-bc94d82a4c5e");//возврат

	Если Чек.ПечатьКопии(Объект)=0 Тогда
		глПредупреждение("Ошибка печати: "+Объект.ИнтерфейсОборудования.ПоследняяОшибка());
	КонецЕсли;

КонецПроцедуры

Процедура ЗакрытьСмену()
	Объект.ЗакрытьСмену();
КонецПроцедуры

Процедура ОтчетБезГашения()
	Объект.ОтчетБезГашения();
КонецПроцедуры

Процедура Внесение()
	Объект.Внесение(Сумма);
КонецПроцедуры

Процедура Выплата()
	Объект.Выплата(Сумма);
КонецПроцедуры



Процедура ПоказатьСчетчики()
	Объект.ПоказатьСчетчики();
КонецПроцедуры

Процедура ПоказатьДенежныеСчетчики()
	Объект.ПоказатьДенежныеСчетчики();
КонецПроцедуры

Процедура ПоказатьПараметры()
	Объект.ПоказатьПараметры();
КонецПроцедуры

Процедура ПосмотретьНаличность()
	СуммаОстатка=Объект.СуммаНаличности();
	Предупреждение("Сумма наличности "+глФРМ(СуммаОстатка));
КонецПроцедуры

Процедура ПродолжитьПечать()
	Объект.ПродолжитьПечать();
КонецПроцедуры

Процедура ОтменаЧекаАдминистратором()
	Если Объект.АннулироватьЧек()=0 Тогда
	    глПредупреждение("Код: "+Объект.КодОшибки()+"
		|"+Объект.ПоследняяОшибка());
	КонецЕсли;  //
КонецПроцедуры

Процедура ОткрытьЯщик()
	Объект.ОткрытьДенежныйЯщик();
КонецПроцедуры

Процедура НастройкаСвойств()
	Объект.НастройкаСвойств();
КонецПроцедуры

Процедура ОтрезатьЛенту(Неполностью=0)
	Объект.ОтрезатьЛенту(Неполностью);
КонецПроцедуры

Процедура ПередатьНаСервер()
	Чек=СоздатьОбъект("Чек");

	Чек.Прочитать("daee5cd8-4802-43d4-8cdd-2e429659ac62");//возврат
	//Чек.ОткрытьФормуОбъектаМодально();

    ДрайверСервера=глДрайверы.ПолучитьДрайвер("RBSoftCheckServer");
	НомерЧекаНаСервере=ДрайверСервера.СоздатьЧек(Чек);

КонецПроцедуры


Процедура ЗакрытьНаСервере()

    ДрайверСервера=глДрайверы.ПолучитьДрайвер("RBSoftCheckServer");
	Рез=ДрайверСервера.ЗакрытьЧек(НомерЧекаНаСервере,ФлагОперации,СуммаЗакрытия);

	Если Рез = 0 Тогда
		//ошибка
		Предупреждение("Чек не закрыт.");
	Иначе
		Предупреждение("Чек закрыт.");
	КонецЕсли;


КонецПроцедуры

ИнфоСуффикс="Префикс и суффикс передаваемых устройством данных.
|Последовательность символов задается как десятичные числа после символа #, разделенные пробелами или запятыми.
|Возможно использовать идентификаторы: CR=#13, LF=#10, SPACE=#32, ESC=#27,TAB=#9,BACKSPACE=#8";