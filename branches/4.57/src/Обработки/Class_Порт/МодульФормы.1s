//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:19
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;

Перем ТипПорта Экспорт; //Строка - тип порта. RS|KEYBOARD|USB|IP|UNKNOWN

Перем Порт Экспорт;     //строка.USB|KEYBOARD|COM[НомерПорта]
Перем Скорость Экспорт; //число. 300|600|1200|2400|4800|9600|14400|19200|38400|57600|115200
Перем БитовДанных Экспорт;//число. 7|8
Перем СтопБитов Экспорт; //число. 1|2
Перем Четность Экспорт;//Строка. NONE|ODD|EVEN|MARK|SPACE
Перем Чувствительность Экспорт;//Число.Для клавиатурного устройства для определения временного интервала между символами если поток символов идет от устройства
Перем ТаймАут Экспорт; //Число.используется для некоторых устройств как период ожидания ответа от устройства


Перем IP Экспорт;//строка.IP-адрес в формате aaa.bbb.ccc.ddd[:port]
Перем IP_A Экспорт;//число. 1 часть IP-адреса
Перем IP_B Экспорт;//число. 2 часть IP-адреса
Перем IP_C Экспорт;//число. 3 часть IP-адреса
Перем IP_D Экспорт;//число. 4 часть IP-адреса
Перем IP_Port Экспорт;//число. номер IP-порта

Функция Этот(Конт) 		Возврат Конт; 			КонецФункции
Функция Сам() 			Возврат Этот(Контекст) 	КонецФункции


//*******************************************
Функция Вид() Экспорт
	Возврат "Порт";
КонецФункции	// гл

Функция ПолучитьСписокИзСтроки(_Источник,_Разделитель) Экспорт
Перем Текст,Стр,СЗ,Инд;
	 Текст=СоздатьОбъект("Текст");
	 Стр=СтрЗаменить(_Источник,_Разделитель,РазделительСтрок);
	 Текст.ДобавитьСтроку(Стр);
	 СЗ=СоздатьОбъект("СписокЗначений");
	 Для Инд=1 По Текст.КоличествоСтрок() Цикл
	 	Стр=СокрЛП(Текст.ПолучитьСтроку(Инд));
	 	СЗ.ДобавитьЗначение(Стр);
	 КонецЦикла;
	 возврат СЗ;
КонецФункции

//Заполняет объект из структуры Порт
Процедура Заполнить(ПортИсточник) Экспорт
	ТипПорта			=	ПортИсточник.ТипПорта;
	Порт				=	ПортИсточник.Порт;
	Скорость			=	ПортИсточник.Скорость;
	БитовДанных			=	ПортИсточник.БитовДанных;
	СтопБитов			=	ПортИсточник.СтопБитов;
	Четность			=	ПортИсточник.Четность;
	Чувствительность	=	ПортИсточник.Чувствительность;
	Таймаут				=	ПортИсточник.Таймаут;
	IP					=	ПортИсточник.IP;
	IP_A				=	ПортИсточник.IP_A;
	IP_B				=	ПортИсточник.IP_B;
	IP_C				=	ПортИсточник.IP_C;
	IP_D				=	ПортИсточник.IP_D;
	IP_Port				=	ПортИсточник.IP_Port;
КонецПроцедуры

Функция IP_Адрес() Экспорт
	возврат ""+IP_A+"."+IP_B+"."+IP_C+"."+IP_D;
КонецФункции

Функция IP_Порт() Экспорт
	возврат IP_Port;
КонецФункции


Процедура ЗаполнитьСтруктуруИзОбъекта(ПортСтруктура) Экспорт
	ПортСтруктура.Вставить("ТипПорта",		ТипПорта);
	ПортСтруктура.Вставить("Порт",    		Порт);
	ПортСтруктура.Вставить("Скорость",		Скорость);
	ПортСтруктура.Вставить("БитовДанных",	БитовДанных);
	ПортСтруктура.Вставить("СтопБитов",		СтопБитов);
	ПортСтруктура.Вставить("Четность",		Четность);
	ПортСтруктура.Вставить("Чувствительность",Чувствительность);
	ПортСтруктура.Вставить("Таймаут",		Таймаут);
	ПортСтруктура.Вставить("IP",			IP);
	ПортСтруктура.Вставить("IP_A",			IP_A);
	ПортСтруктура.Вставить("IP_B",			IP_B);
	ПортСтруктура.Вставить("IP_C",			IP_C);
	ПортСтруктура.Вставить("IP_Port",		IP_Port);

КонецПроцедуры

//возвращает
//номер порта для RS
//0 - для неизвестного
//-1- для KEYBOARD
//-2- для USB
//-3- для IP
Функция НомерПорта() Экспорт
	Если ТипПорта="RS" Тогда
	    Возврат Число(СтрЗаменить(ВРЕГ(Порт),"COM",""));
	ИначеЕсли ТипПорта="KEYBOARD" Тогда
	    Возврат -1;
	ИначеЕсли ТипПорта="USB" Тогда
	    Возврат -2;
	ИначеЕсли ТипПорта="IP" Тогда
	    Возврат -3;
	КонецЕсли;  //
	Возврат 0;
КонецФункции

Функция ВСтроку() экспорт
	Если ТипПорта="USB" Тогда
		Возврат "USB";
	ИначеЕсли ТипПорта="KEYBOARD" Тогда
		Возврат "Keyboard,"+Чувствительность;
	ИначеЕсли ТипПорта="RS" Тогда
		Возврат Строка(Порт)+","+Скорость +","+БитовДанных+","+СтопБитов+","+Четность+","+Таймаут;
	ИначеЕсли ТипПорта="IP" Тогда
		Возврат IP;
	КонецЕсли;
	//#error Неверный тип порта.
	Возврат "";
КонецФункции



//Разложить IP адрес
Функция РазложитьIP(_СтрокаАдреса,_А=0,_Б=0,_С=0,_Д=0,_Порт=0) Экспорт
	СтрПорт=СтрЗаменить(СтрЗаменить(_СтрокаАдреса," ",""),".",РазделительСтрок);
	СтрПорт=СтрЗаменить(СтрПорт,":",РазделительСтрок);

	л_А=0;
	л_Б=0;
	л_С=0;
	л_Д=0;
	л_Порт=0;
	Если (СтрКоличествоСтрок(СтрПорт)<>4)И(СтрКоличествоСтрок(СтрПорт)<>5) Тогда
		Возврат 0;
	КонецЕсли;
	Попытка
		л_А=Число(СтрПолучитьСтроку(СтрПорт,1));
	Исключение
		Возврат 0;
	КонецПопытки;
	Попытка
		л_Б=Число(СтрПолучитьСтроку(СтрПорт,2));
	Исключение
		Возврат 0;
	КонецПопытки;

	Попытка
		л_С=Число(СтрПолучитьСтроку(СтрПорт,3));
	Исключение
		Возврат 0;
	КонецПопытки;

	Попытка
		л_Д=Число(СтрПолучитьСтроку(СтрПорт,4));
	Исключение
		Возврат 0;
	КонецПопытки;

	Если СтрКоличествоСтрок(СтрПорт)=5 Тогда
		Попытка
			л_Порт=Число(СтрПолучитьСтроку(СтрПорт,5));
		Исключение
			Возврат 0;
		КонецПопытки;
	КонецЕсли;
	Если л_А>255 Тогда
		Возврат 0;
	КонецЕсли;
	Если л_Б>255 Тогда
		Возврат 0;
	КонецЕсли;
	Если л_С>255 Тогда
		Возврат 0;
	КонецЕсли;
	Если л_Д>255 Тогда
		Возврат 0;
	КонецЕсли;

	Если л_Порт>65535 Тогда
		Возврат 0;
	КонецЕсли;


	_А=л_А;
	_Б=л_Б;
	_С=л_С;
	_Д=л_Д;
	_Порт=л_Порт;

	Возврат 1;
КонецФункции


Функция ИзСтроки(Стр) экспорт


	СЗ=ПолучитьСписокИзСтроки(Стр,",");
	Сам=Сам();
	Попытка

		ТипПорта="UNKNOWN";
		Если СЗ.РазмерСписка()=0 Тогда
			//все параметры оставляем по умолчанию
			возврат 1;
		КонецЕсли;

		Значение=СЗ.ПолучитьЗначение(1);

		Порт=ВРЕГ(Значение);

		Если ПустоеЗначение(Порт)=1 Тогда
			Сам.УстановитьКодИОшибку(10000,"Неверное описание порта: "+Значение+" : "+Стр);
			Возврат 0;
		КонецЕсли;


		ЛевСтр=Лев(Врег(СокрЛП(Порт)),3);

		Если ЛевСтр="COM" Тогда
			ТипПорта="RS";
			Если СЗ.РазмерСписка()<5 Тогда
				Сам.УстановитьКодИОшибку(10000,"Недостаточное количество параметров для описания порта RS232."+Стр);
				Возврат 0;
			КонецЕсли;

			Попытка

				Значение=Число(СЗ.ПолучитьЗначение(2));

				Ном=Сам().ПолучитьСписокПараметров("Скорость").НайтиЗначение(Значение);
				Если Ном=0 Тогда
					Сам.УстановитьКодИОшибку(10000,"Некорректное значение скорости обмена для порта RS232."+Стр);
					Возврат 0;
				Иначе
					Скорость=Значение;
				КонецЕсли;

			Исключение
				Сам.УстановитьКодИОшибку(10000,"Некорректное значение скорости обмена для порта RS232."+Стр);
				Возврат 0;
			КонецПопытки;



			БитовДанных=Число(СЗ.ПолучитьЗначение(3));
			СтопБитов=Число(СЗ.ПолучитьЗначение(4));
			Попытка
				Значение=ВРЕГ(СЗ.ПолучитьЗначение(5));
				Четность="NONE";
				Если Найти("/NONE/ODD/EVEN/MARK/SPACE","/"+Значение+"/")>0 Тогда
					Четность=Значение;
				Иначе
					Сам.УстановитьКодИОшибку(10000,"Некорректное описание четности в параметрах порта: "+Значение+" : "+Стр);
					Возврат 0;
				КонецЕсли;  //
			Исключение
				Сам.УстановитьКодИОшибку(10000,"Некорректное описание четности в параметрах порта: "+Значение+" : "+Стр);
				Возврат 0;
			КонецПопытки;


			Таймаут=100;
			Если СЗ.РазмерСписка()>=6 Тогда
				Попытка
					Значение=СЗ.ПолучитьЗначение(6);
					Таймаут=Число(Значение);
				Исключение
					Сам.УстановитьКодИОшибку(10000,"Некорректное описание таймаута в параметрах порта: "+Значение+" : "+Стр);
					Возврат 0;
				КонецПопытки;
			КонецЕсли;



		ИначеЕсли ЛевСтр="KEY" Тогда
			ТипПорта="KEYBOARD";
			Если СЗ.РазмерСписка()>=2 Тогда
				Попытка
					Значение=СЗ.ПолучитьЗначение(2);
					Сам().Чувствительность=Число(Значение);
				Исключение
					Сам().УстановитьКодИОшибку(10000,"Неверное описание чувствительности клавиатурного устройства в описании параметров порта: "+Значение+" : "+Стр);
					Возврат 0;
				КонецПопытки;
			КонецЕсли;



		ИначеЕсли ЛевСтр="USB" Тогда
			ТипПорта="USB";
		ИначеЕсли РазложитьIP(Стр,IP_A,IP_B,IP_C,IP_D,IP_Port)=0 Тогда
			Сам.УстановитьКодИОшибку(10000,"Некорректное описание IP-адреса");
			Возврат 0;
		Иначе
			ТипПорта="IP";
			IP=СтрЗаменить(Стр," ","");
		КонецЕсли;

	Исключение
		Сам.УстановитьКодИОшибку(10000,"Некорректное описание порта в параметрах порта: "+Значение+" : "+Стр);
		Возврат 0;
	КонецПопытки;

	возврат 1;
КонецФункции

Процедура ПриЗаписи_IP (_СтрокаАдреса) Экспорт
	Если РазложитьIP(_СтрокаАдреса)=1 Тогда
		Если ИзСтроки(_СтрокаАдреса)=1 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;  //
	Сам().УстановитьКодИОшибку(10000,"Некорректное описание порта: "+_СтрокаАдреса);

КонецПроцедуры

Функция ПолучитьИмяОткрываемойФормы(ИмяФормы="") Экспорт
	Если ТипПорта="IP" Тогда
		Возврат "Обработка.Class_Порт_ФормаРедактированияIP#";
	Иначе
		Возврат "Обработка.Class_Порт_ОсновнаяФорма#";
	КонецЕсли;
КонецФункции

//////////////Для сохраняемости класса
Функция КлассСохраняемый () Экспорт
	Возврат 1;
КонецФункции

Процедура ЗагрузитьИзСтроки(Стр) Экспорт
	Если ИзСтроки(Стр)=0 Тогда
		ТипПорта="UNKNOWN";
		Сам().УстановитьКодИОшибку(7000,"Не удалось восстановить класс Порт из строки");
	КонецЕсли;
КонецПроцедуры

Функция СохранитьКлассВСтроку() Экспорт
	Возврат ВСтроку();
КонецФункции

//------------------------------------ ------------------------------------
Процедура Конструктор()

	_База = Этот(Контекст).ПолучитьБазовыйКласс("Объект");


	ТипПорта="RS";
	Порт="COM01";
	Скорость=9600;
	БитовДанных=8;
	СтопБитов=1;
	Четность="NONE";
	Чувствительность=100;//Для клавиатурного устройства для определения временного интервала между символами если поток символов идет от устройства
    ТаймАут=100; //используется для некоторых устройств как период ожидания ответа от устройства
	IP="127.0.0.1";
	IP_A=127;
	IP_B=0;
	IP_C=0;
	IP_D=1;
	IP_Port=0;
КонецПроцедуры // Конструктор


Функция _ПолучитьКод () экспорт
	Возврат ВСтроку();
КонецФункции



Функция ПолучитьСписокПараметров(ИмяПараметра) Экспорт
	СЗ=СоздатьОбъект("СписокЗначений");
	Если ИмяПараметра="Порт" Тогда
		Для Инд=1 По 32 Цикл
			СЗ.ДобавитьЗначение("COM"+Инд,"Com "+Инд);
		КонецЦикла;
		СЗ.ДобавитьЗначение("KEYBOARD","Клавиатура");
		СЗ.ДобавитьЗначение("USB","USB");

	ИначеЕсли ИмяПараметра="Скорость" Тогда
		СЗ.ДобавитьЗначение(300,"300");
		СЗ.ДобавитьЗначение(600,"600");
		СЗ.ДобавитьЗначение(1200,"1200");
		СЗ.ДобавитьЗначение(2400,"2400");
		СЗ.ДобавитьЗначение(4800,"4800");
		СЗ.ДобавитьЗначение(9600,"9600");
		СЗ.ДобавитьЗначение(14400,"14400");
		СЗ.ДобавитьЗначение(19200,"19200");
		СЗ.ДобавитьЗначение(38400,"38400");
		СЗ.ДобавитьЗначение(57600,"57600");
		СЗ.ДобавитьЗначение(115200,"115200");
	ИначеЕсли ИмяПараметра="Четность" Тогда
		СЗ.ДобавитьЗначение("NONE","None (Нет)");
		СЗ.ДобавитьЗначение("ODD","Odd (Четность)");
		СЗ.ДобавитьЗначение("EVEN","Even (Нечетность)");
		СЗ.ДобавитьЗначение("MARK","Mark (Установлен)");
		СЗ.ДобавитьЗначение("SPACE","Space (Сброшен)");


	ИначеЕсли ИмяПараметра="БитовДанных" Тогда
		СЗ.ДобавитьЗначение(7,"7 бит");
		СЗ.ДобавитьЗначение(8,"8 бит");

	ИначеЕсли ИмяПараметра="СтопБитов" Тогда
		СЗ.ДобавитьЗначение(1,"1 бит");
		СЗ.ДобавитьЗначение(2,"2 бита");

	КонецЕсли;
	возврат СЗ;
КонецФункции


//------------------------------------ ------------------------------------
Процедура Деструктор()

КонецПроцедуры // Деструктор




