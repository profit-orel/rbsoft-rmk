//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:51
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс Драйвер.RBSOFT.CHECKSERVER
//_______________________________________________________________________________________
Перем _База Экспорт;


Перем Сервер Экспорт;//IP-адрес сервера или dns-имя
Перем Порт Экспорт;//номер IP-порта
Перем Пользователь Экспорт;
Перем Пароль Экспорт;
Перем БазаДанных Экспорт;

Перем НужноПереустановитьСоединение Экспорт;
Перем ИспользоватьСжатие Экспорт;
Перем ИспользоватьНовыеПароли Экспорт;
Перем ИспользоватьИменованныеКаналы Экспорт;
Перем ИспользоватьГнезда Экспорт;
Перем ГнездоUnix Экспорт;

Перем ДрайверSQL Экспорт;




Функция Этот(Конт) 		Возврат Конт; 			КонецФункции
Функция Сам() 			Возврат Этот(Контекст) 	КонецФункции




Процедура Конструктор()
    _База = Этот(Контекст).ПолучитьБазовыйКласс("Драйвер");


	ДрайверSQL=СоздатьОбъект("AddIn.MySQLConnection");


	НужноПереустановитьСоединение=1;
	ИспользоватьСжатие=1;
	ИспользоватьИменованныеКаналы=0;
	ИспользоватьГнезда=0;
	БазаДанных=глНастройки.Получить("RBSOFTCHECKSERVER/Database");

	Сервер=глНастройки.Получить("RBSOFTCHECKSERVER/Addres");
	Порт=глНастройки.ПолучитьКакЧисло("RBSOFTCHECKSERVER/Port");
	Если Порт=0 Тогда
		Порт=3306;
	КонецЕсли;
	Пользователь=глНастройки.Получить("RBSOFTCHECKSERVER/Login");
	Пароль=глНастройки.Получить("RBSOFTCHECKSERVER/Password");
	ГнездоUnix="";

КонецПроцедуры

Процедура Деструктор()
	Попытка
		Если ДрайверSQL.Подключен() = 1 Тогда
	    	ДрайверSQL.ЗакрытьСоединение();
			ДрайверSQL=0;
    	КонецЕсли;
	Исключение
	КонецПопытки;

КонецПроцедуры

Функция УстановитьСоединение() Экспорт
	Сам=Сам();


	ДрайверSQL.Сервер = Сервер;
	ДрайверSQL.Пользователь = Пользователь;
	ДрайверSQL.Пароль = Пароль;
	ДрайверSQL.Порт = Порт;
	ДрайверSQL.БазаДанных = БазаДанных;

	ДрайверSQL.НужноПереустановитьСоединение = НужноПереустановитьСоединение;
	ДрайверSQL.ИспользоватьСжатие = ИспользоватьСжатие;
	ДрайверSQL.ИспользоватьНовыеПароли = ИспользоватьНовыеПароли;
	ДрайверSQL.ИспользоватьИменованныеКаналы = ИспользоватьИменованныеКаналы;
	ДрайверSQL.ИспользоватьГнезда = ИспользоватьГнезда;
	ДрайверSQL.ГнездоUnix=ГнездоUnix;
	Если ДрайверSQL.УстановитьСоединение() = 1 Тогда
		возврат 1;
	Иначе
		Сам.УстановитьКодИОшибку(12000,"Неудачная попытка соединения: "+ДрайверSQL.ПоследняяОшибка());
		возврат 0;
	КонецЕсли;
КонецФункции


Функция КоличествоЛУ() Экспорт
	возврат 1;
КонецФункции


Функция ДобавитьУстройство() Экспорт
	возврат 1;
КонецФункции


Функция НормализоватьДату(_Дата) Экспорт
	возврат СтрЗаменить(Формат(_Дата,"ДГГГГММДД"),".","");
КонецФункции

Функция НормализоватьВремя(_Время) Экспорт
	возврат _Время;
КонецФункции


Функция ПроверитьПодключение() экспорт
	Сам=Сам();
	Если ДрайверSQL.ПроверитьСоединение()=0 Тогда
		Если ДрайверSQL.ПереустановитьСоединение()=0 Тогда
			Если Сам.УстановитьСоединение()=0 Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат 1;
КонецФункции

//возвращает номер операции
//0 - невозможно начать операцию
Функция СоздатьЧек(Чек) Экспорт
	Сам=Сам();
	//ИД
	//Родитель
	//ПолныйКод
	//Уровень
	//Дата
	//Время
	//НомерККМ
	//НомерСмены
	//НомерДокумента
	//НомерКассовогоЧека
	//КодОперации
	//Статус
	//ПризнакВнешнегоЧека
	//ИмяФайлаВнешнегоЧека
	//СуммаБезСкидки
	//СуммаСкидки
	//СуммаНаценки
	//СуммаВсего
	//ДисконтнаяКарта
	//НаименованиеКлиента
	//Продавец
	//НаименованиеПродавца
	//Кассир
	//НаименованиеКассира
	//Заголовок
	//Отправлен
	ИД = Чек.Данные.ИД;
	ДатаЧека=НормализоватьДату(Чек.Данные.Дата);
	Время=Чек.Данные.Время;
	НомерККМ=Чек.Данные.НомерККМ;
	НомерСмены=Чек.Данные.НомерСмены;
	НомерДокумента=Чек.Данные.НомерДокумента;
	НомерКассовогоЧека=Чек.Данные.НомерКассовогоЧека;
	КодОперации=Чек.Данные.КодОперации;
	Статус=Чек.Данные.Статус;
	СуммаСкидки=Чек.Данные.СуммаСкидки*100;
	СуммаНаценки=Чек.Данные.СуммаНаценки*100;
	СуммаВсего=Чек.Данные.СуммаВсего*100;
	Кассир = СокрЛП(Чек.Данные.Кассир);
	ДисконтнаяКарта=СокрЛП(Чек.Данные.ДисконтнаяКарта);
	Продавец=СокрЛП(Чек.Данные.Продавец);
	ИмяКассовогоМеста=СокрЛП(глИмяPOS);
	ЗаголовокЧека = СокрЛП(Чек.Данные.Заголовок);

	Знак=?(КодОперации=1,-1,1);

	ТекстЗапроса="select OpenCheck('"+ИД+"','"+НомерКассовогоЧека+"','"+НомерСмены+"','"+НомерККМ+"','"+ИмяКассовогоМеста+"','"+Кассир+
	"','"+Продавец+"','"+ДисконтнаяКарта+"','"+ЗаголовокЧека+"','"+НормализоватьДату(ТекущаяДата())+"','"+НормализоватьВремя(ТекущееВремя())+"',"
	+КодОперации+","+Знак*СуммаВсего+","+Знак*СуммаСкидки+","+Знак*СуммаНаценки+",'"+НомерДокумента+"');";

	Если Сам.ПроверитьПодключение()=0 Тогда
		Возврат 0;
	КонецЕсли;


	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		Рез=Число(ДрайверSQL.ПолучитьЗначение(0));
		Возврат Рез;
	КонецЕсли;

	Сам.УстановитьКодИОшибку(13000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
	возврат 0;
КонецФункции

Функция ЗакрытьЧек(НомерОперации, ФлагОперации,	СуммаСнятияНакопления) Экспорт

	Сам=Сам();

	Если Сам.ПроверитьПодключение()=0 Тогда
		Возврат 0;
	КонецЕсли;

	ТекстЗапроса="select CloseCheck("+НомерОперации+","+ФлагОперации+","+СуммаСнятияНакопления+");";
	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		Рез=Число(ДрайверSQL.ПолучитьЗначение(0));
		Если Рез=0 Тогда
			Сам.УстановитьКодИОшибку(13000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
		КонецЕсли;
		Возврат Рез;
	Иначе
		Сам.УстановитьКодИОшибку(13000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
	КонецЕсли;
	возврат 0;
КонецФункции


//возвращает текущий остаток на карте
//-1 - ошибка на сервере
Функция ПолучитьОстаток(ИДКарты,ИДОперации=0) Экспорт

	Сам=Сам();

	Сам.СброситьОшибку();

	Если Сам.ПроверитьПодключение()=0 Тогда
		Возврат 0;
	КонецЕсли;

	ТекстЗапроса="SELECT GetBalance("+ИДОперации+",'"+ИДКарты+"');";

	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		Остаток=Число(ДрайверSQL.ПолучитьЗначение(0));
		Если Остаток=-100000000 Тогда
			Сам.УстановитьКодИОшибку("Ошибка при выполнении запроса остатка.");
			Возврат -1;
		КонецЕсли;
		Остаток=Остаток/100;
		Возврат Остаток;
	Иначе
		Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
		Возврат -1;
	КонецЕсли;
КонецФункции

Функция ПолучитьКарту(ИД) Экспорт
	Сам=Сам();
	Если ИД="" Тогда
		Сам.УстановитьОшибку("Попытка поиска карты с пустым ИД");
		Возврат 0;
	КонецЕсли;

	Если Сам.ПроверитьПодключение()=0 Тогда
		Возврат 0;
	КонецЕсли;

	ТекстЗапроса="SELECT * FROM cards left join owners on (cards.owner=owners.id_owner) where cards.id_card='"+ИД+"' limit 1;";

	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		ТабРез = ДрайверSQL.ПолучитьВсе();
		Если ТабРез.КоличествоСтрок()=0 Тогда

			Сам.УстановитьОшибку("Карта не найдена на сервере чеков. ИД="""+ИД+"""");

			Возврат 0;
		Иначе

			ТабРез.ПолучитьСтрокуПоНомеру(1);
			Карта=НовыйОбъект("ПлатежнаяКарта");

			Карта.ИД			=ТабРез.ID_Card;


			Карта.Активность	=ТабРез.Active;
			Карта.ВладелецКод	=ТабРез.Owner;
			Карта.ПроцентСкидки =ТабРез.Discount;

			Имя	= СокрЛП(ТабРез.Name);
			Фамилия=СокрЛП(ТабРез.Family);

			Карта.ВладелецИмя=""+Имя+" "+Фамилия;


			Карта.ТипСкидки=ТабРез.IsDiscount;
			Карта.ЭтоПлатежнаяКарта=ТабРез.IsPay;

			Карта.ДатаАктивации=ТабРез.ActivatedTime;
			Карта.ДатаБлокировки=ТабРез.BlockedTime;


			Карта.ТекущийОстаток = ПолучитьОстаток(ИД);
			Карта.ДатаТекущегоОстатка=ТекущаяДата();
			Карта.ВремяТекущегоОстатка=ТекущееВремя();
			Карта.ОстатокНаДату=ТабРез.Balance/100;
			Карта.ДатаОстатка=ТабРез.BalanceTime;

			Карта.ДатаАктивации=ТабРез.ActivatedTime;
			Карта.ДатаБлокировки=ТабРез.BlockedTime;

			Карта.Номинал=ТабРез.Nominal/100;

			//Зарезервировано
			Карта.ТекущийОборот=0;
			Карта.ТекущаяСуммаСкидок=0;

			Сам.СброситьОшибку();

			Возврат Карта;
		КонецЕсли;
	Иначе
		Сам.УстановитьОшибку(ДрайверSQL.ПоследняяОшибка());
	КонецЕсли;
	возврат 0;
КонецФункции



Функция ВнешнееСобытие(Издатель,Событие) Экспорт

	Сам=Сам();

	Отработали=0;
	Если Событие.Источник="Команда" Тогда
		Команда=Событие.Описатель.Команда;
		Если Команда="ОтправитьНаСерверЧеков" Тогда

			Событие.Описатель.Ответ=0;
			Событие.Описатель.Ответ1=0;

			Рез=0;

			Чек=Событие.Описатель.Данные;
			НомерТранзакцииНаСервере=Сам.СоздатьЧек(Чек);
			Если НомерТранзакцииНаСервере=0 Тогда
				Событие.Описатель.Ответ=0;
				Событие.Описатель.Ошибка=Сам.ПоследняяОшибка();
			Иначе
				СуммаСкидки=Чек.Данные.Товары.Итог("СуммаСкидки");

				Если ПустаяСтрока(Чек.Данные.ДисконтнаяКарта)=0 Тогда


					Если Чек.Данные.КодОперации=0 Тогда
						//продажа

						Если СуммаСкидки>0 Тогда
							//снять денег с карты
							Рез=Сам.ЗакрытьЧек(НомерТранзакцииНаСервере,2, СуммаСкидки*100);
						ИначеЕсли СуммаСкидки=0 Тогда //наценяли

							Рез=Сам.ЗакрытьЧек(НомерТранзакцииНаСервере,1, 0);
						ИначеЕсли СуммаСкидки<0 Тогда //наценяли
							//просто закрываем
							Рез=Сам.ЗакрытьЧек(НомерТранзакцииНаСервере,0, 0);

						КонецЕсли;

					ИначеЕсли Чек.Данные.КодОперации=1 Тогда
						//возврат
						Если СуммаСкидки>0 Тогда
							//добавить денег на карту
							Рез=Сам.ЗакрытьЧек(НомерТранзакцииНаСервере,2, -СуммаСкидки*100);
						ИначеЕсли СуммаСкидки=0 Тогда
							//на сервере расчитываем возврат бонуса с карты.
							Рез=Сам.ЗакрытьЧек(НомерТранзакцииНаСервере,1, 0);
						ИначеЕсли СуммаСкидки<0 Тогда //наценяли
							//просто закрываем
							Рез=Сам.ЗакрытьЧек(НомерТранзакцииНаСервере,0, 0);
						КонецЕсли;

					КонецЕсли;
				Иначе
					Рез=Сам.ЗакрытьЧек(НомерТранзакцииНаСервере,0, 0);
				КонецЕсли;





				Если Рез=0 Тогда
					Событие.Описатель.Ответ=0;
					Событие.Описатель.Ответ1=НомерТранзакцииНаСервере;
					Событие.Описатель.Ошибка="Код возврата = "+Рез+". Транзакция не записана, чек не закрыт на сервере";
				ИначеЕсли Рез=1 Тогда
					Событие.Описатель.Ответ=НомерТранзакцииНаСервере;
					Событие.Описатель.Ответ1=НомерТранзакцииНаСервере;
				ИначеЕсли Рез=-1 Тогда
					Событие.Описатель.Ответ=0;
					Событие.Описатель.Ответ1=НомерТранзакцииНаСервере;
					Событие.Описатель.Ошибка="Код возврата = "+Рез+". Транзакция не записана, чек закрыт на сервере";
				ИначеЕсли Рез=-2 Тогда
					Событие.Описатель.Ответ=0;
					Событие.Описатель.Ответ1=НомерТранзакцииНаСервере;
					Событие.Описатель.Ошибка="Код возврата = "+Рез+". Транзакция записана, чек не закрыт на сервере";

				КонецЕсли;
			КонецЕсли;

			Отработали=1;
		ИначеЕсли Команда="ПолучитьКарту" Тогда

			ИД=Событие.Описатель.Данные;
			Карта=Сам.ПолучитьКарту(СокрЛП(ИД));

			Если ПустоеЗначение(Карта)=1 Тогда
				Событие.Описатель.Ответ=0;
				Событие.Описатель.Ошибка=Сам.ПоследняяОшибка();
			Иначе
				Событие.Описатель.Ответ=1;
				Событие.Описатель.Ответ1=Карта;
			КонецЕсли;
			Отработали=1;


		КонецЕсли
	КонецЕсли;

	Если Отработали = 1 Тогда
		глСобытиеОбработано(Событие);
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции






