//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:52
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс ТабличноеПолеОтладка
//_______________________________________________________________________________________
Перем _База Экспорт;
Перем ШрифтЗаголовка Экспорт;
Перем ШрифтОсновной Экспорт;
Перем ШрифтКлюч Экспорт;
Перем ШрифтЗначение Экспорт;

Перем ЦветТекстаЗаголовка Экспорт;
Перем ЦветФонаЗаголовка Экспорт;
Перем ТаблицаОбъектов Экспорт;

Перем КонтекстВызывающейФормы Экспорт; //:ГрупповойКонтекст
Перем ИдентификаторРеквизита Экспорт;



Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции



Процедура ВыполнитьВыбор(Объект,ДопДанные="") Экспорт
	Сервис=СоздатьОбъект("Сервис");
	СписокАргументов=СоздатьОбъект("СписокЗначений");
	СписокАргументов.ДобавитьЗначение(Объект);
	СписокАргументов.ДобавитьЗначение(ДопДанные);
	Сервис.ВыполнитьПроцедуру(КонтекстВызывающейФормы, ИдентификаторРеквизита+"_ВыполнитьВыбор", СписокАргументов);
КонецПроцедуры


// функция для формирования значения цвета из составляющих (RGB)
Функция ПолучитьЦвет(Красный = 0,Зеленый = 0,Синий = 0) Экспорт
	Возврат Макс(0,Мин(255,Синий))*65536+Макс(0,Мин(255,Зеленый))*256+Макс(0,Мин(255,Красный));
КонецФункции


//Должна настраивать поля
//Переопределять обязательно

Процедура НастройкаПолей()  Экспорт



КонецПроцедуры	// НастройкаПолей


Процедура НастройкаШрифтов() Экспорт
	ФабрикаОбъектов=СоздатьОбъект("ФабрикаОбъектов");
	ШрифтОсновной 	= ФабрикаОбъектов.Шрифт("Arial", 10, 0);
	ШрифтЗаголовка 	= ФабрикаОбъектов.Шрифт("Arial", 10, 0);
	ШрифтКлюч		= ФабрикаОбъектов.Шрифт("Tahoma", 10, 0);
	ШрифтЗначение	= ФабрикаОбъектов.Шрифт("Tahoma", 12, 0);

	Сам=Сам();

	Сам.Шрифт=ШрифтОсновной;

КонецПроцедуры	// НастройкаШрифтов


//Должна заполнить таблицу значений ТаблицаОбъектов
//Переопределять обязательно
Процедура ЗаполнитьТаблицуОбъектов(Объект) Экспорт

КонецПроцедуры


Процедура УстановитьОбъектОтображения(Объект) Экспорт
	Сам=Сам();


	Сам.ЗаполнитьТаблицуОбъектов(Объект);

	Сам.НастройкаШрифтов();
	Сам.НастройкаПолей();

	Сам.ПоставщикДанных=СоздатьОбъект("ПоставщикДанныхТЗ");
	Сам.ПоставщикДанных.УстТаблицуЗначений(ТаблицаОбъектов);

КонецПроцедуры

Функция Инит(КонтекстФормы, _ИдентификаторРеквизита,Объект) Экспорт

	КонтекстВызывающейФормы=Этот(КонтекстФормы);

	ИдентификаторРеквизита=_ИдентификаторРеквизита;

	оФорма = СоздатьОбъект("Форма");
	оФорма.УстановитьФорму(КонтекстФормы.Форма);
	оФорма.СоздатьЭлементУправления(Сам(), ИдентификаторРеквизита);

	УстановитьОбъектОтображения(Объект);
	Возврат 1;
КонецФункции



Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("ТабличноеПоле");
	Сам=Сам();


	ТаблицаОбъектов=СоздатьОбъект("ТаблицаЗначений");

	ТаблицаОбъектов.НоваяКолонка("Поле","Строка");
	ТаблицаОбъектов.НоваяКолонка("Значение");

КонецПроцедуры	// Конструктор


Процедура Выбор() Экспорт
	Сам=Сам();
	ТекущийОбъект=Сам.ТекущиеДанные.Значение;
	Сам.ВыполнитьВыбор(ТекущийОбъект,Сам.ТекущиеДанные.Поле);
КонецПроцедуры

