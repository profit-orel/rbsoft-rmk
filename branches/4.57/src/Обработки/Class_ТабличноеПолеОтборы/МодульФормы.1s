//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:52
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс ТабличноеПолеОтборы
//_______________________________________________________________________________________
Перем _База Экспорт;
Перем ШрифтЗаголовка Экспорт;
Перем ШрифтОсновной Экспорт;

Перем ШрифтПоле Экспорт;
Перем ШрифтТипСравнения Экспорт;
Перем ШрифтЗначение Экспорт;

Перем ЦветТекстаЗаголовка Экспорт;
Перем ЦветФонаЗаголовка Экспорт;
Перем ТаблицаОбъектов Экспорт;



Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции



Процедура НастройкаПолей()  Экспорт


	Сам=Сам();

	Сам.Колонки.Очистить();

	Сам.Колонки.Добавить("Поле");
	Сам.Колонки.Добавить("ТипСравнения");
	Сам.Колонки.Добавить("Значение");

	Сам.ВертСкроллер=0;
	Сам.РежимВыделенияСтроки=0;
	Сам.ВертикальныеЛинии=1;
	Сам.ГоризонтальныеЛинии=1;
	Сам.СтильЗаголовков=0;
	Сам.ТаймаутБыстрогоПоиска=1;
	Сам.ТаймаутОбновления=0;
	Сам.ИзменятьПозициюКолонок=1;
	Сам.РазрешитьНачалоПеретаскивания=1;
	Сам.РазрешитьПеретаскивание=1;
	Сам.ЧередованиеЦветовСтрок=1;

	Сам.ЦветФонаЧередованияСтрок=глОбщиеФункции.ПолучитьЦвет(250,240,240);

	ЦветФонаЗаголовка=глОбщиеФункции.ПолучитьЦвет(255,250,190);
	ЦветТекстаЗаголовка=глОбщиеФункции.ПолучитьЦвет(190,185,125);


	Сам.ЦветФона=глОбщиеФункции.ПолучитьЦвет(255,255,255);
	Сам.ЦветТекста=глОбщиеФункции.ПолучитьЦвет(0,0,0);
	Сам.ЦветЛиний=глОбщиеФункции.ПолучитьЦвет(200,200,200);
	Сам.Шрифт=ШрифтОсновной;

	Сам.Колонки.Поле.Данные="Поле";
	Сам.Колонки.Поле.Заголовок="Поле отбора";
	Сам.Колонки.Поле.Ширина=30;

	Сам.Колонки.ТипСравнения.Данные="ТипСравнения";
	Сам.Колонки.ТипСравнения.Ширина=20;
	Сам.Колонки.ТипСравнения.Заголовок="Тип сравнения";


	Сам.Колонки.Значение.Данные="Значение";
	Сам.Колонки.Значение.Заголовок="Значение отбора";

КонецПроцедуры	// НастройкаПолей


Процедура НастройкаШрифтов() Экспорт
	ШрифтОсновной 	= глФабрикаОбъектов.Шрифт("Arial", 10, 0);
	ШрифтЗаголовка 	= глФабрикаОбъектов.Шрифт("Arial", 10, 0);
	ШрифтПоле= глФабрикаОбъектов.Шрифт("Tahoma", 10, 0);
	ШрифтТипСравнения= глФабрикаОбъектов.Шрифт("Tahoma", 10, 0);
	ШрифтЗначение	= глФабрикаОбъектов.Шрифт("Tahoma", 12, 0);

КонецПроцедуры	// НастройкаШрифтов

Процедура УстановитьОбъектОтображения(Структура) Экспорт
	Сам=Сам();

	ТаблицаОбъектов.УдалитьСтроки();

	Инд=0;
	Для Инд=1 по Структура.Количество() Цикл
		ИмяПоля="";
		ЗначениеПоля=Структура.Получить(Инд,ИмяПоля);
		ТаблицаОбъектов.НоваяСтрока();
		ТаблицаОбъектов.Поле = ЗначениеПоля.Имя;
		ТаблицаОбъектов.ТипСравнения = ЗначениеПоля.ПредставлениеСравнения;
		ТаблицаОбъектов.Значение = ЗначениеПоля.Значение;

		ТаблицаОбъектов.Отбор=ЗначениеПоля;
	КонецЦикла;

	Сам.НастройкаШрифтов();
	Сам.НастройкаПолей();

	Сам.ПоставщикДанных=СоздатьОбъект("ПоставщикДанныхТЗ");
	Сам.ПоставщикДанных.УстТаблицуЗначений(ТаблицаОбъектов);



КонецПроцедуры



Функция Инит(КонтекстФормы, ИдентификаторРеквизита,Структура) Экспорт

	_База.Инит(КонтекстФормы, ИдентификаторРеквизита);

	Сам=Сам();

	Сам.УстановитьОбъектОтображения(Структура);
	Возврат 1;
КонецФункции


Функция ПолучитьСписокСравнения(Отбор) Экспорт

	Сп=СоздатьОбъект("СписокЗначений");

	Если нрег(Отбор.ТипЗначения)="число" Тогда
		Сп=глСтроки.ПолучитьСписокИзСтроки("=,<>,>,<,>=,<=,in list,not in list",",");
	ИначеЕсли нрег(Отбор.ТипЗначения)="строка" Тогда
		Сп=глСтроки.ПолучитьСписокИзСтроки("=,<>,>,<,>=,<=,contains,not contains,in list,not in list",",");
	ИначеЕсли нрег(Отбор.ТипЗначения)="дата" Тогда
		Сп=глСтроки.ПолучитьСписокИзСтроки("=,<>,>,<,>=,<=,in list,not in list",",");
	ИначеЕсли лев(нрег(Отбор.ТипЗначения),7)="объект." Тогда
		Сп=глСтроки.ПолучитьСписокИзСтроки("=,<>,>,<,>=,<=,in list,not in list,in group,not in group,in groups,not in groups",",");
	ИначеЕсли лев(нрег(Отбор.ТипЗначения),11)="справочник." Тогда
		Сп=глСтроки.ПолучитьСписокИзСтроки("=,<>,in list,not in list,in group,not in group,in groups,not in groups",",");
	Иначе
		Сп=глСтроки.ПолучитьСписокИзСтроки("=,<>,in list,not in list",",");
	КонецЕсли;
	Для Инд=1 По Сп.РазмерСписка() Цикл
		Зн=Сп.ПолучитьЗначение(Инд);
		Сп.УстановитьЗначение(Инд,Зн,глОбщиеФункции.ПредставлениеСравнения(Зн));
	КонецЦикла;

	возврат Сп;
КонецФункции


Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("ТабличноеПолеСНастройками");
	Сам=Сам();


	ТаблицаОбъектов=СоздатьОбъект("ТаблицаЗначений");


	ТаблицаОбъектов.НоваяКолонка("Поле","Строка");
	ТаблицаОбъектов.НоваяКолонка("ТипСравнения");
	ТаблицаОбъектов.НоваяКолонка("Значение");
	ТаблицаОбъектов.НоваяКолонка("Отбор");

КонецПроцедуры	// Конструктор

Процедура Выбор() Экспорт
	

	Сам=Сам();
	ТекущийОбъект=Сам.ТекущиеДанные.Получить(Сам.ТекущаяКолонка.Имя);

	Если Сам.ТекущаяКолонка.Имя="ТипСравнения" Тогда
		Сп=Сам.ПолучитьСписокСравнения(Сам.ТекущиеДанные.Отбор);

		Сервис=СоздатьОбъект("Сервис");

		Зн=Сам.ТекущиеДанные.Отбор.ТипСравнения;

		Если Сервис.ВыбратьЗначение(Сп,Зн,"Тип сравнения: "+Сам.ТекущиеДанные.Отбор.Представление,1,0)=1 Тогда

			Сам.ТекущиеДанные.Отбор.ТипСравнения=Зн;


			ТаблицаОбъектов.ПолучитьСтрокуПоНомеру(Сам.ТекущаяСтрока);
			ТаблицаОбъектов.ТипСравнения=глОбщиеФункции.ПредставлениеСравнения(Зн);
			ТаблицаОбъектов.Отбор.ТипСравнения=Зн;
			Сам.ОбновитьСтроки();

		КонецЕсли;
	ИначеЕсли Сам.ТекущаяКолонка.Имя="Значение" Тогда
		Тип=Сам.ТекущиеДанные.Отбор.ТипЗначения;

		Зн=Сам.ТекущиеДанные.Отбор.Значение;
		Результат=0;
		Если Тип="строка" Тогда
			Результат= ВвестиСтроку(Зн,"Отбор: "+Сам.ТекущиеДанные.Отбор.Представление,Сам.ТекущиеДанные.Отбор.Длина);
		ИначеЕсли Тип="дата" Тогда
			Результат= ВвестиДату(Зн,"Отбор: "+Сам.ТекущиеДанные.Отбор.Представление);
		ИначеЕсли Тип="число" Тогда
			Результат= ВвестиЧисло(Зн,"Отбор: "+Сам.ТекущиеДанные.Отбор.Представление,Сам.ТекущиеДанные.Отбор.Длина,Сам.ТекущиеДанные.Отбор.Точность);
		ИначеЕсли Лев(Тип,7)="объект." Тогда

			
			
			Объект=СоздатьОбъект(Сред(Тип,8));

			
			Результат= Объект.ВыбратьОбъект(Зн);
			
		КонецЕсли;

		Если Результат=1 Тогда
			ТаблицаОбъектов.ПолучитьСтрокуПоНомеру(Сам.ТекущаяСтрока);
			ТаблицаОбъектов.Значение=Строка(Зн);
			ТаблицаОбъектов.Отбор.Значение=Зн;
			ТаблицаОбъектов.Отбор.Использовать=1;
			Сам.ОбновитьСтроки();

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ВСтроку(Значение) Экспорт
	Возврат Строка(Значение);
КонецФункции

Процедура ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) Экспорт
	Сам=Сам();

	ОформлениеСтроки.Ячейки.Поле.ОтображатьФлажок=1;

	Отбор=ДанныеСтроки.Отбор;

	Если Отбор.Использовать<>ОформлениеСтроки.Ячейки.Поле.ЗначениеФлажка Тогда
		ОформлениеСтроки.Ячейки.Поле.УстановитьФлажок(Отбор.Использовать);
	КонецЕсли;

	
	ОформлениеСтроки.Ячейки.Значение.УстановитьТекст(Строка(Отбор.Значение));

КонецПроцедуры




Процедура ПриВыбореФлажка(_СтрТП, КолТП, ТипРТП) Экспорт

	Сам=Сам();

	ТаблицаОбъектов.ПолучитьСтрокуПоНомеру(_СтрТП);

	Если ТаблицаОбъектов.Отбор.Использовать=1 Тогда
		ТаблицаОбъектов.Отбор.Использовать=0;
	Иначе
		ТаблицаОбъектов.Отбор.Использовать=1;
	КонецЕсли;


	Сам.ОбновитьСтроки();

КонецПроцедуры


Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии