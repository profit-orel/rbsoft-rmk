//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:19
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;


Перем Сервер Экспорт;//IP-адрес сервера или dns-имя
Перем Порт Экспорт;//номер IP-порта
Перем Пользователь Экспорт;
Перем Пароль Экспорт;
Перем БазаДанных Экспорт;

Перем НужноПереустановитьСоединение Экспорт;
Перем ИспользоватьСжатие Экспорт;
Перем ИспользоватьНовыеПароли Экспорт;
Перем ИспользоватьИменованныеКаналы Экспорт;
Перем ИспользоватьГнезда Экспорт;
Перем ГнездоUnix Экспорт;

Перем ДрайверSQL Экспорт;

Перем НомерОплаты;



Функция Этот(Конт) 		Возврат Конт; 			КонецФункции
Функция Сам() 			Возврат Этот(Контекст) 	КонецФункции


Функция НомерОплаты() Экспорт
	Возврат НомерОплаты;
КонецФункции

Функция Вид() Экспорт
	Возврат "Драйвер.RBSOFT_CARDS";
КонецФункции	// гл

Процедура Конструктор()
    _База = Этот(Контекст).ПолучитьБазовыйКласс("Драйвер");


	ДрайверSQL=СоздатьОбъект("AddIn.MySQLConnection");


	НужноПереустановитьСоединение=1;
	ИспользоватьСжатие=1;
	ИспользоватьИменованныеКаналы=0;
	ИспользоватьГнезда=0;
	БазаДанных="rbsoft_cards";

	Сервер="localhost";
	Порт=3306;
	Пользователь="rmk";
	Пароль="1";
	ГнездоUnix="";
	НомерТекущегоУстройства=0;

КонецПроцедуры

Процедура Деструктор()
	Попытка

		Если ДрайверSQL.Подключен() = 1 Тогда
	    	ДрайверSQL.ЗакрытьСоединение();
			ДрайверSQL=0;
    	КонецЕсли;
	Исключение
	КонецПопытки;

КонецПроцедуры

Функция УстановитьСоединение() Экспорт
	Сам=Сам();


	ДрайверSQL.Сервер = Сервер;
	ДрайверSQL.Пользователь = Пользователь;
	ДрайверSQL.Пароль = Пароль;
	ДрайверSQL.Порт = Порт;
	ДрайверSQL.БазаДанных = БазаДанных;

	ДрайверSQL.НужноПереустановитьСоединение = НужноПереустановитьСоединение;
	ДрайверSQL.ИспользоватьСжатие = ИспользоватьСжатие;
	ДрайверSQL.ИспользоватьНовыеПароли = ИспользоватьНовыеПароли;
	ДрайверSQL.ИспользоватьИменованныеКаналы = ИспользоватьИменованныеКаналы;
	ДрайверSQL.ИспользоватьГнезда = ИспользоватьГнезда;
	ДрайверSQL.ГнездоUnix=ГнездоUnix;
	Если ДрайверSQL.УстановитьСоединение() = 1 Тогда
		возврат 1;
	Иначе
		Сам.УстановитьКодИОшибку(12000,"Неудачная попытка соединения: "+ДрайверSQL.ПоследняяОшибка());
		возврат 0;
	КонецЕсли;
КонецФункции


Функция КоличествоЛУ() Экспорт
	возврат 1;
КонецФункции

Функция ДобавитьУстройство() Экспорт
	возврат 1;
КонецФункции

Функция НормализоватьДату(_Дата) Экспорт
	возврат СтрЗаменить(Формат(_Дата,"ДГГГГММДД"),".","");
КонецФункции

Функция НормализоватьВремя(_Время) Экспорт
	возврат _Время;
КонецФункции


//возвращает текущий остаток на карте
//-1 - ошибка на сервере
Функция ПолучитьОстаток(ИДКарты,ИДОперации=0) Экспорт

	Сам=Сам();

	Сам.СброситьОшибку();

	ТекстЗапроса="SELECT GetBalance("+ИДОперации+",'"+ИДКарты+"');";

	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		Остаток=Число(ДрайверSQL.ПолучитьЗначение(0));
		Если Остаток=-100000000 Тогда
			Сам.УстановитьКодИОшибку("Ошибка при выполнении запроса остатка.");
			Возврат -1;
		КонецЕсли;
		Остаток=Остаток/100;
		Возврат Остаток;
	Иначе
		Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
		Возврат -1;
	КонецЕсли;
КонецФункции

Функция ПолучитьКарту(ИД) Экспорт
	Сам=Сам();
	Если ИД="" Тогда
		Сам.УстановитьОшибку("Попытка поиска карты с пустым ИД");
		Возврат 0;
	КонецЕсли;
	//ТекстЗапроса="select * from cards where id_card='"+ИД+"' limit 1;";
	ТекстЗапроса="SELECT * FROM cards left join owners on (cards.owner=owners.id_owner) where cards.id_card='"+ИД+"' limit 1;";

	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		ТабРез = ДрайверSQL.ПолучитьВсе();
		Если ТабРез.КоличествоСтрок()=0 Тогда

			Сам.УстановитьОшибку("Карта не найдена на сервере RB-SOFT CARDS. ИД="""+ИД+"""");

			Возврат 0;
		Иначе

			ТабРез.ПолучитьСтрокуПоНомеру(1);
			Карта=НовыйОбъект("ПлатежнаяКарта");

			Карта.ИД			=ТабРез.ID_Card;


			Карта.Активность	=ТабРез.Active;
			Карта.ВладелецКод	=ТабРез.Owner;
			Карта.ПроцентСкидки =ТабРез.Discount;

			Имя	= СокрЛП(ТабРез.Name);
			Фамилия=СокрЛП(ТабРез.Family);

			Карта.ВладелецИмя=""+Имя+" "+Фамилия;


			Карта.ТипСкидки=ТабРез.IsDiscount;
			Карта.ЭтоПлатежнаяКарта=ТабРез.IsPay;

			Карта.ДатаАктивации=ТабРез.ActivatedTime;
			Карта.ДатаБлокировки=ТабРез.BlockedTime;


			Карта.ТекущийОстаток = ПолучитьОстаток(ИД);
			Карта.ДатаТекущегоОстатка=ТекущаяДата();
			Карта.ВремяТекущегоОстатка=ТекущееВремя();
			Карта.ОстатокНаДату=ТабРез.Balance/100;
			Карта.ДатаОстатка=ТабРез.BalanceTime;

			Карта.ДатаАктивации=ТабРез.ActivatedTime;
			Карта.ДатаБлокировки=ТабРез.BlockedTime;

			Карта.Номинал=ТабРез.Nominal/100;
			//Зарезервировано
			Карта.ТекущийОборот=0;
			Карта.ТекущаяСуммаСкидок=0;

			Сам.СброситьОшибку();

			Возврат Карта;
		КонецЕсли;
	Иначе
		Сам.УстановитьОшибку(ДрайверSQL.ПоследняяОшибка());
	КонецЕсли;
	возврат 0;
КонецФункции



Функция Оплатить(НомерОперации,ИДКарты,_СуммаПлатежа,СуммаПрошла=0) Экспорт

	Сам=Сам();

	СуммаПлатежа=_СуммаПлатежа*100;

	Если СуммаПлатежа=0 Тогда
		Сам.УстановитьКодИОшибку(12006,"Нулевые платежи запрещены.");
		Возврат 0;
	КонецЕсли;


	Карта=0;
	Если ИДКарты="" Тогда
		Сам.УстановитьКодИОшибку(12006,"Нет ИД карты.");
		Возврат 0;
	ИначеЕсли НомерОперации=0 Тогда
		Сам.УстановитьКодИОшибку(12006,"Нет номера операции.");
		Возврат 0;
	Иначе
		Карта=Сам.ПолучитьКарту(ИДКарты);
		Если ПустоеЗначение(Карта)=0 Тогда
			Если Карта.Активность=0 Тогда
				Сам.УстановитьОшибку("Карта не активна. ИД="+ИДКарты);
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;


	ТекстЗапроса="select InsertTempTransaction("+НомерОперации+",'"+ИДКарты+"','"+
	НормализоватьДату(ТекущаяДата())+"','"+НормализоватьВремя(ТекущееВремя())+"',"+СуммаПлатежа+")";
	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда

		Рез=Число(ДрайверSQL.ПолучитьЗначение(0));

		//4 - карта не найдена
		//3 - карта неактивная
		//2 - не хватает баланса
		//0 - не удалось произвести запись, баланс нормальный, карта активная
		//>0 -Новый ИД записи- все ОК


		Если Рез>0 Тогда
			СуммаПрошла=СуммаПлатежа/100;
			Сам.СброситьОшибку();
			Возврат 1;
		ИначеЕсли Рез=0 Тогда
			Сам.УстановитьКодИОшибку(12001,"Не удалось произвести запись.");
			Возврат 0;
		ИначеЕсли Рез=-2 Тогда
			Сам.УстановитьКодИОшибку(12002,"Не хватает денег на карте.");
			Возврат 0;

		ИначеЕсли Рез=-3 Тогда
			Сам.УстановитьКодИОшибку(12003,"Карта не активная.");
			Возврат 0;

		ИначеЕсли Рез=-4 Тогда
			Сам.УстановитьКодИОшибку(12004,"Нет карты в базе данных.");
			Возврат 0;
		Иначе
			Сам.УстановитьКодИОшибку(12005,"Ошибка № "+Рез);
			Возврат 0;
		КонецЕсли;
		Возврат Рез;
	Иначе
		Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
	КонецЕсли;
	возврат 0;
КонецФункции

Функция Вернуть(НомерОперации,ИД,_СуммаПлатежа) Экспорт
	Сам=Сам();

	СуммаПлатежа=_СуммаПлатежа*100;

	Если СуммаПлатежа=0 Тогда
		Сам.УстановитьКодИОшибку(12006,"Нулевые платежи запрещены.");
		Возврат 0;
	КонецЕсли;


	ТекстЗапроса="select PayBack("+НомерОперации+",'"+ИД+"',"+СуммаПлатежа+",'"+НормализоватьДату(ТекущаяДата())+"','"+НормализоватьВремя(ТекущееВремя())+"');";
	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		Рез=Число(ДрайверSQL.ПолучитьЗначение(0));
		Если Рез=0 Тогда
			Сам.УстановитьКодИОшибку(12000000,"Сумма операции превышает допустимую.");
			Возврат 0;
		Иначе
			Возврат 1;
		КонецЕсли;

	Иначе
		Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
	КонецЕсли;
	возврат 0;

КонецФункции



//возвращает номер операции
//0 - невозможно начать операцию
Функция НачатьОперацию() Экспорт

	_КодПользователя="";
	_ИмяПользователя="";

	Попытка
		Если ПустоеЗначение(Пользователь)=0 Тогда
			_КодПользователя=глПраваДоступа.ТекущийПользователь.Наименование;
			_ИмяПользователя=глПраваДоступа.ТекущийПользователь.ИД;
		КонецЕсли;
	Исключение
	КонецПопытки;

	НомерОплаты=глПолучитьНовыйНомерОплаты();

	ТекстЗапроса="select OpenOperation('"+глИмяPOS+"','"+_КодПользователя+"','"+НормализоватьДату(ТекущаяДата())+"','"+НормализоватьВремя(ТекущееВремя())+"',"+НомерОплаты+");";
	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		Рез=Число(ДрайверSQL.ПолучитьЗначение(0));
		Возврат Рез;
	КонецЕсли;
	Сам=Сам();
	Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
	возврат 0;
КонецФункции

Функция ЗавершитьОперацию(НомерОперации) Экспорт

	Сам=Сам();
	ТекстЗапроса="select CloseOperation("+НомерОперации+");";
	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		Рез=Число(ДрайверSQL.ПолучитьЗначение(0));
		Если Рез=0 Тогда
			Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
		КонецЕсли;
		НомерОплаты=0;
		Возврат Рез;
	Иначе
		Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
	КонецЕсли;
	возврат 0;
КонецФункции

Функция ОтменитьОперацию(НомерОперации) Экспорт
	Сам=Сам();

	ТекстЗапроса="select DeleteTransaction("+НомерОперации+");";
	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		Рез=Число(ДрайверSQL.ПолучитьЗначение(0));
		Если Рез=0 Тогда
			Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
		КонецЕсли;
		НомерОплаты=0;
		Возврат Рез;
	Иначе
		Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
	КонецЕсли;
	возврат 0;
КонецФункции

//возврат 0/1
//если 1 - то в ТаблшицаПлатежей - ТЗ с платежами

Функция ПолучитьПлатежиПоКарте(КодКарты,_Дата,ТаблицаПлатежей) Экспорт

	Сам=Сам();

	ТекстЗапроса="select * from transactions where ((id_card = '"+КодКарты+"') and (transactions.date = '"+НормализоватьДату(_Дата)+"'));";
	Если ДрайверSQL.ВыполнитьЗапрос(ТекстЗапроса)=1 Тогда
		ТаблицаПлатежей = ДрайверSQL.ПолучитьВсе();

		Если ТаблицаПлатежей.КоличествоСтрок()>0 Тогда


			Пока ТаблицаПлатежей.ПолучитьСтроку()=1 Цикл
				ТаблицаПлатежей.Summa=ТаблицаПлатежей.Summa/100;
			КонецЦикла;

			Возврат 1;
		КонецЕсли;
		Сам.УстановитьКодИОшибку(12000000,"Нет платежей за дату "+_Дата);
		Возврат 0;
	Иначе
		Сам.УстановитьКодИОшибку(12000000+ДрайверSQL.НомерПоследнейОшибки(),ДрайверSQL.ПоследняяОшибка());
	КонецЕсли;

	возврат 0;

КонецФункции













