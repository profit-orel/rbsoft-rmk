//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:19
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;

Перем Режим Экспорт; //Перечисление.РежимыРМК

Перем КонтекстВызывающейФормы Экспорт;

Перем ТаблицаТоваров Экспорт;//Индексированная таблица с товарам чека
Перем ТаблицаОплаты Экспорт;
Перем ТаблицаЧеков Экспорт;//Индексированная таблица с документами чек ККМ


Перем ТабличноеПолеРМК Экспорт; //Табличное поле
Перем ПД_ТаблицаТоваров Экспорт;//Поставщик данных для табличного поля
Перем ТабличноеПолеИтогов Экспорт;//ссылка на экземпляр класса
Перем ТабличноеПолеИтоговОплаты Экспорт;//ссылка на экземпляр класса
Перем ТабличноеПолеЖурналЧеков Экспорт;//ссылка на экземпляр класса
Перем ТабличноеПолеОплаты  Экспорт;//ссылка на экземпляр класса
Перем ТабличноеПолеВыработкиПродавцов  Экспорт;//ссылка на экземпляр класса


Перем Покупатель Экспорт; //Структура с описанием покупателя
Перем Продавец Экспорт; //Структура Пользователь.

Перем ДисконтнаяСистема Экспорт;//ссылка на класс ДисконтнаяСистема

Перем Доставка Экспорт;//Структура с описанием параметров доставки товара

Перем РедакторСтроки Экспорт;//Класс-редактор текста. Отрабатывает клавиатурный ввод в режиме товары


Перем Режимы; //СписокЗначений с последовательностью режимов

Перем ГруппироватьТовары; //Число, 0..2 .
//0- все товары отдельной строкой
//1- группировать товары с одинаковым ШК при добавлении товара в чек. если разные шк то товары разными строками. если одинаковые то суммируются в одну строку
//2- группировать товары с одинаковым кодом при добавлении товара в чек. если разные ШК то товары группируются в одну строку


Перем РегистрироватьПродавцов; //Число, 0/1 .. 1 - обязательная регистрация продавца каждого чека.
Перем РегистрироватьСервис;    //Число, 0/1 .. 1 - обязательная регистрация пост продажного сервиса. (Установка, доставка)

Перем ВводОплаты Экспорт;

Перем СтараяСуммаСдачи Экспорт;

Перем Прогресс Экспорт;//Прогрессбар


Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции




Функция ОткрытыйЧек() Экспорт
	Если (ТаблицаОплаты.КоличествоСтрок()>0)Или(ТаблицаТоваров.КоличествоСтрок()>0) Тогда
		Возврат 1;
	КонецЕсли;
	Возврат 0;
КонецФункции

//------------------------------------ ------------------------------------
Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("Объект");
	Сам=Сам();

	ТаблицаТоваров=НовыйОбъект("ТаблицаТоваровРМК");
	ТаблицаОплаты=НовыйОбъект("ТаблицаОплатыРМК");
	ТаблицаЧеков=НовыйОбъект("ТаблицаЧековРМК");

	Покупатель=НовыйОбъект("Покупатель");
	Доставка=НовыйОбъект("ПараметрыДоставки");

	СтараяСуммаСдачи=0;

	ВводОплаты=СоздатьОбъект("ВидОплаты");

	ДисконтнаяСистема=СоздатьОбъект("ДисконтнаяСистема");
	ДисконтнаяСистема.Инит(Сам);

	Режим=Перечисление.РежимыРМК.Товары;

	Режимы=СоздатьОбъект("СписокЗначений");

	Режимы.ДобавитьЗначение(Перечисление.РежимыРМК.Товары);
	Режимы.ДобавитьЗначение(Перечисление.РежимыРМК.Оплаты);

	РегистрироватьСервис=0;


	РегистрироватьПродавцов=глНастройки.ПолучитьКакЧисло("SETTINGS/REGISTERSELLER");

	Если РегистрироватьПродавцов=1 Тогда
		Режимы.ДобавитьЗначение(Перечисление.РежимыРМК.Продавцы);
	КонецЕсли;


	РегистрироватьСервис=глНастройки.ПолучитьКакЧисло("SETTINGS/REGISTERSERVICE");

	Если РегистрироватьСервис=1 Тогда
		Режимы.ДобавитьЗначение(Перечисление.РежимыРМК.Сервис);
	КонецЕсли;


	Режимы.ДобавитьЗначение(Перечисление.РежимыРМК.Журнал);

	РедакторСтроки=СоздатьОбъект("РедакторСтроки");


	ГруппироватьТовары=глНастройки.ПолучитьКакЧисло("SETTINGS/GROUPGOODS");


	глПодписатьсяНаСобытия(Сам);
КонецПроцедуры // Конструктор

//------------------------------------ ------------------------------------
Процедура Деструктор()

КонецПроцедуры // Деструктор


Процедура УстановитьКонтекст(пКонтекстФормы) Экспорт
	_База.УстановитьКонтекст(пКонтекстФормы);
	РедакторСтроки.УстановитьКонтекст(пКонтекстФормы);
КонецПроцедуры

Процедура Инит(_Контекст) Экспорт

	Сам=Сам();

	КонтекстВызывающейФормы=_Контекст;

	ПД_ТаблицаТоваров=СоздатьОбъект("ПоставщикДанныхТЗ");
	ПД_ТаблицаТоваров.УстТаблицуЗначений(ТаблицаТоваров);


	ТабличноеПолеРМК=СоздатьОбъект("ТабличноеПолеРМК");
	ТабличноеПолеРМК.Инит(_Контекст,"ТП_ТаблицаТоваров",ПД_ТаблицаТоваров,Сам);

	ТабличноеПолеИтогов=СоздатьОбъект("ТабличноеПолеИтогов");
	ТабличноеПолеИтогов.Инит(_Контекст,"ТП_ТаблицаИтогов");


	ТабличноеПолеИтоговОплаты=СоздатьОбъект("ТабличноеПолеИтоговОплаты");
	ТабличноеПолеИтоговОплаты.Инит(_Контекст,"ТП_ТаблицаИтоговОплаты");


	ТабличноеПолеЖурналЧеков=СоздатьОбъект("ТабличноеПолеЖурналЧеков");
	ТабличноеПолеЖурналЧеков.Инит(_Контекст,"ТП_ЖурналЧеков",ТабличноеПолеИтогов,ТабличноеПолеИтоговОплаты);

	ТабличноеПолеОплаты=СоздатьОбъект("ТабличноеПолеФормыОплаты");
	ТабличноеПолеОплаты.Инит(_Контекст,"кнТабличноеПолеОплаты",Сам);

	ТабличноеПолеВыработкиПродавцов=СоздатьОбъект("ТабличноеПолеВыработкиПродавцов");
	ТабличноеПолеВыработкиПродавцов.Инит(_Контекст,"кнТабличноеПолеВыработкиПродавцов",Сам);

КонецПроцедуры


//расчитать сумму текущего чека
Процедура РасчитатьСуммы() Экспорт
	Сам=Сам();

	ТаблицаТоваров.ВыбратьСтроки();
	Пока ТаблицаТоваров.ПолучитьСтроку()=1 Цикл
		ТаблицаТоваров.Сумма=Окр(ТаблицаТоваров.Цена*ТаблицаТоваров.Количество*ТаблицаТоваров.Коэффициент,2,1);
		ТаблицаТоваров.ПроцентАвтоматическойСкидки=0;
		ТаблицаТоваров.Всего=ТаблицаТоваров.Сумма;
	КонецЦикла;

	ДисконтнаяСистема.РасчитатьСкидки();

	Сам.ТребуетсяОтображение();
КонецПроцедуры

//произвести действия по выбору товара
//Товар      - объект - товар
//Единица    - строка
//Количество - количество товара
Процедура ВыборТовара(_Товар,Штрихкод="",Единица="",Количество=1,Коэффициент=1) Экспорт
	Сам=Сам();
	глОбменДанными.ОтключитьОжиданиеЗагрузки();

	Если ТипЗначенияСтр(_Товар)<>"Структура" Тогда
		Товар=_Товар.Данные;
	Иначе
		Товар=_Товар;
	КонецЕсли;

	Добавлять=1;

	Если ГруппироватьТовары=1 Тогда
		//1- группировать товары с одинаковым ШК при добавлении товара в чек. если разные шк то товары разными строками. если одинаковые то суммируются в одну строку
		Добавлять=1;
		Если ПустаяСтрока(Штрихкод)=0 Тогда

			ТаблицаТоваров.ВыбратьСтроки();
			Пока ТаблицаТоваров.ПолучитьСтроку()=1 Цикл
				Если ТаблицаТоваров.Штрихкод=Штрихкод Тогда
					Если ТаблицаТоваров.Коэффициент=Коэффициент Тогда
						ТаблицаТоваров.Количество=ТаблицаТоваров.Количество+Количество;
						Добавлять=0;
						ТабличноеПолеРМК.ТекущаяСтрока=ТаблицаТоваров.НомерСтроки;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ГруппироватьТовары=2 Тогда
		//2- группировать товары с одинаковым кодом при добавлении товара в чек. если разные ШК то товары группируются в одну строку
		ТаблицаТоваров.ВыбратьСтроки();
		Пока ТаблицаТоваров.ПолучитьСтроку()=1 Цикл
			Если ТаблицаТоваров.Код=Товар.ИД Тогда

				Если ТаблицаТоваров.Коэффициент=Коэффициент Тогда
					ТаблицаТоваров.Количество=ТаблицаТоваров.Количество+Количество;

					ТабличноеПолеРМК.ТекущаяСтрока=ТаблицаТоваров.НомерСтроки;
					Добавлять=0;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;


	Если Добавлять=1 Тогда
		//0- все товары отдельной строкой
		ТаблицаТоваров.НоваяСтрока();
		ТаблицаТоваров.Код=Товар.ИД;
		ТаблицаТоваров.Артикул=Товар.Артикул;
		ТаблицаТоваров.Наименование=Товар.Наименование;
		ТаблицаТоваров.Штрихкод=Штрихкод;
		ТаблицаТоваров.НомерЗаказа=0;
		ТаблицаТоваров.Подготовлен=0;
		ТаблицаТоваров.Отгружен=0;
		ТаблицаТоваров.ТребуетсяДоставка=0;
		ТаблицаТоваров.Товар=Товар;
		ТаблицаТоваров.КодФирмы=Товар.КодФирмы;

		//ТаблицаТоваров.Характеристика="";
		//ТаблицаТоваров.Серия="";

		ТаблицаТоваров.Единица=Единица;

		Если ПустаяСтрока(ТаблицаТоваров.Единица)=1 Тогда
			ТаблицаТоваров.Единица="шт";
		КонецЕсли;

		ТаблицаТоваров.Коэффициент = Коэффициент;

		Если ТаблицаТоваров.Коэффициент = 0 Тогда
			ТаблицаТоваров.Коэффициент=1;
		КонецЕсли;

		ТаблицаТоваров.Количество = Количество;


		Если глНастройки.ПолучитьКакЧисло("FR/DEMOMODE")=1 Тогда
			ТаблицаТоваров.Цена=0.01;
			ТаблицаТоваров.ЦенаПрайса=0.01;

		Иначе
			ТаблицаТоваров.Цена=Товар.Цена;
			ТаблицаТоваров.ЦенаПрайса=Товар.Цена;

		КонецЕсли;

		ТаблицаТоваров.ПроцентРучнойСкидки =0;
		ТаблицаТоваров.ПроцентАвтоматическойСкидки=0;

		//ТаблицаТоваров.Продавец
		//ТаблицаТоваров.МестоОтгрузки
		//ТаблицаТоваров.ККМ
		ТаблицаТоваров.НомерЧекаВЗаказе=0;
		ТаблицаТоваров.СхемыСкидок=Товар.СхемаСкидок;


		ТабличноеПолеРМК.ТекущаяСтрока=ТаблицаТоваров.НомерСтроки;
	КонецЕсли;



	Сам.РасчитатьСуммы();

	Сам.ТребуетсяОтображение();

	Сам.ОбновитьФорму();

	СтрокаЧека=НовыйОбъект("СтрокаЧека");
	СтрокаЧека.Товар=Товар;
	СтрокаЧека.Наименование=Товар.Наименование;
	СтрокаЧека.Количество=Количество;


	Если глНастройки.ПолучитьКакЧисло("FR/DEMOMODE")=1 Тогда
		СтрокаЧека.Цена=0.01;
	Иначе
		СтрокаЧека.Цена=Товар.Цена;
	КонецЕсли;


	СтрокаЧека.Сумма=ТаблицаТоваров.Сумма;
	СтрокаЧека.Скидка=ТаблицаТоваров.Скидка;
	СтрокаЧека.СуммаЧека=ТаблицаТоваров.Итог("Всего");

	Попытка
		глПослатьКоманду(Сам,"Дисплей_ВывестиСтрокуЧека",СтрокаЧека,"Оборудование");
	Исключение
	КонецПопытки;


КонецПроцедуры

//ДисконтнаяКарта - объект ДисконтнаяКарта
Процедура ВыборДисконтнойКарты(_ДисконтнаяКарта) Экспорт
	Сам=Сам();

	ДисконтнаяСистема.УстановитьДисконтнуюКарту(_ДисконтнаяКарта);

	Сам.ТребуетсяОтображение();
КонецПроцедуры

//описать действия по событию сканера
//возвращает 1- событие обработано, дальнейшая обработка в подписчиках на событие не требуется
//           0- можно продолжиь дальнейшую обработку события
Функция СобытиеСканера(Событие) Экспорт
	Сам=Сам();
	Если Событие.Источник="Сканер" Тогда

		Если ПустоеЗначение(Событие.Описатель.Объект)=1 Тогда
			глПредупреждение("Не найден объект по штрихкоду "+Событие.Описатель.Данные);
		Иначе
			Если Событие.Описатель.ТипОбъекта="Товар" Тогда
				ВыборТовара(Событие.Описатель.Объект,Событие.Описатель.Данные,Событие.Описатель.Единица,Событие.Описатель.Количество,Событие.Описатель.Коэффициент);
				Возврат 1;
			ИначеЕсли Событие.Описатель.ТипОбъекта="Пользователь" Тогда
				Пользователь=Событие.Описатель.Объект;
				Если Пользователь.Активный=1 Тогда

					глПраваДоступа.УстановитьПользователя(Пользователь);
				Иначе
					Продавец=Пользователь;
				КонецЕсли;


				Возврат 1;
			ИначеЕсли Событие.Описатель.ТипОбъекта="ИДКарта" Тогда

				Сам.ВыборДисконтнойКарты(Событие.Описатель.Объект);
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат 0;
КонецФункции

//описать действия по событию ридера карточек
//возвращает 1- событие обработано, дальнейшая обработка в подписчиках на событие не требуется
//           0- можно продолжиь дальнейшую обработку события

Функция СобытиеРидера(Событие) Экспорт
	Сам=Сам();
	Если Событие.Источник="Ридер" Тогда

		Если ПустоеЗначение(Событие.Описатель.Объект)=1 Тогда

			Если глНастройки.ПолучитькакЧисло("CARDS/ShowMagneticReaderData")=1 Тогда
				глПредупреждение("Не найден объект по данным ридера.
				|"+Событие.Описатель.Данные);
			Иначе
				глПредупреждение("Не найден объект по данным ридера.");
			КонецЕсли;

		Иначе

			Если Событие.Описатель.ТипОбъекта="Пользователь" Тогда
				Пользователь=Событие.Описатель.Объект;
				Если Пользователь.Активный=1 Тогда

					глПраваДоступа.УстановитьПользователя(Пользователь);
				Иначе
					Продавец=Пользователь;
				КонецЕсли;
				Возврат 1;
			ИначеЕсли Событие.Описатель.ТипОбъекта="ИДКарта" Тогда

				Сам.ВыборДисконтнойКарты(Событие.Описатель.Объект);
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат 0;
КонецФункции

//описать действия по событию механического ключа
//возвращает 1- событие обработано, дальнейшая обработка в подписчиках на событие не требуется
//           0- можно продолжиь дальнейшую обработку события

Функция СобытиеКлюча(Событие) Экспорт
	Сам=Сам();
	Если Событие.Источник="Ключ" Тогда

		Если Событие.Описатель.ТипОбъекта="Пользователь" Тогда
			Пользователь=Событие.Описатель.Объект;
			Если Пользователь.Активный=1 Тогда

				глПраваДоступа.УстановитьПользователя(Пользователь);
			Иначе
				Продавец=Пользователь;
			КонецЕсли;
			Возврат 1;
		КонецЕсли;
	КонецЕсли;
	Возврат 0;
КонецФункции

//описать действия по событию радиоридера (проксимити)
//возвращает 1- событие обработано, дальнейшая обработка в подписчиках на событие не требуется
//           0- можно продолжиь дальнейшую обработку события

Функция СобытиеРадиоРидера(Событие) Экспорт
	Сам=Сам();

	СобытиеОбработано=0;

	Если СобытиеОбработано=1 Тогда
		глСобытиеОбработано(Событие);
		Сам.ТребуетсяОтображение();
		Возврат 1;
	КонецЕсли;
	Возврат 0;
КонецФункции

//описать действия по событию от клавиатуры
//возвращает 1- событие обработано, дальнейшая обработка в подписчиках на событие не требуется
//           0- можно продолжить дальнейшую обработку события

Функция СобытиеКлавиатуры(Событие) Экспорт
	Сам=Сам();
	Если Событие.Источник="Клавиатура" Тогда

		Если Событие.Обработано=0 Тогда
			Команда=глДрайверы.Клавиатура.ПолучитьКоманду(Событие.Описатель.Данные,Режим);
			Если Команда<>"" Тогда
				СобытиеКоманда=глПослатьКоманду(Сам,Команда);
				Возврат СобытиеКоманда.Обработано;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	возврат 0;
КонецФункции

Процедура  Сброс() Экспорт
	Сам=Сам();

	ТаблицаОплаты.УдалитьСтроки();
	ТаблицаТоваров.УдалитьСтроки();
	ТаблицаЧеков.УдалитьСтроки();
	ДисконтнаяСистема.Сброс();


	Покупатель=0;
	Продавец="";


	ТабличноеПолеОплаты.Сброс();
	РедакторСтроки.Сброс();

	глОбменДанными.ВключитьОжиданиеЗагрузки();

	Сам.ОбновитьФорму();
КонецПроцедуры


Функция ВыбратьТоварИзСписка(ТЗ,ВыбТовар) Экспорт
	Если глОбщиеФункции.ВыбратьИзТаблицы(ТЗ,"Объект",ВыбТовар,"Выберите товар",,,
	"ID,IDPARENT,IDFULL,LEVEL,NAME,DISCOUNT,MINPRICE,MAXDISC,IDDISC,ISWEIGHT,ISFREE,ISPRESENT,IDTAXGROUP,FIRMCODE,SECTION,Объект")=1 Тогда
		Возврат 1;
	КонецЕсли;
	Возврат 0;
КонецФункции


Процедура ОбновитьТаблицуОплатыРМК() Экспорт
	ТаблицаОплаты.УдалитьСтроки();

	ТабличноеПолеОплаты.ТаблицаОбъектов.ВыбратьСтроки();
	Пока ТабличноеПолеОплаты.ТаблицаОбъектов.ПолучитьСтроку()=1 Цикл
		Если ТабличноеПолеОплаты.ТаблицаОбъектов.Сумма>0 Тогда
			ТаблицаОплаты.НоваяСтрока();

			ТаблицаОплаты.ИД=ТабличноеПолеОплаты.ТаблицаОбъектов.ИД;
			ТаблицаОплаты.Наименование=ТабличноеПолеОплаты.ТаблицаОбъектов.Наименование;
			ТаблицаОплаты.Сумма=ТабличноеПолеОплаты.ТаблицаОбъектов.Сумма;
			ТаблицаОплаты.КодФирмы=ТабличноеПолеОплаты.ТаблицаОбъектов.КодФирмы;
			ТаблицаОплаты.ОплатаПроведена=ТабличноеПолеОплаты.ТаблицаОбъектов.ОплатаПроведена;
			ТаблицаОплаты.ВремяОплаты=ТабличноеПолеОплаты.ТаблицаОбъектов.ВремяОплаты;
			ТаблицаОплаты.ККМ=ТабличноеПолеОплаты.ТаблицаОбъектов.ККМ;
			ТаблицаОплаты.НомерЧекаВЗаказе=ТабличноеПолеОплаты.ТаблицаОбъектов.НомерЧекаВЗаказе;
			ТаблицаОплаты.Сумма=ТабличноеПолеОплаты.ТаблицаОбъектов.Сумма;
			ТаблицаОплаты.Объект=ТабличноеПолеОплаты.ТаблицаОбъектов.Объект;
			ТаблицаОплаты.НомерОперации=ТабличноеПолеОплаты.ТаблицаОбъектов.НомерОперации;

		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ТекущийРежим() Экспорт
	Возврат Режим;
КонецФункции

Процедура УстановитьРежим(_Режим) Экспорт
	Сам=Сам();

	СуммаВРедакторе=0;
	Если Режим=Перечисление.РежимыРМК.Оплаты Тогда
		Сам.ОбновитьТаблицуОплатыРМК();
	ИначеЕсли Режим=Перечисление.РежимыРМК.Товары Тогда
		СуммаВРедакторе=РедакторСтроки.КакЧисло();
	КонецЕсли;

	Режим=_Режим;



	глОчиститьПодписку();
	глПодписатьсяНаСобытия(Сам);

	Если Режим=Перечисление.РежимыРМК.Товары Тогда


		РедакторСтроки.Сброс();
		РедакторСтроки.КоличествоДесятичныхЗнаков(3);
		РедакторСтроки.РазрешитьВедущиеНули();


		глПодписатьсяНаСобытия(ТабличноеПолеРМК);
		глПодписатьсяНаСобытия(РедакторСтроки);

		Если (ТаблицаТоваров.КоличествоСтрок()=0) И (ТаблицаОплаты.КоличествоСтрок()=0) Тогда
			Попытка
				глПослатьКоманду(Сам,"Дисплей_Приветствие",,"Оборудование");
			Исключение
			КонецПопытки;

		КонецЕсли;

		Если Сам.ОткрытыйЧек()=0 Тогда
			глОбменДанными.ВключитьОжиданиеЗагрузки();
		Иначе
			глОбменДанными.ОтключитьОжиданиеЗагрузки();
		КонецЕсли;

	ИначеЕсли Режим=Перечисление.РежимыРМК.ВозвратПоПлатежнойСистеме Тогда
		глОчиститьПодписку();
		глОбменДанными.ОтключитьОжиданиеЗагрузки();
	ИначеЕсли Режим=Перечисление.РежимыРМК.ОплатаПоПлатежнойСистеме	 Тогда
		глОчиститьПодписку();
		глОбменДанными.ОтключитьОжиданиеЗагрузки();


		СЗУстройства=глДрайверы.ПолучитьСписокУстройств("Устройство.ПлатежнаяСистема");
		Для Инд=1 По СЗУстройства.РазмерСписка() Цикл
			Устройство=СЗУстройства.ПолучитьЗначение(Инд);
			глПодписатьсяНаСобытия(Устройство);
		КонецЦикла;

	ИначеЕсли Режим=Перечисление.РежимыРМК.Продавцы Тогда

		глПодписатьсяНаСобытия(ТабличноеПолеВыработкиПродавцов);

		Если Сам.ОткрытыйЧек()=0 Тогда
			глОбменДанными.ВключитьОжиданиеЗагрузки();
		Иначе
			глОбменДанными.ОтключитьОжиданиеЗагрузки();
		КонецЕсли;

	ИначеЕсли Режим=Перечисление.РежимыРМК.Оплаты Тогда

		глОбменДанными.ОтключитьОжиданиеЗагрузки();

		РедакторСтроки.Сброс();
		РедакторСтроки.КоличествоДесятичныхЗнаков(2);
		РедакторСтроки.ЗапретитьВедущиеНули();
		Если СуммаВРедакторе>0 Тогда


			Есть=0;
			ТаблицаОплаты.ВыбратьСтроки();
			Пока ТаблицаОплаты.Получитьстроку()=1 Цикл
				Если ТаблицаОплаты.ИД="0" Тогда
					ТаблицаОплаты.Сумма=СуммаВРедакторе;
					Есть=1;
					Прервать;
				КонецЕсли;
			КонецЦикла;

			Если Есть=0 Тогда
				ТаблицаОплаты.НоваяСтрока();
				ТаблицаОплаты.Сумма=СуммаВРедакторе;
				ТаблицаОплаты.ИД="0";
				ТаблицаОплаты.Наименование="Наличные";
				ТаблицаОплаты.КодФирмы="";
				ТаблицаОплаты.ОплатаПроведена=1;
				ТаблицаОплаты.ВремяОплаты=ТекущееВремя();
				ТаблицаОплаты.ККМ="";
				ТаблицаОплаты.НомерЧекаВЗаказе=0;
			КонецЕсли;
		КонецЕсли;


		ТабличноеПолеОплаты.Обновить();

		глПодписатьсяНаСобытия(ТабличноеПолеОплаты);
		глПодписатьсяНаСобытия(РедакторСтроки);


		Сам.ПоказатьИтогНаДисплей();
	ИначеЕсли Режим=Перечисление.РежимыРМК.Журнал Тогда

		Если Сам.ОткрытыйЧек()=0 Тогда
			глОбменДанными.ВключитьОжиданиеЗагрузки();
		Иначе
			глОбменДанными.ОтключитьОжиданиеЗагрузки();
		КонецЕсли;


		глПодписатьсяНаСобытия(ТабличноеПолеЖурналЧеков);
		ТабличноеПолеЖурналЧеков.Обновить();

	ИначеЕсли Режим=Перечисление.РежимыРМК.Сервис Тогда

		глОбменДанными.ОтключитьОжиданиеЗагрузки();
	ИначеЕсли Режим=Перечисление.РежимыРМК.ВнешнийЧек Тогда

		глОбменДанными.ОтключитьОжиданиеЗагрузки();
	ИначеЕсли Режим=Перечисление.РежимыРМК.Возврат Тогда
		глПодписатьсяНаСобытия(ТабличноеПолеРМК);
		РедакторСтроки.Сброс();

		глОбменДанными.ОтключитьОжиданиеЗагрузки();

	ИначеЕсли Режим=Перечисление.РежимыРМК.Печать Тогда

		глОбменДанными.ОтключитьОжиданиеЗагрузки();
	Иначе


	КонецЕсли;

	глПослатьКоманду(Сам,"Обновить");
КонецПроцедуры

//напечататть копию чека
//ИДЧека - идентификатор чека, который надо распечатать
//если пустой - распечатать последний чек
Функция НапечататьКопию(ИДЧека="") Экспорт
	Предупреждение("Печать копии");
	Возврат 1;
КонецФункции

Процедура ОткрытьЯщик() Экспорт

	глРаботаСЯщиком("ОткрытьЯщик");
КонецПроцедуры




//КодСписка - код списка выбора. Если не указано - выбрать из первого списка выбора
//Возврат:
//Товар - ссылка на выбранный товар
//возврат 1 - товар выбран
//0 товар не выбран
Функция ВыбратьВизуально(Товар,КодСписка="") экспорт

	Объект=СоздатьОбъект("БыстрыйВыбор");
	Если КодСписка="" Тогда
		Если Объект.Первый()=1 Тогда

			СЗ=СоздатьОбъект("СписокЗначений");
			СЗ.Установить("РежимВыбора",1);
			СЗ.Установить("Объект",Объект);

			ОткрытьФормуМодально("Обработка.Class_БыстрыйВыбор_ФормаСпискаВыбора",СЗ);
			Результат=СЗ.Получить("Результат");
			Если Результат=1 Тогда
				Товар=СЗ.Получить("Товар");
			КонецЕсли;
			возврат Результат;
		Иначе
			глПредупреждение("Нет настроенных списков выбора.",10);
			Возврат 0;
		КонецЕсли;  //
	ИначеЕсли Объект.Прочитать(КодСписка)=1 Тогда

		СЗ=СоздатьОбъект("СписокЗначений");
		СЗ.Установить("РежимВыбора",1);
		СЗ.Установить("Объект",Объект);

		ОткрытьФормуМодально("Обработка.Class_БыстрыйВыбор_ФормаСпискаВыбора",СЗ);
		Результат=СЗ.Получить("Результат");
		Если Результат=1 Тогда
			Товар=СЗ.Получить("Товар");
		КонецЕсли;
		возврат Результат;
	Иначе
		глПредупреждение("Нет списков выбора с кодом "+КодСписка,10);
		Возврат 0;
	КонецЕсли;
КонецФункции



Процедура ПоказатьИтогНаДисплей() Экспорт
	Сам=Сам();
	ИтогиККМ=НовыйОбъект("ИтогиККМ");
	ИтогиККМ.Сумма=ТаблицаТоваров.Итог("Сумма");
	ИтогиККМ.Скидка=ТаблицаТоваров.Итог("Скидка");
	ИтогиККМ.Всего=ТаблицаТоваров.Итог("Всего");
	ИтогиККМ.Сдача=?(ТаблицаОплаты.Итог("Сумма")-ТаблицаТоваров.Итог("Всего")>0,ТаблицаОплаты.Итог("Сумма")-ТаблицаТоваров.Итог("Всего"),0);

	Попытка
		глПослатьКоманду(Сам,"Дисплей_ВывестиИтог",ИтогиККМ,"Оборудование");
	Исключение
	КонецПопытки;


КонецПроцедуры


Функция ПровестиОплаты() Экспорт
	Сам=Сам();
	возврат глПровестиОплаты(Сам);
КонецФункции


//Должна отменить оплаты по чеку
//при необходимости вызвать соответствующие обработчики платежных систем

Функция ОтменитьОплаты() Экспорт

	Сам=Сам();

	ПредыдущийРежим=Режим;

	Сам.УстановитьРежим(Перечисление.РежимыРМК.ВозвратПоПлатежнойСистеме);

	ТаблицаОплаты=Сам.ТаблицаОплаты;

	ОплатыНеВернулись=0;

	Инд=1;
	Пока Инд<=ТаблицаОплаты.КоличествоСтрок() Цикл
		ТаблицаОплаты.ПолучитьСтрокуПоНомеру(Инд);
		Если ТаблицаОплаты.Сумма=0 Тогда
			ТаблицаОплаты.УдалитьСтроку(Инд);
		Иначе
			ОбъектОплата=ТаблицаОплаты.Объект;

			Если ПустоеЗначение(ОбъектОплата)=1 Тогда
				ТаблицаОплаты.УдалитьСтроку(Инд);
			ИначеЕсли ПустаяСтрока(ОбъектОплата.Данные.ПлатежнаяСистема)=1 Тогда
				ТаблицаОплаты.УдалитьСтроку(Инд);
			Иначе
				ИДПлатежнойСистемы=ОбъектОплата.Данные.ПлатежнаяСистема;

				ПлатежнаяСистема=глДрайверы.ПолучитьУстройствоПоВиду("Устройство.ПлатежнаяСистема",ИДПлатежнойСистемы);

				Если ПустоеЗначение(ПлатежнаяСистема)=1 Тогда
					ОплатыНеВернулись=1;
					Инд=Инд+1;
				Иначе

					РезультатВозврата=0;
					НомерОперации=ПлатежнаяСистема.НачатьОперацию();
					СуммаПрошла=0;

					Если НомерОперации=0 Тогда
						ОплатыНеВернулись=1;
						глПредупреждение("Не удалось начать операцию возврата.
						|"+ПлатежнаяСистема.ПоследняяОшибка());
					Иначе
						Попытка
							РезультатВозврата=ПлатежнаяСистема.Вернуть(НомерОперации,,ТаблицаОплаты.Сумма,СуммаПрошла);
						Исключение
							РезультатВозврата=0;
							Сам.УстановитьОшибку("Сбой при возврате.",ОписаниеОшибки());
						КонецПопытки;
					КонецЕсли;

					Если РезультатВозврата=1 Тогда
						РезультатЗавершения=ПлатежнаяСистема.ЗавершитьОперацию(НомерОперации);
						Если РезультатЗавершения=0 Тогда
							РезультатОтмены=ПлатежнаяСистема.ОтменитьОперацию(НомерОперации);
							глПредупреждение("Не удалось отменить операцию возврата.
							|"+ПлатежнаяСистема.ПоследняяОшибка()+"
							|Обратитесь к администратору.");
							Инд=Инд+1;
						Иначе

							ТаблицаОплаты.Сумма=ТаблицаОплаты.Сумма-СуммаПрошла;
							Если ТаблицаОплаты.Сумма=0 Тогда
								ТаблицаОплаты.УдалитьСтроку(Инд);
							Иначе
								Инд=Инд+1;
							КонецЕсли;
						КонецЕсли;
					Иначе
						ОплатыНеВернулись=1;
						РезультатОтмены=ПлатежнаяСистема.ОтменитьОперацию(НомерОперации);
						Если РезультатОтмены=0 Тогда
							глПредупреждение("Не удалось отменить операцию возврата.
							|"+ПлатежнаяСистема.ПоследняяОшибка()+"
							|Обратитесь к администратору.");
						КонецЕсли;
						Инд=Инд+1;
					КонецЕсли;

				КонецЕсли;
			КонецЕсли;

		КонецЕсли;
	КонецЦикла;

	Сам.УстановитьРежим(ПредыдущийРежим);

	Если ОплатыНеВернулись=1 Тогда
		Возврат 0;
	Иначе
		ТаблицаОплаты.УдалитьСтроки();
	КонецЕсли;
	Возврат 1;
КонецФункции


//возвращает 1 - если во всех строках с суммами установлен флаг ОплатаПроведена
//               и суммы оплаты достаточно для погашения чека
Функция ОплатыПроведены() Экспорт
	ТаблицаОплаты.ВыбратьСтроки();
	Пока ТаблицаОплаты.ПолучитьСтроку()=1 Цикл
		Если (ТаблицаОплаты.Сумма>0)И(ТаблицаОплаты.ОплатаПроведена=0) Тогда
			Возврат 0;
		КонецЕсли;
	КонецЦикла;
	Возврат 1;
КонецФункции

Функция ОбработкаСобытий_РежимТовары(Издатель,Событие,Команда)
	Сам=Сам();
	Отработали=0;
	Если Команда="ПОДБОР_ТОВАРА" Тогда

		Если глПраваДоступа.ЕстьПраво("Регистрация.Подбор.ПоСправочнику")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе
			ТоварСпр=СоздатьОбъект("Товар");
			Товар="";
			Если ТоварСпр.ВыбратьОбъект(Товар)=1 Тогда
				ВыборТовара(Товар);
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ИзменилсяРедакторСтроки" Тогда



	ИначеЕсли Команда="УДАЛИТЬ_СТРОКУ" Тогда
		Если ТипЗначенияСтр(ТабличноеПолеРМК.ТекущаяСтрока)="Число" Тогда
			Если глПраваДоступа.ЕстьПраво("Регистрация.УдалениеСтроки")=0 Тогда
				глПредупреждение("Недостаточно прав доступа.");
			Иначе
				Если РедакторСтроки.КакСтрока()<>"" Тогда
					глПослатьКоманду(Сам,"СбросРедактора");
				Иначе

					Если ТабличноеПолеРМК.ПоставщикДанных.ТаблицаЗначений.КоличествоСтрок()>0 Тогда
						ПозиционироватьсяВКонец=0;
						Если ТабличноеПолеРМК.ТекущаяСтрока=ТабличноеПолеРМК.ПоставщикДанных.ТаблицаЗначений.КоличествоСтрок() Тогда
							ПозиционироватьсяВКонец=1;
						КонецЕсли;
						ТабличноеПолеРМК.ПоставщикДанных.ТаблицаЗначений.УдалитьСтроку(ТабличноеПолеРМК.ТекущаяСтрока);

						Если ТабличноеПолеРМК.ПоставщикДанных.ТаблицаЗначений.КоличествоСтрок()=0 Тогда
							глПослатьКоманду(ТабличноеПолеРМК,"СбросЧека");
						ИначеЕсли ПозиционироватьсяВКонец=1 Тогда
							ТабличноеПолеРМК.ТекущаяСтрока=ТабличноеПолеРМК.ПоставщикДанных.ТаблицаЗначений.КоличествоСтрок();
						КонецЕсли;
					КонецЕсли;
					глПослатьКоманду(Сам,"РасчитатьСуммы");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Отработали = 1;
	ИначеЕсли Команда="ДИСКОНТ" Тогда
		Если глПраваДоступа.ЕстьПраво("ДисконтнаяСистема.ВыборКарты.Ручной")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе


			Если ДисконтнаяСистема.ЕстьКарта()=1 Тогда
				ДисконтнаяСистема.Сброс();
			Иначе
				ДК=ДисконтнаяСистема.ВыбратьДисконтнуюКарту();
				Если ПустоеЗначение(ДК)=0 Тогда
					Сам.ВыборДисконтнойКарты(ДК);
				КонецЕсли;
			КонецЕсли;
			глПослатьКоманду(Сам,"СбросРедактора");
			ПоказатьИтогНаДисплей();
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="СКИДКА" Тогда
		Если глПраваДоступа.ЕстьПраво("ДисконтнаяСистема.СкидкаНаЧекПроцентом")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			ДисконтнаяСистема.УстановитьРучнуюСкидкуПроцентом(РедакторСтроки.КакЧисло());
			глПослатьКоманду(Сам,"СбросРедактора");
			ПоказатьИтогНаДисплей();
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="СКИДКА_СУММОЙ" Тогда
		Если глПраваДоступа.ЕстьПраво("ДисконтнаяСистема.СкидкаНаЧекСуммой")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			ДисконтнаяСистема.УстановитьРучнуюСкидкуСуммой(РедакторСтроки.КакЧисло());
			глПослатьКоманду(Сам,"СбросРедактора");
			ПоказатьИтогНаДисплей();
		КонецЕсли;
		Отработали = 1;

	ИначеЕсли Команда="СКИДКА_НА_ПОЗИЦИЮ" Тогда
		Если глПраваДоступа.ЕстьПраво("ДисконтнаяСистема.СкидкаНаПозициюПроцентом")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			ДисконтнаяСистема.УстановитьРучнуюСкидкуНаПозицию(РедакторСтроки.КакЧисло());
			глПослатьКоманду(Сам,"СбросРедактора");

			ПоказатьИтогНаДисплей();
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="СКИДКА_НА_ПОЗИЦИЮ_СУММОЙ" Тогда
		Если глПраваДоступа.ЕстьПраво("ДисконтнаяСистема.СкидкаНаПозициюСуммой")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе
			ДисконтнаяСистема.УстановитьРучнуюСкидкуНаПозициюСуммой(РедакторСтроки.КакЧисло());
			глПослатьКоманду(Сам,"СбросРедактора");
			ПоказатьИтогНаДисплей();
		КонецЕсли;
		Отработали=1;

	ИначеЕсли Команда="НАДБАВКА" Тогда
		Если глПраваДоступа.ЕстьПраво("ДисконтнаяСистема.НадбавкаНаЧекПроцентом")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			ДисконтнаяСистема.УстановитьРучнуюСкидкуПроцентом(-РедакторСтроки.КакЧисло());
			глПослатьКоманду(Сам,"СбросРедактора");
			ПоказатьИтогНаДисплей();
		КонецЕсли;
		Отработали=1;

	ИначеЕсли Команда="НАДБАВКА_СУММОЙ" Тогда
		Если глПраваДоступа.ЕстьПраво("ДисконтнаяСистема.НадбавкаНаЧекСуммой")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			ДисконтнаяСистема.УстановитьРучнуюСкидкуСуммой(-РедакторСтроки.КакЧисло());
			глПослатьКоманду(Сам,"СбросРедактора");

			ПоказатьИтогНаДисплей();
		КонецЕсли;
		Отработали = 1;
	ИначеЕсли Команда="НАДБАВКА_НА_ПОЗИЦИЮ" Тогда
		Если глПраваДоступа.ЕстьПраво("ДисконтнаяСистема.НадбавкаНаПозициюПроцентом")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			ДисконтнаяСистема.УстановитьРучнуюСкидкуНаПозицию(-РедакторСтроки.КакЧисло());
			глПослатьКоманду(Сам,"СбросРедактора");

			ПоказатьИтогНаДисплей();
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="НАДБАВКА_НА_ПОЗИЦИЮ_СУММОЙ" Тогда
		Если глПраваДоступа.ЕстьПраво("ДисконтнаяСистема.НадбавкаНаПозициюСуммой")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			ДисконтнаяСистема.УстановитьРучнуюСкидкуНаПозициюСуммой(-РедакторСтроки.КакЧисло());
			глПослатьКоманду(Сам,"СбросРедактора");

			ПоказатьИтогНаДисплей();
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="КОЛИЧЕСТВО" Тогда
		Если ТаблицаТоваров.КоличествоСтрок()>0 Тогда
			СобытиеОтвет=глПослатьКоманду(Сам,"ЗапросТекущейСтрокиРМК");
			Если СобытиеОтвет.Обработано=1 Тогда
				ТекущаяСтрока=СобытиеОтвет.Описатель.Ответ;
				ТаблицаТоваров.ПолучитьСтрокуПоНомеру(ТекущаяСтрока);
				Количество=РедакторСтроки.КакЧисло();

				Можно=1;
				Если Количество<ТаблицаТоваров.Количество Тогда
					Если глПраваДоступа.ЕстьПраво("Регистрация.УменьшениеКоличества")=0 Тогда
						глПредупреждение("Недостаточно прав доступа.");
						Можно=0;
					КонецЕсли;
				КонецЕсли;
				Если Можно=1 Тогда
					ТаблицаТоваров.Количество=Количество;
					глПослатьКоманду(Сам,"РасчитатьСуммы");
					глПослатьКоманду(Сам,"СбросРедактора");
					ПоказатьИтогНаДисплей();
				КонецЕсли;

			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ЦЕНА" Тогда

		Если ТаблицаТоваров.КоличествоСтрок()>0 Тогда
			
			
			
			СобытиеОтвет=глПослатьКоманду(Сам,"ЗапросТекущейСтрокиРМК");
			Если СобытиеОтвет.Обработано=1 Тогда
				ТекущаяСтрока=СобытиеОтвет.Описатель.Ответ;
				ТаблицаТоваров.ПолучитьСтрокуПоНомеру(ТекущаяСтрока);
				Цена=РедакторСтроки.КакЧисло();
				Если ТаблицаТоваров.Товар.РазрешитьСвободнуюЦену=1 Тогда
					Если (Цена=0)И(ТаблицаТоваров.Товар.РазрешитьНулевуюЦену=1) Тогда
						ТаблицаТоваров.Цена=Цена;
					ИначеЕсли Цена>0 Тогда
						ТаблицаТоваров.Цена=Цена;
					КонецЕсли;
					глПослатьКоманду(Сам,"РасчитатьСуммы");
					глПослатьКоманду(Сам,"СбросРедактора");
					ПоказатьИтогНаДисплей();
				Иначе
					Если глПраваДоступа.ЕстьПраво("Регистрация.ИзменениеЦены")=1 Тогда
						ТаблицаТоваров.Цена=Цена;
						глПослатьКоманду(Сам,"РасчитатьСуммы");
						глПослатьКоманду(Сам,"СбросРедактора");
						ПоказатьИтогНаДисплей();
					Иначе
						глПредупреждение("Для товара запрещено изменять цены.
						|"+ТаблицаТоваров.Товар.Наименование,5);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ПЛЮС_1" Тогда
		Если ТаблицаТоваров.КоличествоСтрок()>0 Тогда
			СобытиеОтвет=глПослатьКоманду(Сам,"ЗапросТекущейСтрокиРМК");
			Если СобытиеОтвет.Обработано=1 Тогда
				ТекущаяСтрока=СобытиеОтвет.Описатель.Ответ;

				Количество=РедакторСтроки.КакЧисло();
				Если Количество=0 Тогда
					КоличествоПлюс=1;
				Иначе
					КоличествоПлюс=Количество;
				КонецЕсли;
				ТаблицаТоваров.ПолучитьСтрокуПоНомеру(ТекущаяСтрока);

				ТаблицаТоваров.Количество=ТаблицаТоваров.Количество+КоличествоПлюс;

				глПослатьКоманду(Сам,"РасчитатьСуммы");
				глПослатьКоманду(Сам,"СбросРедактора");
				ПоказатьИтогНаДисплей();
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="МИНУС_1" Тогда
		Если ТаблицаТоваров.КоличествоСтрок()>0 Тогда
			Если глПраваДоступа.ЕстьПраво("Регистрация.УменьшениеКоличества")=0 Тогда

				глПредупреждение("Недостаточно прав доступа.");
			Иначе



				СобытиеОтвет=глПослатьКоманду(Сам,"ЗапросТекущейСтрокиРМК");
				Если СобытиеОтвет.Обработано=1 Тогда
					ТекущаяСтрока=СобытиеОтвет.Описатель.Ответ;
					Количество=РедакторСтроки.КакЧисло();
					Если Количество=0 Тогда
						КоличествоМинус=1;
					Иначе
						КоличествоМинус=Количество;
					КонецЕсли;

					ТаблицаТоваров.ПолучитьСтрокуПоНомеру(ТекущаяСтрока);

					Если ТаблицаТоваров.Количество>КоличествоМинус Тогда
						ТаблицаТоваров.Количество=ТаблицаТоваров.Количество-КоличествоМинус;
						глПослатьКоманду(Сам,"РасчитатьСуммы");
						глПослатьКоманду(Сам,"СбросРедактора");
						ПоказатьИтогНаДисплей();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ПОДБОР_ПО_КОДУ" Тогда
		Если глПраваДоступа.ЕстьПраво("Регистрация.Подбор.ПоКоду")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			КодСтр=РедакторСтроки.КакСтрока();
			ТоварСпр=СоздатьОбъект("Товар");
			Товар=ТоварСпр.НайтиПоКоду(КодСтр);
			Если ПустоеЗначение(Товар)=0 Тогда
				ВыборТовара(Товар);
				глПослатьКоманду(Сам,"СбросРедактора");
			Иначе
				глПредупреждение("Товар с кодом "+КодСтр+" не найден.");
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ПОДБОР_ПО_ШТРИХКОДУ" Тогда
		Если глПраваДоступа.ЕстьПраво("Регистрация.Подбор.ПоШтрихкКоду")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			ШК=РедакторСтроки.КакСтрока();
			ТоварСпр=СоздатьОбъект("Товар");
			Результат=ТоварСпр.НайтиПоШтрихкоду(ШК);

			Если ПустоеЗначение(Результат)=0 Тогда
				Если ТипЗначенияСтр(Результат)="ТаблицаЗначений" Тогда
					Товар="";
					Если ВыбратьТоварИзСписка(Результат,Товар)=1 Тогда
						ВыборТовара(Товар,ШК);
					КонецЕсли;
				Иначе
					ВыборТовара(Результат,ШК);
				КонецЕсли;
				глПослатьКоманду(Сам,"СбросРедактора");
			Иначе
				глПредупреждение("Товар по штрихкоду "+КодСтр+" не найден.");
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ПОДБОР_ПО_АРТИКУЛУ" Тогда
		Если глПраваДоступа.ЕстьПраво("Регистрация.Подбор.ПоАртикулу")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			КодСтр=РедакторСтроки.КакСтрока();

			ТоварСпр=СоздатьОбъект("Товар");
			Результат=ТоварСпр.НайтиПоАртикулу(КодСтр);
			Если ПустоеЗначение(Результат)=0 Тогда
				Если ТипЗначенияСтр(Результат)="ТаблицаЗначений" Тогда
					Товар="";
					Если ВыбратьТоварИзСписка(Результат,Товар)=1 Тогда
						ВыборТовара(Товар);
					КонецЕсли;
				Иначе
					ВыборТовара(Результат);
				КонецЕсли;
				глПослатьКоманду(Сам,"СбросРедактора");
			Иначе
				глПредупреждение("Товар по артикулу "+КодСтр+" не найден.");
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ПОДБОР_ПО_ЦЕНЕ" Тогда
		Если глПраваДоступа.ЕстьПраво("Регистрация.Подбор.ПоЦене")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			Цена=РедакторСтроки.КакЧисло();

			ТоварСпр=СоздатьОбъект("Товар");
			Результат=ТоварСпр.НайтиПоЦене(Цена);
			Если ПустоеЗначение(Результат)=0 Тогда
				Если ТипЗначенияСтр(Результат)="ТаблицаЗначений" Тогда
					Товар="";
					Если ВыбратьТоварИзСписка(Результат,Товар)=1 Тогда
						ВыборТовара(Товар);
					КонецЕсли;
				Иначе
					ВыборТовара(Результат);
				КонецЕсли;
				глПослатьКоманду(Сам,"СбросРедактора");
			Иначе
				глПредупреждение("Товар по цене "+глФРМ(Цена)+" не найден.");
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ПРОБИТЬ_ЧЕК" Тогда

		Если глПраваДоступа.ЕстьПраво("Регистрация.Продажа")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе


			//сделать попытку пробить чек наличными
			//если денег не хватает - перевести в режим выбора оплаты
			СуммаОплаты=РедакторСтроки.КакЧисло();

			Ограничение=глНастройки.ПолучитьКакЧисло("SETTINGS/MaxPaySumm");
			ОшибочныйВвод=0;
			Если Ограничение>0 Тогда
				Если СуммаОплаты>Ограничение Тогда
					ОшибочныйВвод=1;
				КонецЕсли;

			КонецЕсли;

			Если ОшибочныйВвод=0 Тогда



				ВыставилиПолнуюСумму=0;
				Если СуммаОплаты=0 Тогда
					Если ТаблицаОплаты.Итог("Сумма")=0 Тогда
						СуммаОплаты=ТаблицаТоваров.Итог("Всего");
						ВыставилиПолнуюСумму=1;
					КонецЕсли;
				КонецЕсли;

				Если СуммаОплаты>0 Тогда


					Есть=0;
					ТаблицаОплаты.ВыбратьСтроки();
					Пока ТаблицаОплаты.Получитьстроку()=1 Цикл
						Если ТаблицаОплаты.ИД="0" Тогда
							ТаблицаОплаты.Сумма=СуммаОплаты;
							ТаблицаОплаты.ОплатаПроведена=1;
							Есть=1;
							Прервать;
						КонецЕсли;
					КонецЦикла;

					Если Есть=0 Тогда
						ТаблицаОплаты.НоваяСтрока();
						ТаблицаОплаты.Сумма=СуммаОплаты;
						ТаблицаОплаты.ИД="0";
						ТаблицаОплаты.Наименование="Наличные";
						ТаблицаОплаты.КодФирмы="";
						ТаблицаОплаты.ОплатаПроведена=1;
						ТаблицаОплаты.ВремяОплаты=ТекущееВремя();
						ТаблицаОплаты.ККМ="";
						ТаблицаОплаты.НомерЧекаВЗаказе=0;
					КонецЕсли;
				КонецЕсли;


				Если ВыставилиПолнуюСумму=1 Тогда
					УстановитьРежим(Перечисление.РежимыРМК.Оплаты);
				ИначеЕсли ТаблицаОплаты.Итог("Сумма")>=ТаблицаТоваров.Итог("Всего") Тогда
					//оплата налом
					Если ЗакрытьПродажу(Сам)=1 Тогда
						СтараяСуммаСдачи=ТаблицаОплаты.Итог("Сумма")-ТаблицаТоваров.Итог("Всего");
						Сброс();
					КонецЕсли;
					УстановитьРежим(Перечисление.РежимыРМК.Товары);
				Иначе
					УстановитьРежим(Перечисление.РежимыРМК.Оплаты);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ВОЗВРАТ" Тогда

		Если глПраваДоступа.ЕстьПраво("Регистрация.Возврат")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе
			//сделать попытку пробить чек наличными
			//если денег не хватает - перевести в режим выбора оплаты
			СуммаОплаты=РедакторСтроки.КакЧисло();

			ВыставилиПолнуюСумму=0;
			Если СуммаОплаты=0 Тогда
				Если ТаблицаОплаты.Итог("Сумма")=0 Тогда
					СуммаОплаты=ТаблицаТоваров.Итог("Всего");
					ВыставилиПолнуюСумму=1;
				КонецЕсли;
			КонецЕсли;

			Если СуммаОплаты>0 Тогда


				Есть=0;
				ТаблицаОплаты.ВыбратьСтроки();
				Пока ТаблицаОплаты.Получитьстроку()=1 Цикл
					Если ТаблицаОплаты.ИД="0" Тогда
						ТаблицаОплаты.Сумма=СуммаОплаты;
						ТаблицаОплаты.ОплатаПроведена=1;
						Есть=1;
						Прервать;
					КонецЕсли;
				КонецЦикла;

				Если Есть=0 Тогда
					ТаблицаОплаты.НоваяСтрока();
					ТаблицаОплаты.Сумма=СуммаОплаты;
					ТаблицаОплаты.ИД="0";
					ТаблицаОплаты.Наименование="Наличные";
					ТаблицаОплаты.КодФирмы="";
					ТаблицаОплаты.ОплатаПроведена=1;
					ТаблицаОплаты.ВремяОплаты=ТекущееВремя();
					ТаблицаОплаты.ККМ="";
					ТаблицаОплаты.НомерЧекаВЗаказе=0;
				КонецЕсли;
			КонецЕсли;


			Если ВыставилиПолнуюСумму=1 Тогда
				УстановитьРежим(Перечисление.РежимыРМК.Оплаты);
			ИначеЕсли ТаблицаОплаты.Итог("Сумма")>ТаблицаТоваров.Итог("Всего") Тогда
				глПредупреждение("Сумма выплаты должна быть равна сумме чека.
				|Сумма чека    = "+глФРМ(ТаблицаТоваров.Итог("Всего"))+"
				|Сумма выплаты = "+глФРМ(ТаблицаОплаты.Итог("Всего")));
			//ИначеЕсли ТаблицаОплаты.Итог("Сумма")=ТаблицаТоваров.Итог("Всего") Тогда
				////оплата налом
				//Если ЗакрытьВозврат(Сам)=1 Тогда
				//	СтараяСуммаСдачи=ТаблицаОплаты.Итог("Сумма")-ТаблицаТоваров.Итог("Всего");
				//	Сброс();
				//КонецЕсли;
				//УстановитьРежим(Перечисление.РежимыРМК.Товары);

			Иначе
				УстановитьРежим(Перечисление.РежимыРМК.Оплаты);
			КонецЕсли;
		КонецЕсли;

		Отработали=1;

	ИначеЕсли Команда="ОТМЕНА_ЧЕКА" Тогда
		Если глПраваДоступа.ЕстьПраво("Регистрация.ОтменаЧека")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе

			Если глВопрос("Отменить чек?","Да+Нет")="Да" Тогда

				//проверить есть ли проведенные платежи;
				//если есть провнедение по системе жквайринга - потребовать сделать аннулирование
				Если ОтменитьОплаты()=1 Тогда
					Сброс();
					Попытка
						глПослатьКоманду(Сам,"Дисплей_Приветствие",,"Оборудование");
					Исключение
					КонецПопытки;

				Иначе
					глПредупреждение("Не удалось отменить все оплаты.
					|Отложите чек или повторите попытку.
					|");
				КонецЕсли;
			Иначе
				ПоказатьИтогНаДисплей();
			КонецЕсли;
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ВЫБОР_ОПЛАТЫ" Тогда
		Если Режим=Перечисление.РежимыРМК.Оплаты Тогда
			Сам.УстановитьРежим(Перечисление.РежимыРМК.Товары);
		Иначе
			Сам.УстановитьРежим(Перечисление.РежимыРМК.Оплаты);
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ВЫБОР_ВНЕШНЕГО_ЧЕКА" Тогда
		//открыть интерфейс для подбора внешнего чека для загрузки
		Если глПраваДоступа.ЕстьПраво("Регистрация.ЗагрузкаВнешнегоЧека")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе
			Сам.УстановитьРежим(Перечисление.РежимыРМК.ВыборВнешнегоЧека);
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ОТМЕНА_АВТОСКИДОК" Тогда

		Если глПраваДоступа.ЕстьПраво("Регистрация.ОтменаАвтоматическихСкидок")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе
			//сделать
		КонецЕсли;
		
		Отработали=1;
		ПоказатьИтогНаДисплей();
	ИначеЕсли Команда="ПЕЧАТЬ_КОПИИ" Тогда
		//напечатать копию последнего закрытого чека.
		Если глПраваДоступа.ЕстьПраво("Регистрация.ПечатьКопииЧека")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе
			НапечататьКопию();
		КонецЕсли;
		Отработали=1;
	ИначеЕсли Команда="ВВОД_СИМВОЛОВ" Тогда
		//перевести редактор в режим ввода символов и обратно

		Отработали=1;
	ИначеЕсли Команда="КАЛЬКУЛЯТОР" Тогда
		//открыть интерфейс калькулятора. Результат записать в редактор

		Отработали=1;
	ИначеЕсли Команда="ВИЗУАЛЬНЫЙ_ВЫБОР" Тогда
		//открыть подбор товара из списков быстрого выбора
		

		Если глПраваДоступа.ЕстьПраво("Регистрация.Подбор.ПоБыстромуВСписку")=0 Тогда
			глПредупреждение("Недостаточно прав доступа.");
		Иначе
			//сделать
		КонецЕсли;
		
		Отработали=1;

	КонецЕсли;

	Возврат Отработали;
КонецФункции

Функция ОбработкаСобытий_РежимОплаты(Издатель,Событие,Команда)
	Сам=Сам();
	Отработали=0;

	Если Команда="ИзменилсяРедакторСтроки" Тогда

		Сумма=Число(Событие.Описатель.Данные);

		Событие=глПослатьКоманду(Сам,"ПолучитьСтрокуОплаты");
		Если Событие.Обработано=1 Тогда
			СтрокаОплаты=Событие.Описатель.Ответ;

			//разрешаем менять только непроведенные оплаты
			ИДПлатежнойСистемы=СтрокаОплаты.ВидОплаты.Данные.ПлатежнаяСистема;
			Событие=глПослатьКоманду(Сам,"УстановитьСтрокуОплаты",Сумма);
			Отработали=1;
			Если ПустаяСтрока(ИДПлатежнойСистемы)=1 Тогда
				//нет платежной системы
				Событие=глПослатьКоманду(Сам,"УстановитьСтрокуОплаченной",Сумма);
			КонецЕсли;

			ОбновитьТаблицуОплатыРМК();
		КонецЕсли;
	ИначеЕсли Команда="ПРОБИТЬ_ЧЕК" Тогда
		Если ТаблицаОплаты.Итог("Сумма")<ТаблицаТоваров.Итог("Всего") Тогда
			глПредупреждение("Недостаточно суммы оплаты.");
		ИначеЕсли ОплатыПроведены()=1 Тогда
			Если ЗакрытьПродажу(Сам)=1 Тогда
				СтараяСуммаСдачи=ТаблицаОплаты.Итог("Сумма")-ТаблицаТоваров.Итог("Всего");
				Сброс();
				УстановитьРежим(Перечисление.РежимыРМК.Товары);
			КонецЕсли;
		Иначе
			Если ПровестиОплаты()=0 Тогда
				глПредупреждение("Оплаты не проведены.");
			КонецЕсли;
		КонецЕсли;

		Отработали=1;
	ИначеЕсли Команда="ВОЗВРАТ" Тогда
		Если ЗакрытьВозврат(Сам)=1 Тогда
			Сброс();
		КонецЕсли;
		УстановитьРежим(Перечисление.РежимыРМК.Товары);
		Отработали=1;

	ИначеЕсли Команда="ОТМЕНА_ЧЕКА" Тогда

		Сам.УстановитьРежим(Перечисление.РежимыРМК.Товары);
		Отработали=1;
	ИначеЕсли Команда="УДАЛИТЬ_СТРОКУ" Тогда

		Если ТипЗначенияСтр(ТабличноеПолеОплаты.ТекущаяСтрока)="Число" Тогда



			Если ТабличноеПолеОплаты.ТекущаяСтрока>0 Тогда

				Сам.УстановитьРежим(Перечисление.РежимыРМК.ВозвратПоПлатежнойСистеме);

				ИДОплаты=ТабличноеПолеОплаты.ТекущиеДанные.ИД;

				ОплатуМожноОтменить=0;
				ТаблицаОплаты.ВыбратьСтроки();
				Пока ТаблицаОплаты.ПолучитьСтроку()=1 Цикл
					Инд=0;
					Если ТаблицаОплаты.ИД=ИДОплаты Тогда
						Если ТаблицаОплаты.ОплатаПроведена=0 Тогда
							ОплатуМожноОтменить=1;
						Иначе


							ОбъектОплата=ТаблицаОплаты.Объект;


							Если ПустоеЗначение(ОбъектОплата)=1 Тогда
								ОплатуМожноОтменить=1;
							ИначеЕсли ПустаяСтрока(ОбъектОплата.Данные.ПлатежнаяСистема)=1 Тогда
								ОплатуМожноОтменить=1;
							Иначе
								ИДПлатежнойСистемы=ОбъектОплата.Данные.ПлатежнаяСистема;

								ПлатежнаяСистема=глДрайверы.ПолучитьУстройствоПоВиду("Устройство.ПлатежнаяСистема",ИДПлатежнойСистемы);

								Если ПустоеЗначение(ПлатежнаяСистема)=1 Тогда
									ОплатуМожноОтменить=0;
								Иначе

									РезультатВозврата=0;
									НомерОперации=ПлатежнаяСистема.НачатьОперацию();
									СуммаПрошла=0;

									Если НомерОперации=0 Тогда
										ОплатуМожноОтменить=0;
										глПредупреждение("Не удалось начать операцию возврата.
										|"+ПлатежнаяСистема.ПоследняяОшибка());
									Иначе
										Попытка
											РезультатВозврата=ПлатежнаяСистема.Вернуть(НомерОперации,,ТаблицаОплаты.Сумма,СуммаПрошла);
										Исключение
											РезультатВозврата=0;
											Сам.УстановитьОшибку("Сбой при возврате.",ОписаниеОшибки());
										КонецПопытки;
									КонецЕсли;

									Если РезультатВозврата=1 Тогда
										РезультатЗавершения=ПлатежнаяСистема.ЗавершитьОперацию(НомерОперации);
										Если РезультатЗавершения=0 Тогда
											РезультатОтмены=ПлатежнаяСистема.ОтменитьОперацию(НомерОперации);
											глПредупреждение("Не удалось отменить операцию возврата.
											|"+ПлатежнаяСистема.ПоследняяОшибка()+"
											|Обратитесь к администратору.");
										Иначе

											ТаблицаОплаты.Сумма=ТаблицаОплаты.Сумма-СуммаПрошла;
											Если ТаблицаОплаты.Сумма=0 Тогда
												ТаблицаОплаты.ОплатаПроведена=0;
											КонецЕсли;
										КонецЕсли;
									Иначе
										РезультатОтмены=ПлатежнаяСистема.ОтменитьОперацию(НомерОперации);
										Если РезультатОтмены=0 Тогда
											глПредупреждение("Не удалось отменить операцию возврата.
											|"+ПлатежнаяСистема.ПоследняяОшибка()+"
											|Обратитесь к администратору.");
										КонецЕсли;
									КонецЕсли;

								КонецЕсли;
							КонецЕсли;

						КонецЕсли;

						Если ОплатуМожноОтменить=1 Тогда
							ТаблицаОплаты.УдалитьСтроку(ТаблицаОплаты.НомерСтроки);
						КонецЕсли;

						Прервать;
					КонецЕсли;
				КонецЦикла;

				Если ОплатуМожноОтменить=1 Тогда
					ТабличноеПолеОплаты.Обновить();
					глПослатьКоманду(Сам,"УстановитьСтрокуРедактора",0);
					глПослатьКоманду(Сам,"УстановитьСтрокуОплаты",0);
				КонецЕсли;

				Сам.УстановитьРежим(Перечисление.РежимыРМК.Оплаты);
			КонецЕсли;
		КонецЕсли;

		Отработали=1;
	КонецЕсли;
	Возврат Отработали;
КонецФункции

//вызывается посредством подписки на событие
//1 - можно продолжать обработку события другими обработчиками
//
Функция ВнешнееСобытие(Издатель,Событие) Экспорт
	Сам=Сам();
	Отработали=0;

	Если Событие.Источник="Клавиатура" Тогда
		Отработали = Сам.СобытиеКлавиатуры(Событие);
	ИначеЕсли Событие.Источник="Сканер" Тогда
		Отработали = Сам.СобытиеСканера(Событие);
	ИначеЕсли Событие.Источник="Ридер" Тогда
		Отработали = Сам.СобытиеРидера(Событие);
	ИначеЕсли Событие.Источник="Радиоридер" Тогда
		Отработали = Сам.СобытиеРадиоРидера(Событие);
	ИначеЕсли Событие.Источник="Ключ" Тогда
		Отработали = Сам.СобытиеКлюча(Событие);
	ИначеЕсли Событие.Источник="Команда" Тогда

		Команда=Событие.Описатель.Команда;

		Если Команда="Обновить" Тогда
			Сам.ОбновитьФорму();
			Отработали=1;
		ИначеЕсли Команда="ВыбратьДисконтнуюКарту" Тогда
			Сам.ВыборДисконтнойКарты(Событие.Описатель.Данные);
			Отработали=1;
		ИначеЕсли Команда="РасчитатьСуммы" Тогда
			Сам.РасчитатьСуммы();
			Отработали=1;
		ИначеЕсли Команда="СбросЧека" Тогда
			Если Сам.ОтменитьОплаты()=1 Тогда
				Сам.Сброс();


				Попытка
					глПослатьКоманду(Сам,"Дисплей_Приветствие",,"Оборудование");
				Исключение
				КонецПопытки;

			КонецЕсли;

			Отработали=1;
		ИначеЕсли Команда="МЕНЮ" Тогда

		ИначеЕсли Команда="ВПРАВО" Тогда
			Поз=Режимы.НайтиЗначение(Режим);
			Если Поз<Режимы.РазмерСписка() Тогда
				Поз=Поз+1;
			Иначе
				Поз=1;
			КонецЕсли;
			Сам.УстановитьРежим(Режимы.ПолучитьЗначение(Поз));

			Отработали=1;

		ИначеЕсли Команда="ВЛЕВО" Тогда
			Поз=Режимы.НайтиЗначение(Режим);
			Если Поз>1 Тогда
				Поз=Поз-1;
			Иначе
				Поз=Режимы.РазмерСписка();
			КонецЕсли;
			Сам.УстановитьРежим(Режимы.ПолучитьЗначение(Поз));

			Отработали=1;
		ИначеЕсли Команда="ОБРАТНАЯ_ТАБУЛЯЦИЯ" Тогда
			глПослатьКоманду(Сам,"ВЛЕВО");
			Отработали=1;

		ИначеЕсли Команда="ТАБУЛЯЦИЯ" Тогда
			глПослатьКоманду(Сам,"ВПРАВО");
			Отработали=1;
		ИначеЕсли Команда="ОбновитьТекущуюСтрокуОплаты" Тогда
			Если ТабличноеПолеОплаты.ТаблицаОбъектов.КоличествоСтрок()>0 Тогда
				СобытиеОтвет=глПослатьКоманду(Сам,"ЗапросТекущейСтрокиОплаты");
				Если СобытиеОтвет.Обработано=1 Тогда
					ТекущаяСтрока=СобытиеОтвет.Описатель.Ответ;

					Если ТекущаяСтрока>0 Тогда


						Сумма=РедакторСтроки.КакЧисло();

						ТабличноеПолеОплаты.ТаблицаОбъектов.ПолучитьСтрокуПоНомеру(ТекущаяСтрока);
						ТабличноеПолеОплаты.ТаблицаОбъектов.Сумма=Сумма;
						ТабличноеПолеОплаты.ОбновитьСтроки();

						ОбновитьТаблицуОплатыРМК();


					КонецЕсли;

					глПослатьКоманду(Сам,"РасчитатьСуммы");
				КонецЕсли;
			КонецЕсли;
			Отработали=1;
		ИначеЕсли Команда="УстановитьСтрокуРедактора" Тогда
			Если ТипЗначенияСтр(Событие.Описатель.Данные)="Число" Тогда
				Если Событие.Описатель.Данные=0 Тогда
					РедакторСтроки.Сброс();
				Иначе
					РедакторСтроки.Буфер=Строка(Событие.Описатель.Данные);
				КонецЕсли;
			Иначе
				РедакторСтроки.Буфер=Строка(Событие.Описатель.Данные);
			КонецЕсли;

			Отработали=1;

		ИначеЕсли Команда="ЗАКРЫТЬ_ПРОГРАММУ" Тогда

			Отработали=1;
			КонтекстВызывающейФормы.Форма.Закрыть();
		ИначеЕсли Команда="ЖУРНАЛ_ЧЕКОВ" Тогда


			Если (Режим=Перечисление.РежимыРМК.Товары) Тогда
				Сам.УстановитьРежим(Перечисление.РежимыРМК.Журнал);
			Иначе
				Сам.УстановитьРежим(Перечисление.РежимыРМК.Товары);
			КонецЕсли;
			Отработали=1;

		ИначеЕсли Команда="БЛОКИРОВКА" Тогда
			ТекущийРежим=Сам.ТекущийРежим();

			глПраваДоступа.Авторизация(1);
			Отработали=1;
			Сам.УстановитьРежим(ТекущийРежим);
		ИначеЕсли Команда="ОТКРЫТЬ_ЯЩИК" Тогда
			//открыть ящик ККМ
			//если ККМ несколько открыть диалог выбора ККМ, чей ящик надо открыть

			ОткрытьЯщик();

			Отработали=1;
		ИначеЕсли Режим=Перечисление.РежимыРМК.Товары Тогда

			//команды только для режима Товары
			Отработали=ОбработкаСобытий_РежимТовары(Издатель,Событие,Команда);

		ИначеЕсли Режим=Перечисление.РежимыРМК.Оплаты Тогда

			Отработали=ОбработкаСобытий_РежимОплаты(Издатель,Событие,Команда);


		ИначеЕсли Режим=Перечисление.РежимыРМК.ПросмотрОплатыЗакрытогоЧека Тогда


			Если Команда="ОТМЕНА_ЧЕКА" Тогда

				Сам.УстановитьРежим(Перечисление.РежимыРМК.ПросмотрЗакрытогоЧека);
				Отработали=1;
			ИначеЕсли Команда="ПРОБИТЬ_ЧЕК" Тогда
				Если НапечататьКопию()=1 Тогда
					Сброс();
					УстановитьРежим(Перечисление.РежимыРМК.Товары);
				КонецЕсли;
				Отработали=1;
			КонецЕсли;
		ИначеЕсли Режим=Перечисление.РежимыРМК.Журнал Тогда
			Если Команда="ПРОБИТЬ_ЧЕК" Тогда
				//загрузить текущий чек в РМК

			КонецЕсли;

		ИначеЕсли Режим=Перечисление.РежимыРМК.Продавцы Тогда

			Если Команда="ПРОБИТЬ_ЧЕК" Тогда
				//выбрать текущего продавца
				Если ЗакрытьПродажу(Сам)=1 Тогда
					Сброс();
					УстановитьРежим(Перечисление.РежимыРМК.Товары);
				КонецЕсли;
				Отработали=1;
			КонецЕсли;

		ИначеЕсли Режим=Перечисление.РежимыРМК.ПросмотрЗакрытогоЧека Тогда
			Если Команда="ВЫБОР_ОПЛАТЫ" Тогда
				Сам.УстановитьРежим(Перечисление.РежимыРМК.ПросмотрОплатыЗакрытогоЧека);
				Отработали=1;
			ИначеЕсли Команда="ПРОБИТЬ_ЧЕК" Тогда
				Если НапечататьКопию()=1 Тогда
					Сброс();
					УстановитьРежим(Перечисление.РежимыРМК.Товары);
				КонецЕсли;
				Отработали=1;
			ИначеЕсли  Команда="ОТМЕНА_ЧЕКА" Тогда
				Сброс();
				Отработали=1;
			КонецЕсли;
		ИначеЕсли Режим=Перечисление.РежимыРМК.Сервис Тогда
			Сам.УстановитьРежим(Перечисление.РежимыРМК.Сервис);
			Отработали=1;
		ИначеЕсли Режим=Перечисление.РежимыРМК.ВнешнийЧек Тогда
			Если глПраваДоступа.ЕстьПраво("ЗакрытиеЧека")=0 Тогда
				глПредупреждение("Недостаточно прав доступа.");
			Иначе

				Если Команда="ПРОБИТЬ_ЧЕК" Тогда
					Если ЗакрытьПродажу(Сам)=1 Тогда
						СтараяСуммаСдачи=ТаблицаОплаты.Итог("Сумма")-ТаблицаТоваров.Итог("Всего");
						Сброс();
						УстановитьРежим(Перечисление.РежимыРМК.Товары);
					КонецЕсли;

					Отработали=1;
				КонецЕсли;
			КонецЕсли;
		Иначе
			глПредупреждение(""+Команда);
		КонецЕсли;

	КонецЕсли;

	Если Отработали = 1 Тогда
		глСобытиеОбработано(Событие);
		Сам.ОбновитьФорму();
		Возврат 0;
	КонецЕсли;
	возврат 1;
КонецФункции



//------------------------------------ ------------------------------------
Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии

 // завершение класса Wizard1C++ !!
