//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:52
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс ТабличноеПолеСпискаПользователей
//_______________________________________________________________________________________
Перем _База Экспорт;

Перем Сервис Экспорт;

Перем ШрифтЗачеркнутый Экспорт;

Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции



Процедура НастройкаПолей()  Экспорт


		Сам=Сам();

		Сам.Колонки.Добавить("Картинка");

		Сам.Колонки.Добавить("ID");
		Сам.Колонки.Добавить("Name");
		Сам.Колонки.Добавить("FIO");
		Сам.Колонки.Добавить("Role");


		Сам.ВертСкроллер=0;
		Сам.РежимВыделенияСтроки=1;
		Сам.ВертикальныеЛинии=1;
		Сам.ГоризонтальныеЛинии=1;
		Сам.СтильЗаголовков=0;
		Сам.ТаймаутБыстрогоПоиска=1;
		Сам.ТаймаутОбновления=0;
		Сам.ИзменятьПозициюКолонок=0;
		Сам.РазрешитьНачалоПеретаскивания=0;
		Сам.РазрешитьПеретаскивание=0;
		Сам.ЧередованиеЦветовСтрок=1;

		Сам.ЦветФонаЧередованияСтрок=глОбщиеФункции.ПолучитьЦвет(250,240,240);

		ЦветФонаЗаголовка=глОбщиеФункции.ПолучитьЦвет(255,250,190);
		ЦветТекстаЗаголовка=глОбщиеФункции.ПолучитьЦвет(190,185,125);

		Сам.ЦветФона=глОбщиеФункции.ПолучитьЦвет(255,255,255);
		Сам.ЦветТекста=глОбщиеФункции.ПолучитьЦвет(0,0,0);
		Сам.ЦветЛиний=глОбщиеФункции.ПолучитьЦвет(200,200,200);




		Сам.Колонки.Картинка.Ширина=2;
		Сам.Колонки.Картинка.ГоризонтальноеВыравнивание=3;


		Попытка
			Картинки=СоздатьОбъект("Картинка");
			Картинки.Загрузить("Пользователи");

			Сам.Колонки.Картинка.УстановитьКартинкиСтрок(Картинки);
			Сам.Колонки.Картинка.Ширина=3;

		Исключение
		КонецПопытки;

		Сам.Колонки.ID.Данные="ID";
		Сам.Колонки.ID.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.ID.Ширина=15;
		Сам.Колонки.ID.Заголовок="ИД";
		Сам.Колонки.ID.Видимость=1;


		Сам.Колонки.Name.Данные="Name";
		Сам.Колонки.Name.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.Name.Ширина=30;
		Сам.Колонки.Name.Заголовок="Логин";
		Сам.Колонки.Name.Видимость=1;

		Сам.Колонки.FIO.Данные="FullName";
		Сам.Колонки.FIO.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.FIO.Ширина=30;
		Сам.Колонки.FIO.Заголовок="ФИО";
		Сам.Колонки.FIO.Видимость=1;

		Сам.Колонки.Role.Данные="RoleName";
		Сам.Колонки.Role.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.Role.Ширина=20;
		Сам.Колонки.Role.Заголовок="Полномочия";
		Сам.Колонки.Role.Видимость=1;

КонецПроцедуры	// НастройкаПолей


Процедура НастройкаШрифтов() Экспорт
	Сам=Сам();
	Сам.ШрифтОсновной 	= глФабрикаОбъектов.Шрифт("Arial", 8, 0);
	Сам.ШрифтЗаголовка 	= глФабрикаОбъектов.Шрифт("Arial", 8, 1);

	Сам.Шрифт=Сам.ШрифтОсновной;

	Сам.ШрифтЗачеркнутый=глФабрикаОбъектов.Шрифт("Arial", 8, 0,1,,1);


КонецПроцедуры	// НастройкаШрифтов



Процедура НастройкаШрифтовДляВыбора() Экспорт

	Сам=Сам();

	Сам.ШрифтОсновной 	= глФабрикаОбъектов.Шрифт("Tahoma", 14, 0);
	Сам.ШрифтЗаголовка 	= глФабрикаОбъектов.Шрифт("Tahoma", 8, 1);


	Сам.Шрифт=Сам.ШрифтОсновной;
КонецПроцедуры	// НастройкаШрифтов




Процедура ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) Экспорт
	Сам=Сам();




//
//
	Если ДанныеСтроки.Gender=1 Тогда
		//Женский
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку=1;
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьТекст=0;
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=0;
	ИначеЕсли ДанныеСтроки.Gender=2 Тогда
		//Мужской
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку=1;
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьТекст=0;
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=1;
	Иначе
		//Не выбран
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку=0;
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьТекст=0;
	КонецЕсли;

	Если Сам.РежимВыбора()=1 Тогда
		//если таблица в окне для выбора, то пытамся показать информацию, если нет полного имени или наименования

		Если СокрЛП(ОформлениеСтроки.Ячейки.FIO.Текст)="" Тогда
			ОформлениеСтроки.Ячейки.FIO.ОтображатьТекст=1;
			ОформлениеСтроки.Ячейки.FIO.Текст=СокрЛП(ДанныеСтроки.Name);

			Если СокрЛП(ОформлениеСтроки.Ячейки.FIO.Текст)="" Тогда
				ОформлениеСтроки.Ячейки.FIO.Текст=СокрЛП(ДанныеСтроки.ID);
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры




Функция Инит(КонтекстФормы, ИдентификаторРеквизита) Экспорт

	_База.Инит(КонтекстФормы, ИдентификаторРеквизита);

	Сам=Сам();
	Сам.НастройкаШрифтов();
	Сам.НастройкаПолей();

	Сам.РежимВыбора(0);

	Сам.ПоставщикДанных=СоздатьОбъект("ПоставщикДанныхТЗ");
	Сам.ПоставщикДанных.УстТаблицуЗначений(Сам.ТаблицаОбъектов);

	Возврат 1;
КонецФункции


Функция ИнитДляВыбора(КонтекстФормы, ИдентификаторРеквизита) Экспорт

	_База.Инит(КонтекстФормы, ИдентификаторРеквизита);

	Сам=Сам();
	Сам.НастройкаШрифтовДляВыбора();
	Сам.НастройкаПолей();

	Сам.Колонки.ID.Видимость=0;
	Сам.Колонки.Name.Видимость=0;
	Сам.Колонки.FIO.Видимость=1;
	Сам.Колонки.Role.Видимость=0;
	Сам.ВертикальныеЛинии=0;
	Сам.ГоризонтальныеЛинии=0;

	Сам.ВводНовыхЭлементов(0);

	Сам.РежимВыбора(1);

	Сам.ПоставщикДанных=СоздатьОбъект("ПоставщикДанныхТЗ");
	Сам.ПоставщикДанных.УстТаблицуЗначений(Сам.ТаблицаОбъектов);

	Возврат 1;
КонецФункции


Функция ВидОбъектов() Экспорт
	возврат "Пользователь";
КонецФункции


Функция ПолучитьОбъекты(ВидОбъекта,КоличествоЭлементов) Экспорт
	Возврат глБД.ПолучитьСписокПользователей(1,1);
КонецФункции

Процедура ОбновитьТекущиеДанные(ТекущийОбъект) Экспорт

	Сам=Сам();



	ИД=Формат(ТекущийОбъект.Данные.ИД,"С40");


	Стр=0;
	Если Сам.ТаблицаОбъектов.НайтиЗначение(ИД,Стр,"ID")=1 Тогда
		Сам.ТаблицаОбъектов.ПолучитьСтрокуПоНомеру(Стр);
		Сам.ТаблицаОбъектов.ID=Формат(ТекущийОбъект.Данные.ИД,"С40");;
		Сам.ТаблицаОбъектов.Name=ТекущийОбъект.Данные.Наименование;
		Сам.ТаблицаОбъектов.FullName=ТекущийОбъект.Данные.ФИО;
		Сам.ТаблицаОбъектов.RoleId=ТекущийОбъект.Данные.Полномочия;

		Роль=СоздатьОбъект("Роль");
		Если Роль.Прочитать(ТекущийОбъект.Данные.Полномочия)=1 Тогда
			Сам.ТаблицаОбъектов.RoleName=Роль.Данные.Наименование;
		Иначе
			Сам.ТаблицаОбъектов.RoleName="ID="+ТекущийОбъект.Данные.Полномочия;
		КонецЕсли;


		Сам.ТаблицаОбъектов.Active=ТекущийОбъект.Данные.Активный;
		Сам.ТаблицаОбъектов.Gender=ТекущийОбъект.Данные.Пол;

	КонецЕсли;


КонецПроцедуры


//
//
Процедура ЗаполнитьКассиров() Экспорт

	Сам = Сам();

	ТаблицаОбъектов=глБД.ПолучитьСписокПользователей(0,1);


	Если ТаблицаОбъектов.КоличествоСтрок()=0 Тогда
		ТаблицаОбъектов=глБД.ПолучитьСписокПользователей(1,1);
	КонецЕсли;

	Сам.ТаблицаОбъектов=ТаблицаОбъектов;

	ТаблицаОбъектов.НоваяКолонка("IsFolder","Число");
	ТаблицаОбъектов.НоваяКолонка("IsMark","Число");


	Если ТаблицаОбъектов.КоличествоСтрок()>0 Тогда
		ТаблицаОбъектов.Заполнить(0,,,"IsFolder");
		ТаблицаОбъектов.Заполнить(0,,,"IsMark");
	КонецЕсли;


	Если ПустоеЗначение(Сам.ПоставщикДанных)=1 Тогда
		ПоставщикДанных=СоздатьОбъект("ПоставщикДанныхТЗ");
		ПоставщикДанных.УстТаблицуЗначений(ТаблицаОбъектов);
		Сам.ПоставщикДанных=ПоставщикДанных;
	КонецЕсли;

	Сам.ПоставщикДанных.УстТаблицуЗначений(ТаблицаОбъектов);



	Сам.ОбновитьСтроки();

КонецПроцедуры

Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("ТабличноеПолеСпискаОбъектов");
	Сам=Сам();
	Сервис=СоздатьОбъект("Сервис");
КонецПроцедуры	// Конструктор




Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии