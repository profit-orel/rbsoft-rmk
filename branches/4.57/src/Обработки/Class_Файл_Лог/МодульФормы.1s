//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:20
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;

Перем ВыводВОкноСообщений Экспорт;//выставить в 1 для отладки. Будет все дублировать в окно сообщений
Перем Включен Экспорт;

Перем ЛогФайл;

Функция Этот(Конт) Возврат Конт; КонецФункции

Функция Сам() Возврат Этот(Контекст) КонецФункции

//______________________________________________________________________________
//
// служебные процедуры для работы с файлом
// параметры: __лог: binarydata, __стр: строка, имя файла
//______________________________________________________________________________
//
Процедура Инит(_ИмяФайла="") Экспорт
	_База.Инит(_ИмяФайла);
	Сам=Сам();
	
	Если Сам.ИмяФайла="" Тогда	
		Сам.ИмяФайла=глОбработатьМакроСтроку("%SYSLOG%\LogFile.txt");
	КонецЕсли;
	
	Если ПустоеЗначение(ЛогФайл)=1 Тогда
		ЛогФайл=СоздатьОбъект("BinaryData");
	КонецЕсли;
	
	
	ЛогФайл.ПодключитьсяКФайлу(Сам.ИмяФайла, 2, 2);
	ЛогФайл.Перейти(0, 2);
КонецПроцедуры



Процедура ЗакрытьФайл() Экспорт
	Если ПустоеЗначение(ЛогФайл) = 0 Тогда
		ЛогФайл.Закрыть();
		ЛогФайл=0;
	КонецЕсли;
КонецПроцедуры


//------------------------------------ ---------------------------0---------
Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("Файл");
	ВыводВОкноСообщений = 1;//выставить в 1 для отладки. Будет все дублировать в окно сообщений
	Включен = 1;
КонецПроцедуры // Конструктор

Процедура ЗаписатьСтроку(СтрокаДляЗаписи,Закрывать=1) Экспорт
	Если Включен=1 Тогда
		ОткрывалиФайл=0;
		Если ПустоеЗначение(ЛогФайл)=1 Тогда
			Инит();
			ОткрывалиФайл=1;
		КонецЕсли;
		
		ЛогФайл.ЗаписатьСтроку(глОбработатьМакроСтроку("%DATE<-%	%TIME%	"+СтрокаДляЗаписи));
		
		Если (ОткрывалиФайл=1)ИЛИ(Закрывать=1) Тогда
			ЗакрытьФайл();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//Работает так же как и штатная функция, дополнительно может записать вывод в лог-файл
Процедура Сообщить(Сообщение, Маркер="") Экспорт
		
	Сам=Сам();
	СообщениеДляВывода=глСтроки.РазобратьСтрокуНаПодстроки(Сообщение);
	Message(СообщениеДлявывода, Маркер);

	Если Включен=1 Тогда
		Сам.Инит();
		Если СообщениеДляВывода<>"" Тогда
			Для Инд=1 По СтрКоличествоСтрок(СообщениеДляВывода) Цикл
				Если Маркер="!" Тогда
					СтрокаСообщения="ОШИБКА:	"+СтрПолучитьСтроку(СообщениеДляВывода,Инд);
				Иначе
					СтрокаСообщения=СтрПолучитьСтроку(СообщениеДляВывода,Инд);
				КонецЕсли;
				Сам.ЗаписатьСтроку(СтрокаСообщения);
			КонецЦикла;
		КонецЕсли;
		
		Сам.ЗакрытьФайл();
	КонецЕсли; 
	
КонецПроцедуры // Сообщить

//------------------------------------ ------------------------------------
Процедура ЗаписатьСобытие(Источник,ОписаниеСобытия,ДопИнфо="") Экспорт
	
	Если Включен=1 Тогда
		
		СообщениеДляВывода=глСтроки.РазобратьСтрокуНаПодстроки(ОписаниеСобытия);
		СообщениеДопИнфо="";
		Если ДопИнфо<>"" Тогда
			СообщениеДопИнфо=глСтроки.РазобратьСтрокуНаПодстроки(ДопИнфо);
		КонецЕсли;
		
		
		
		
		Если ВыводВОкноСообщений = 1 Тогда
			Для Инд=1 По СтрКоличествоСтрок(СообщениеДляВывода) Цикл
				СтрокаСообщения=глОбработатьМакроСтроку("%DATE%	%TIME%	"+СтрПолучитьСтроку(СообщениеДляВывода,Инд));
				Message(СтрокаСообщения);
			КонецЦикла;
			Если СообщениеДопИнфо<>"" Тогда
				Для Инд=1 По СтрКоличествоСтрок(СообщениеДопИнфо) Цикл
					СтрокаСообщения=глОбработатьМакроСтроку("%DATE%	%TIME%	>	"+СтрПолучитьСтроку(СообщениеДопИнфо,Инд));
					Message(СтрокаСообщения);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Сам=Сам();
		Инит();
		
		Для Инд=1 По СтрКоличествоСтрок(СообщениеДляВывода) Цикл
			СтрокаСообщения=Источник+"	"+СтрПолучитьСтроку(СообщениеДляВывода,Инд);
			Сам.ЗаписатьСтроку(СтрокаСообщения);
		КонецЦикла;
		Если СообщениеДопИнфо<>"" Тогда
			Для Инд=1 По СтрКоличествоСтрок(СообщениеДопИнфо) Цикл
				СтрокаСообщения=Источник+">	"+СтрПолучитьСтроку(СообщениеДопИнфо,Инд);
				Сам.ЗаписатьСтроку(СтрокаСообщения);
			КонецЦикла;
		КонецЕсли;
		
		ЗакрытьФайл();
	КонецЕсли;

КонецПроцедуры 

Функция Открыт() Экспорт
	Если ПустоеЗначение(ЛогФайл)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(Сам().ИмяФайла)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции


//------------------------------------ ------------------------------------
Процедура ЗаписатьТекст(Текст,Закрывать=1) Экспорт
	
	Если Включен=1 Тогда
		
		СообщениеДляВывода=глСтроки.РазобратьСтрокуНаПодстроки(Текст);
		
		
		Открывали=0;
		Если ПустоеЗначение(ЛогФайл)=1 Тогда
			Инит();
			Открывали=1;
		КонецЕсли;	
		
		Для Инд=1 По СтрКоличествоСтрок(СообщениеДляВывода) Цикл
			
			СтрокаСообщения=СтрПолучитьСтроку(СообщениеДляВывода,Инд);
			ЗаписатьСтроку(СтрокаСообщения,0);
			Если ВыводВОкноСообщений = 1 Тогда
				Message(СтрокаСообщения);
			КонецЕсли;
			
		КонецЦикла;
		
		Если (Закрывать=1)Или(Открывали=1) Тогда
			ЗакрытьФайл();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры 

// ---------------------------------------  ---------------------------------
процедура ПриЗаписи_Включен(ЗначениеДляУст)
	Включен = ЗначениеДляУст;
КонецПроцедуры // ПриЗаписи_Включен

//------------------------------------ ------------------------------------
Процедура Выключить() Экспорт
	Включен = 0;
КонецПроцедуры // Выключить

//------------------------------------ ------------------------------------
Процедура Включить() Экспорт
	Включен = 1;
КонецПроцедуры // Включить

//функция для отработки внешних событий.
//если объект должен обрабатывать события то надо регистрировать в менеджере событий объекта
//возвращает 1 - событие может дальше обрабатываться другими обработчиками
// 0 - дальнейшую обработку события  другими обработчиками прекратить
Функция ВнешнееСобытие(Издатель,Событие) Экспорт
	Если Событие.Источник="Команда" Тогда
		Если Событие.Описатель.ТипОбъекта="Команда" Тогда
			Если Событие.Описатель.Команда="ЗаписатьСобытие" Тогда
				Сам=Сам();
				ИсточникСобытия=Строка(Издатель);
				ОписаниеСобытия=Строка(Событие.Описатель.Данные);
				ДопИнфо=Событие.Описатель.Данные1;
				
				Если ПустоеЗначение(Событие.Описатель.Данные2)=0 Тогда
					ДопИнфо=ДопИнфо+"
					|"+Событие.Описатель.Данные2;
						
				КонецЕсли;
				ЗаписатьСобытие(ИсточникСобытия,ОписаниеСобытия,ДопИнфо);
				
				Сам.СобытиеОбработано(Событие);
				
			ИначеЕсли Событие.Описатель.Команда="СообщитьСобытие" Тогда	
				Сам=Сам();
				
				ИсточникСобытия=Строка(Издатель);
				ОписаниеСобытия=Строка(Событие.Описатель.Данные);
				ДопИнфо=Событие.Описатель.Данные1;
				
				Маркер=Событие.Описатель.Данные2;
				
				Если ВыводВОкноСообщений=1 Тогда
					Message(ОписаниеСобытия,Маркер);
				КонецЕсли;
				ЗаписатьСобытие(ИсточникСобытия,ОписаниеСобытия,ДопИнфо);
				
				Сам.СобытиеОбработано(Событие);
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат 1;
КонецФункции