//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:19
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;

Перем Буфер Экспорт; //Редактируемая строка
Перем МаксимальнаяДлинаБуфера Экспорт; //Максимально возможная длина редактируемой строки

Перем Курсор;//число. позиция курсора
Перем Клавиатура; //ссылка на объект-клавиатура
Перем ДопустимыеСимволы;
Перем ДопустимыеСимволыВсе;
Перем ДопустимыеСимволыЧисла;
Перем ДесятичныхЗнаков;//количество разрешенных знаков после запятой
Перем РежимЧисел;
Перем РазрешитьВедущиеНули;

Функция Этот(Конт) 		Возврат Конт; 			КонецФункции
Функция Сам() 			Возврат Этот(Контекст) 	КонецФункции



Процедура Сброс() Экспорт
	Буфер="";
	Курсор=0;
КонецПроцедуры


//------------------------------------ ------------------------------------
Процедура Конструктор()

	_База = Этот(Контекст).ПолучитьБазовыйКласс("Объект");
	Сам=Сам();
	Клавиатура=глДрайверы.Клавиатура;

	ДопустимыеСимволыЧисла="0123456789.";
	ДопустимыеСимволыВсе="";
	ДопустимыеСимволы=ДопустимыеСимволыЧисла;

	МаксимальнаяДлинаБуфера=17;

	ДесятичныхЗнаков=0;

	РежимЧисел=1;
	РазрешитьВедущиеНули=1;
	Сброс();
КонецПроцедуры // Конструктор


//возвращает режим разрешения ввода нулей в начале строки ввода
//может установить режим разрешения или запрета ведущих нулей
Функция ВедущиеНули(_РазрешитьВедущиеНули=-1) Экспорт
	Если _РазрешитьВедущиеНули=-1 Тогда
		Возврат РазрешитьВедущиеНули;
	КонецЕсли;
	Если _РазрешитьВедущиеНули=0 Тогда
		РазрешитьВедущиеНули=0;
	Иначе
		_РазрешитьВедущиеНули=1;
	КонецЕсли;
	РазрешитьВедущиеНули=_РазрешитьВедущиеНули
КонецФункции

Процедура ЗапретитьВедущиеНули() Экспорт
	РазрешитьВедущиеНули=0;
КонецПроцедуры

Процедура РазрешитьВедущиеНули() Экспорт
	РазрешитьВедущиеНули=1;
КонецПроцедуры


//------------------------------------ ------------------------------------
Процедура Деструктор()

КонецПроцедуры // Деструктор


Функция ДопустимыйСимвол(Символы) Экспорт
	Если ДопустимыеСимволы="" Тогда
		Возврат 1;
	КонецЕсли;

	Если СтрДлина(Символы)=1 Тогда
		Если Найти(ДопустимыеСимволы,Символы)>0 Тогда
			
			Если СтрДлина(Буфер)>=МаксимальнаяДлинаБуфера Тогда
				возврат 0;	
			ИначеЕсли РежимЧисел=1 Тогда
				Если Буфер="0" Тогда
					Если Символы="0" Тогда
						Возврат ВедущиеНули();
					КонецЕсли;
				ИначеЕсли Буфер="" Тогда
					Если Символы="." Тогда
						Возврат 0;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Возврат 1;
			КонецЕсли;
			Возврат 1;
		Иначе
			Возврат 0;
		КонецЕсли;
	ИначеЕсли СтрДлина(Символы)>1 Тогда
		Если СтрДлина(Буфер)+СтрДлина(Символы)>МаксимальнаяДлинаБуфера Тогда
			возврат 0;	
		Иначе
			Для Инд=1 По СтрДлина(Символы) Цикл
				Если ДопустимыйСимвол(Сред(Символы,Инд,1))=0 Тогда
					Возврат 0;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Возврат 1;
	КонецЕсли;
	Возврат 0;
КонецФункции

Функция УстановитьБуфер(Значение) Экспорт
	Сам=Сам();

	Если РежимЧисел=1 Тогда
		Если ТипЗначенияСтр(Значение)="Строка" Тогда
			Попытка
				Буфер=Сам.УстановитьБуфер(Число(Значение));
			Исключение
				Буфер=Сам.УстановитьБуфер(0);
			КонецПопытки;
		Иначе
			Буфер=Формат(Значение,"Ч15."+ДесятичныхЗнаков);
		КонецЕсли;
	Иначе
		Если ТипЗначенияСтр(Значение)="Строка" Тогда
			Буфер=Значение;
		Иначе
			Буфер=Строка(Значение);
		КонецЕсли;
	КонецЕсли;

	Сам.ТребуетсяОтображение();
	Возврат 1;
КонецФункции

Функция ОбработатьСимвол(Символ,Событие)
	
	Если ДопустимыйСимвол(Символ)=1 Тогда
		Если РежимЧисел=1 Тогда
			Если Буфер="0" Тогда
				Если (Символ="0")Или(Символ="00") Тогда
					Если ВедущиеНули()=1 Тогда
						//разрешено вводить ведущие нули
						Буфер=Буфер+Символ;
					КонецЕсли;
				ИначеЕсли (Символ=".") Тогда
					Буфер="0.";
				Иначе
					
					Если ВедущиеНули()=1 Тогда
						//разрешено вводить ведущие нули
						Буфер=Буфер+Символ;
					Иначе
						Буфер=Символ;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Буфер="" Тогда
				Если (Символ=".") Тогда
					Буфер="0.";
				ИначеЕсли (Символ="00") Тогда
					Если ВедущиеНули()=1 Тогда
						//разрешено вводить ведущие нули
						Буфер=Символ;
					Иначе
						Буфер="0";
					КонецЕсли;
				Иначе
					Буфер=Символ;
				КонецЕсли;
			ИначеЕсли Символ="." Тогда
				ПозицияЗапятой=Найти(Буфер,".");
				Если ПозицияЗапятой=0 Тогда
					Буфер=Буфер+Символ;
				КонецЕсли;
			Иначе
				Буфер=Буфер+Символ;
			КонецЕсли;
		Иначе
			Буфер=Буфер+Символ;
		КонецЕсли;
		
		Событие.Обработано=1;
	КонецЕсли;
	
	Если ДесятичныхЗнаков>0 Тогда
		ПозицияЗапятой=Найти(Буфер,".");
		Если ПозицияЗапятой>0 Тогда
			
			КоличествоЗнаковПослеЗапятой=СтрДлина(Буфер)-ПозицияЗапятой;
			Если КоличествоЗнаковПослеЗапятой>ДесятичныхЗнаков Тогда
				Буфер=Лев(Буфер,ПозицияЗапятой+ДесятичныхЗнаков);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ВнешнееСобытие(Издатель,Событие) Экспорт
	Сам=Сам();
	
	

	Если Событие.Источник="Клавиатура" Тогда

		Если Событие.Обработано=0 Тогда

			Символ=Клавиатура.ПолучитьСимвол(Событие.Описатель.Данные);


			ОбработатьСимвол(Символ,Событие);
			
			
			Если Событие.Обработано=0 Тогда
				Команда=глДрайверы.Клавиатура.ПолучитьКомандуРедактораСтроки(Событие.Описатель.Данные);
				Если Команда<>"" Тогда
					СобытиеКоманда=глПослатьКоманду(Сам,Команда);
					Возврат СобытиеКоманда.Обработано;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Событие.Источник="Команда" Тогда
		Команда=Событие.Описатель.Команда;

		
		
		Если Команда="СбросРедактора" Тогда

			Сам.Сброс();
			Событие.Обработано=1;
		ИначеЕсли Команда="УстановитьЗначениеРедактора" Тогда

			УстановитьБуфер(Событие.Описатель.Данные);
			Событие.Обработано=1;

		ИначеЕсли Команда="EDIT_ЗАБОЙ" Тогда
			Если СтрДлина(Буфер)>0 Тогда
				Буфер=Лев(Буфер,СтрДлина(Буфер)-1);
			КонецЕсли;
			Событие.Обработано=1;
			
		ИначеЕсли Найти("0/1/2/3/4/5/6/7/8/9/00/.",Команда)>0 Тогда
			Символ=Команда;
			ОбработатьСимвол(Символ,Событие);
//			Если ДопустимыйСимвол("00")=1 Тогда
//
//				Если РежимЧисел=1 Тогда
//
//					Если (Буфер="0")ИЛИ (СокрЛП(Буфер)="") Тогда
//						Если ВедущиеНули()=1 Тогда
//							//разрешено вводить ведущие нули
//							Буфер=Буфер+"00";
//						Иначе
//							Буфер="0";
//						КонецЕсли;
//					Иначе
//						Буфер=Буфер+"00";
//					КонецЕсли;
//				Иначе
//					Буфер=Буфер+"00";
//				КонецЕсли;
//
//
//			КонецЕсли;
//			Событие.Обработано=1;
		
		КонецЕсли;



	КонецЕсли;

	Если Событие.Обработано=1 Тогда

		глПослатьКоманду(Сам,"ИзменилсяРедакторСтроки",Сам.Буфер);
		Сам.ОбновитьФорму();
		возврат 0;
	КонецЕсли;
	возврат 1;
КонецФункции

Функция КоличествоДесятичныхЗнаков(_ДесятичныхЗнаков=-1) Экспорт
	Если _ДесятичныхЗнаков=-1 Тогда
		Возврат ДесятичныхЗнаков;
	ИначеЕсли _ДесятичныхЗнаков=0 Тогда
		ДопустимыеСимволы="0123456789";
	Иначе
		ДопустимыеСимволы="0123456789.";
	КонецЕсли;
	ДесятичныхЗнаков=_ДесятичныхЗнаков;;

	Возврат ДесятичныхЗнаков;
КонецФункции



Функция КакЧисло() Экспорт
	Попытка
		возврат Число(СокрЛП(Буфер));
	Исключение
	КонецПопытки;
	возврат 0;
КонецФункции

Функция КакСтрока() Экспорт
	возврат СокрЛП(Буфер);
КонецФункции

Функция ПредставлениеСтроки() Экспорт
	Возврат Строка(Буфер);
КонецФункции
