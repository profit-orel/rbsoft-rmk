//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:20
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем Объект экспорт;
Перем РасширениеФормы;

Перем СтараяДатаЖурнала;
Перем ККМЖурнала;
Перем ПродавецЖурнала;

Перем ОбновитьЖурнал;
Перем СтараяСдача;





Процедура  ПриНажатииКнопкиКлавиатуры(пКодКлавиши,Alt,Shift,Ctrl,пСимвол,пФлагСтандартнойОбработки)
	Если пКодКлавиши=kbAlt Тогда
		пФлагСтандартнойОбработки=0;
		Возврат;
	КонецЕсли;

	глПриНажатииКнопкиКлавиатуры(Контекст,пКодКлавиши,Alt,Shift,Ctrl);
	глДрайверы.Клавиатура.ВключитьПроверкуКлавиатуры();
КонецПроцедуры


//_____________________________________________________________________________
//Процедура ОбработкаВнешнегоСобытия
//Назначение:
//
//Параметры:
//
//
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)

	глОбменДанными.ОтключитьОжиданиеЗагрузки();

    глОбработкаВнешнегоСобытия(Контекст, Источник,Событие,Данные);
КонецПроцедуры


Процедура НастроитьСкин()
	Перем Р,Г,Б;

//	глСкин.Применить(Контекст,Форма,"RMK");
//
//	Картинка=глСкин.ПолучитьКартинку("RMK/IMAGE_ПанельИнфо");
//	Если ПустоеЗначение(Картинка)=0 Тогда
//		ПанельТабло.УстановитьКартинку(Картинка);
//	КонецЕсли;
//
//	Картинка=глСкин.ПолучитьКартинку("RMK/IMAGE_ПанельДисконт");
//	Если ПустоеЗначение(Картинка)=0 Тогда
//		ПанельДисконт.УстановитьКартинку(Картинка);
//	КонецЕсли;
//
//	Картинка=глСкин.ПолучитьКартинку("RMK/IMAGE_ПанельПоляДисконта");
//	Если ПустоеЗначение(Картинка)=0 Тогда
//		ПанельПоляДисконта.УстановитьКартинку(Картинка);
//	КонецЕсли;
КонецПроцедуры	// НастроитьСкин();



Процедура ПриЗакрытии ()

	//ЗавершитьРаботуСистемы();//для тестирования

	//возврат;

	Если Объект.ОткрытыйЧек()=1 Тогда
		глПредупреждение("При открытом чеке нельзя закрыть форму регистрации продаж.
		|Закройте или отмените открытый чек.");
		Объект.УстановитьРежим(Перечисление.РежимыРМК.Товары);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если глВопрос("Закончить работу с режимом регистрации продаж?", "Да+Нет")="Да" Тогда

		глВключитьРабочийЦикл();//включить после тестирования
	Иначе
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;


	Объект.СброситьФорму();

	глОчиститьПодписку();

КонецПроцедуры // ПриЗакрытии



Функция ПредставлениеПоля(ИмяПоля)


	Если ИмяПоля="Клиент" Тогда
		Попытка
			Если Объект.ДисконтнаяСистема.ЕстьКарта()=1 Тогда

				ДисконтнаяКарта=Объект.ДисконтнаяСистема.ДисконтнаяКарта;


				Инфо="Карта: "+ДисконтнаяКарта.Наименование;
				Если ДисконтнаяКарта.Активность=0 Тогда
					Инфо=Инфо+"
					|************** НЕАКТИВНА! **************";
				КонецЕсли;

				Если глНастройки.ПолучитьКакЧисло("CARDS/ShowMagneticReaderData")=1 Тогда
					Инфо=Инфо+"
				|ID:"+СокрЛП(ДисконтнаяКарта.ИД);
				КонецЕсли;



				Если глНастройки.ПолучитьКакЧисло("CARDS/ShowDiscountPercent")=1 Тогда
					Инфо=Инфо+"
				|Скидка: "+ДисконтнаяКарта.Скидка+"%";
				КонецЕсли;

				НазваниеАкции="";
				ПрименяемаяСкидка=Объект.ДисконтнаяСистема.ПолучитьСкидкуПоКарте(ДисконтнаяКарта,НазваниеАкции);
				Если ПрименяемаяСкидка<>ДисконтнаяКарта.Скидка Тогда
					Инфо=Инфо+"
				|Скидка по акции: "+ПрименяемаяСкидка+"% "+НазваниеАкции;
				КонецЕсли;


				Если глНастройки.ПолучитьКакЧисло("CARDS/ShowName")=1 Тогда
					Если ПустаяСтрока(ДисконтнаяКарта.НаименованиеКлиента)=0 Тогда
						Инфо=Инфо+"
						|"+ДисконтнаяКарта.НаименованиеКлиента;
					КонецЕсли;
				КонецЕсли;

				Если глНастройки.ПолучитьКакЧисло("CARDS/ShowSales")=1 Тогда
					Инфо=Инфо+"
				|Продажи: "+глФРМ(ДисконтнаяКарта.ТекущийОборот);
				КонецЕсли;

				Если глНастройки.ПолучитьКакЧисло("CARDS/ShowDiscountSumm")=1 Тогда
					Инфо=Инфо+"
				|Скидки:  "+глФРМ(ДисконтнаяКарта.ТекущаяСуммаСкидок);
				КонецЕсли;

				Если глНастройки.ПолучитьКакЧисло("CARDS/ShowBirthday")=1 Тогда
					Если ПустаяСтрока(ДисконтнаяКарта.ДатаРождения)=0 Тогда
						Инфо=Инфо+"
						|Дата рождения:  "+ДисконтнаяКарта.ДатаРождения;
					КонецЕсли;

				КонецЕсли;

				Если глНастройки.ПолучитьКакЧисло("CARDS/UpdateCardsFromCheckServer")=1 Тогда
					Инфо=Инфо+"
				|"+Объект.ДисконтнаяСистема.ИнфоПоПлатежнойСистеме;
				КонецЕсли;





				возврат Инфо;
			Иначе
				возврат "";
			КонецЕсли;
		Исключение
			возврат ОписаниеОшибки();
		КонецПопытки;

	ИначеЕсли ИмяПоля="Режим" Тогда
		Попытка

			возврат Строка(Объект.Режим);

		Исключение
			возврат ОписаниеОшибки();
		КонецПопытки;

	ИначеЕсли ИмяПоля="Продавец" Тогда
		Попытка
			Если ПустоеЗначение(Объект.Продавец)=0 Тогда
				возврат "Продавец: "+Объект.Продавец.ФИО;
			Иначе
				возврат "";
			КонецЕсли;
		Исключение
			возврат ОписаниеОшибки();
		КонецПопытки;
	ИначеЕсли ИмяПоля="Кассир" Тогда
		Попытка
			Если ПустоеЗначение(глПраваДоступа.ТекущийПользователь)=0 Тогда
				возврат "Кассир: "+глПраваДоступа.ТекущийПользователь.ФИО;
			Иначе
				возврат "";
			КонецЕсли;
		Исключение
			возврат ОписаниеОшибки();
		КонецПопытки;

	ИначеЕсли ИмяПоля="Прогрессбар" Тогда
		Попытка
			возврат Объект.Прогресс.СтрокаИндикатор();
		Исключение
			возврат ОписаниеОшибки();
		КонецПопытки;
	ИначеЕсли ИмяПоля="ТекстПроцесса" Тогда
		Попытка
			возврат Объект.Прогресс.Комментарий();
		Исключение
			возврат ОписаниеОшибки();
		КонецПопытки;

	КонецЕсли;

	Попытка
		ТаблицаОплаты=Объект.ТабличноеПолеОплаты.ПоставщикДанных.ТаблицаЗначений;
	Исключение
		Возврат "";
	КонецПопытки;


	ТаблицаТоваров=Объект.ТаблицаТоваров;

	Если ИмяПоля="Получено" Тогда

		Возврат глФРМ(ТаблицаОплаты.Итог("Сумма"));
	ИначеЕсли ИмяПоля="СдачаТовары" Тогда
		ТаблицаОплаты=Объект.ТаблицаОплаты;

		Если (ТаблицаОплаты.КоличествоСтрок()=0)И(ТаблицаТоваров.КоличествоСтрок()=0) Тогда
			Возврат глФРМ(Объект.СтараяСуммаСдачи);
		КонецЕсли;


		Сдача=ТаблицаОплаты.Итог("Сумма")-ТаблицаТоваров.Итог("Всего");

		Если Сдача<0 Тогда
			Форма.тктПолеСдача.Цвет(200,0,0);
			Возврат глФРМ(Сдача);
		Иначе
			Форма.тктПолеСдача.Цвет(100,100,100);
			Если Сдача=0 Тогда
				Возврат "";
			КонецЕсли;
		КонецЕсли;
		Возврат глФРМ(Сдача);
	ИначеЕсли ИмяПоля="Сдача" Тогда

		Сдача=ТаблицаОплаты.Итог("Сумма")-ТаблицаТоваров.Итог("Всего");

		Если Сдача<0 Тогда
			Форма.тктПолеОплатаСдача.Цвет(200,0,0);
			Форма.тктОплатаСдача.Цвет(200,0,0);
			Форма.тктОплатаСдача.Заголовок("Доплатить...");
			Возврат глФРМ(-Сдача);
		ИначеЕсли Сдача=0 Тогда
			Форма.тктОплатаСдача.Заголовок("Без сдачи");
			Форма.тктПолеОплатаСдача.Цвет(100,100,100);
			Форма.тктОплатаСдача.Цвет(100,100,100);
		Иначе
			Форма.тктОплатаСдача.Заголовок("Сдача...");
			Форма.тктПолеОплатаСдача.Цвет(100,100,100);
			Форма.тктОплатаСдача.Цвет(100,100,100);
		КонецЕсли;
		Возврат глФРМ(Сдача);
	ИначеЕсли ИмяПоля="Итог" Тогда
		Возврат глФРМ(ТаблицаТоваров.Итог("Сумма"));
	ИначеЕсли ИмяПоля="Скидка" Тогда
		Скидка=ТаблицаТоваров.Итог("Скидка");
		Если Скидка<0 Тогда
			Возврат "+"+глФРМ(-ТаблицаТоваров.Итог("Скидка"));
		Иначе
			Возврат глФРМ(ТаблицаТоваров.Итог("Скидка"));
		КонецЕсли;
	ИначеЕсли ИмяПоля="КОплате" Тогда
		Возврат глФРМ(ТаблицаТоваров.Итог("Всего"));
	КонецЕсли;

	Попытка
		ТД=Объект.ТабличноеПолеРМК.ТекущиеДанные;
		Если ПустоеЗначение(ТД)=1 Тогда
			Возврат "";
		КонецЕсли;
	Исключение
		//если данных нет то будет исключение

		Возврат ОписаниеОшибки();
	КонецПопытки;

	Если ПустоеЗначение(ТД)=1 Тогда
		Возврат "";
	КонецЕсли;

	Если ИмяПоля="Товар" Тогда
		возврат ТД.Код+" "+СокрЛП(ТД.Артикул)+" "+ТД.Наименование;
	ИначеЕсли ИмяПоля="Штрихкод" Тогда
		возврат ТД.Штрихкод;


	ИначеЕсли ИмяПоля="Сумма" Тогда


		Если ТД.Всего=0 Тогда
			возврат глФРМКоличество(ТД.Количество,3,,1)+" бесплатно!"
		КонецЕсли;
		Если ТД.Скидка=0 Тогда
			возврат глФРМ(ТД.Цена)+" x "+глФРМКоличество(ТД.Количество,3,,1)+" = "+глФРМ(ТД.Всего);
		ИначеЕсли ТД.Скидка<0 Тогда
			СуммаБезСкидки=ТД.Цена*ТД.Количество;
			Если СуммаБезСкидки=0 Тогда
				возврат глФРМ(ТД.Всего);
			Иначе
				СкидкаСтроки=-Окр(ТД.Скидка/СуммаБезСкидки*100,0,1);
				Если (СкидкаСтроки=0)И(ТД.Скидка<>0) Тогда
					СкидкаСтроки=-Окр(ТД.Скидка/СуммаБезСкидки*100,2,1);
				КонецЕсли;
				возврат глФРМ(ТД.Цена)+" x "+глФРМКоличество(ТД.Количество,3,,1)+" + "+глФРМ(-ТД.Скидка)+" = "+глФРМ(ТД.Всего)
				+" (+"+СкидкаСтроки+"%)";
			КонецЕсли;  //СуммаБезкидки=0
		Иначе
			СуммаБезСкидки=ТД.Цена*ТД.Количество;
			Если СуммаБезСкидки=0 Тогда
				возврат глФРМ(ТД.Всего);
			Иначе
				СкидкаСтроки=Окр(ТД.Скидка/СуммаБезСкидки*100,0,1);
				Если (СкидкаСтроки=0)И(ТД.Скидка<>0) Тогда
					СкидкаСтроки=Окр(ТД.Скидка/СуммаБезСкидки*100,2,1);
				КонецЕсли;
				возврат глФРМ(ТД.Цена)+" x "+глФРМКоличество(ТД.Количество,3,,1)+" - "+глФРМ(ТД.Скидка)+" = "+глФРМ(ТД.Всего)
				+" ("+СкидкаСтроки+"%)";
			КонецЕсли;  //СуммаБезкидки=0
		КонецЕсли;
	КонецЕсли;
	возврат "";
КонецФункции	// ТекущееОписание

Функция СостояниеРедактора()
	возврат Объект.РедакторСтроки.ПредставлениеСтроки();
КонецФункции


Процедура ЗаполнитьЖурналЧеков(ДатаЖурнала)

	ДатаСмены=ТекущаяДата();

	Объект.ТабличноеПолеЖурналЧеков.Отбор.ДатаНачала.Значение=ДатаЖурнала;
	Объект.ТабличноеПолеЖурналЧеков.Отбор.ДатаНачала.ТипСравнения=">=";
	Объект.ТабличноеПолеЖурналЧеков.Отбор.ДатаНачала.Использовать=1;

	Объект.ТабличноеПолеЖурналЧеков.Отбор.ДатаКонца.Значение=ДатаЖурнала;
	Объект.ТабличноеПолеЖурналЧеков.Отбор.ДатаКонца.ТипСравнения="<=";
	Объект.ТабличноеПолеЖурналЧеков.Отбор.ДатаКонца.Использовать=1;

	Если ПустоеЗначение(ККМЖурнала)=0 Тогда
		Объект.ТабличноеПолеЖурналЧеков.Отбор.ККМ.Значение=ККМЖурнала.Данные.Серийныйномер;
		Объект.ТабличноеПолеЖурналЧеков.Отбор.ККМ.ТипСравнения="=";
		Объект.ТабличноеПолеЖурналЧеков.Отбор.ККМ.Использовать=1;
	Иначе
		Объект.ТабличноеПолеЖурналЧеков.Отбор.ККМ.Использовать=0;
	КонецЕсли;  //

	Если ПустоеЗначение(ПродавецЖурнала)=0 Тогда
		Объект.ТабличноеПолеЖурналЧеков.Отбор.Продавец.Значение=ПродавецЖурнала.Данные.ИД;
		Объект.ТабличноеПолеЖурналЧеков.Отбор.Продавец.ТипСравнения="=";
		Объект.ТабличноеПолеЖурналЧеков.Отбор.Продавец.Использовать=1;
	Иначе
		Объект.ТабличноеПолеЖурналЧеков.Отбор.Продавец.Использовать=0;
	КонецЕсли;  //



	Объект.ТабличноеПолеЖурналЧеков.Обновить();
	ОбновитьЖурнал=0;
КонецПроцедуры	// ЗаполнитьЖурналЧеков

Процедура ЗаполнитьЖурналЧековПоДатеПродаж()
	Если ПустоеЗначение(ВыбДатаПродаж)=1 Тогда
		ВыбДатаПродаж=ТекущаяДата();
	КонецЕсли;
	ЗаполнитьЖурналЧеков(ВыбДатаПродаж);
	СтараяДатаЖурнала=ВыбДатаПродаж;
	ОбновитьЖурнал=1;
КонецПроцедуры //ЗаполнитьЖурналЧековПоДатеПродаж



Процедура ОтобразитьРежим()
	//Попытка
	Если Объект.Режим=Перечисление.РежимыРМК.Товары Тогда
		Форма.ИспользоватьСлой("Основной,Товары,Общий",2);
		Объект.ТабличноеПолеРМК.ОбновитьСтроки();
	ИначеЕсли Объект.Режим=Перечисление.РежимыРМК.Продавцы Тогда
		Форма.ИспользоватьСлой("Продавцы,Общий",2);
		Объект.ТабличноеПолеВыработкиПродавцов.Обновить();
	ИначеЕсли Объект.Режим=Перечисление.РежимыРМК.Оплаты Тогда
		Форма.ИспользоватьСлой("Оплаты,Общий",2);
	ИначеЕсли Объект.Режим=Перечисление.РежимыРМК.Журнал Тогда
		Форма.ИспользоватьСлой("Журнал,Общий",2);

		Если ПустоеЗначение(ККМЖурнала)=1 Тогда
			ВыбККМ="По всем ККМ";
		Иначе
			ВыбККМ=ККМЖурнала.Данные.Наименование;
		КонецЕсли;

		Если ПустоеЗначение(ПродавецЖурнала)=1 Тогда
			ВыбПродавец="По всем продавцам";
		Иначе
			ВыбПродавец=ПродавецЖурнала.Данные.Наименование;
		КонецЕсли;


		Если ОбновитьЖурнал=1 Тогда
			ОбновитьЖурнал=0;
			ЗаполнитьЖурналЧеков(ВыбДатаПродаж);
			Форма.ТП_ЖурналЧеков.Доступность(1);
			Форма.ТП_ТаблицаИтогов.Доступность(1);
			Форма.ТП_ТаблицаИтоговОплаты.Доступность(1);
		КонецЕсли;
	ИначеЕсли Объект.Режим=Перечисление.РежимыРМК.Сервис Тогда
		Форма.ИспользоватьСлой("Сервис,Общий",2);
	ИначеЕсли Объект.Режим=Перечисление.РежимыРМК.ВнешнийЧек Тогда
		Форма.ИспользоватьСлой("ВнешнийЧек,Общий",2);
	ИначеЕсли Объект.Режим=Перечисление.РежимыРМК.Возврат Тогда
		Форма.ИспользоватьСлой("Возврат,Общий",2);
	ИначеЕсли Объект.Режим=Перечисление.РежимыРМК.Печать Тогда
		Форма.ИспользоватьСлой("Печать,Общий",2);
	Иначе
		Форма.ИспользоватьСлой("Основной,Товары,Общий",2);
	КонецЕсли;
	Форма.Обновить();
	//Исключение
	//	глДебаг("ОтобразитьРежим: "+ОписаниеОшибки());
	//КонецПопытки;
КонецПроцедуры // ОтобразитьРежим


Процедура ДатаЖурналаВперед()
	Если ПустоеЗначение(ВыбДатаПродаж)=1 Тогда
		ВыбДатаПродаж=ТекущаяДата();
	КонецЕсли;
	ВыбДатаПродаж=ВыбДатаПродаж+1;
	СтараяДатаЖурнала=ВыбДатаПродаж;
	ОбновитьЖурнал=1;
	ОтобразитьРежим();
КонецПроцедуры

Процедура ДатаЖурналаНазад()
	Если ПустоеЗначение(ВыбДатаПродаж)=1 Тогда
		ВыбДатаПродаж=ТекущаяДата();
	КонецЕсли;
	ВыбДатаПродаж=ВыбДатаПродаж-1;
	СтараяДатаЖурнала=ВыбДатаПродаж;
	ОбновитьЖурнал=1;
	ОтобразитьРежим();
КонецПроцедуры

Процедура ПриВыбореДатыЖурнала()
	Если ВыбДатаПродаж<>СтараяДатаЖурнала Тогда
		Если ПустоеЗначение(ВыбДатаПродаж)=1 Тогда
			ВыбДатаПродаж=ТекущаяДата();
		КонецЕсли;

		СтараяДатаЖурнала=ВыбДатаПродаж;
		ОбновитьЖурнал=1;
		ОтобразитьРежим();
	КонецЕсли;
КонецПроцедуры

Процедура ОчиститьККМ()
	ККМЖурнала="";
	ОбновитьЖурнал=1;
	ОтобразитьРежим();
КонецПроцедуры

Процедура ПриВводеСтрокиККМ()
	Если ПустаяСтрока(ВыбККМ)=1 Тогда
		ОчиститьККМ();
	Иначе
		//вставить поиск по первым буквам как в 8-ке

	КонецЕсли;
КонецПроцедуры


Процедура ОчиститьПродавца()
	ПродавецЖурнала="";
	ОбновитьЖурнал=1;
	ОтобразитьРежим();
КонецПроцедуры


Процедура ПриВводеСтрокиПродавца()
	Если ПустаяСтрока(ВыбПродавец)=1 Тогда
		ОчиститьПродавца();
	Иначе
		//вставить поиск по первым буквам как в 8-ке

	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии ()
	Если ПустоеЗначение(Форма.Параметр)=1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	ВыбДатаПродаж=ТекущаяДата();
	СтруктураПараметров=Форма.Параметр;
	Объект=СтруктураПараметров.Объект;

	Объект.УстановитьКонтекст(глВзятьКонтекст(Контекст));
КонецПроцедуры // ПриОткрытии

Процедура ПриАктивизацииСтрокиРМК()

КонецПроцедуры


Процедура ПриАктивизацииСтрокиОплаты()

КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога,ФСО)
	Если ИдентЭлемДиалога="ВыбККМ" Тогда
		ФСО=0;
		СпрККМ=СоздатьОбъект("Устройство.ККМ");
		Если СпрККМ.ВыбратьОбъект(ККМЖурнала)=1 Тогда
			ОбновитьЖурнал=1;
			ОтобразитьРежим();
		КонецЕсли;
	ИначеЕсли ИдентЭлемДиалога="ВыбПродавец" Тогда
		ФСО=0;
		СпрПользователь=СоздатьОбъект("Пользователь");

		Если СпрПользователь.ВыбратьОбъект(ПродавецЖурнала)=1 Тогда
			ОбновитьЖурнал=1;
			ОтобразитьРежим();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//_____________________________________________________________________________
//Процедура ПослеОТкрытия
//Назначение:
//
//Параметры:
//
//
Процедура ПослеСозданияФормы()

	РасширениеФормы=СоздатьОбъект("РасширениеФормы");
	РасширениеФормы.УстановитьФорму(Форма);

	Попытка
		НастроитьСкин();
	Исключение
		глЗаписатьСобытие("","РМК:ПослеОткрытия()",ОписаниеОшибки());
	КонецПопытки;

	Объект.Инит(глВзятьКонтекст(Контекст));

	Окна=СоздатьОбъект("Окна");

	Окна.Максимизировать(Форма);
	Окна.СтильОкна(Форма,2);

	СЗ=Окна.ПолучитьМеню();
	Для Инд=1 По СЗ.РазмерСписка() Цикл
		Имя="";
		Элемент=СЗ.ПолучитьЗначение(Инд,Имя);
		Окна.ВидимостьМеню(Имя,0);
	КонецЦикла;


	Объект.УстановитьРежим(Перечисление.РежимыРМК.Товары);

	ККМЖурнала=0;
	ПродавецЖурнала=0;

	Попытка //для тестирования
		глПослатьКоманду(Объект,"Дисплей_Приветствие",,"Оборудование");
	Исключение
	КонецПопытки;

	глОбменДанными.ВключитьОжиданиеЗагрузки();
КонецПроцедуры //ПослеОТкрытия

ОбновитьЖурнал=1;
