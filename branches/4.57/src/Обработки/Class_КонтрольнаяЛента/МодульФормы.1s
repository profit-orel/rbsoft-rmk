//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:19
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;
Перем КаталогТранзакций экспорт;
Перем ККМ;


Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции



Функция ИмяФайлаКонтрольнойЛенты() Экспорт
	Если ПустоеЗначение(ККМ)=1 Тогда
		Возврат КаталогТранзакций+"\KKM.log";
	Иначе	
		Возврат КаталогТранзакций+"\KKM_"+ККМ.Данные.СерийныйНомер+".log";
	КонецЕсли;	
КонецФункции	// глИмяФайлаКонтрольнойЛенты

Процедура УстановитьККМ(_ККМ) экспорт 
	ККМ=_ККМ;
КонецПроцедуры

//_____________________________________________________________________________
//Функция
//Назначение:
//Параметры:
//
//
//Возвращает:
//
Функция ПризнакНачалаЧекаНаКЛ() Экспорт
	Возврат "<@> "+ТекущаяДата()+";"+ТекущееВремя();
КонецФункции //

Функция ПодготовитьКаталогТранзакций(Ошибка="") Экспорт
	Попытка

		Стр=ТекущаяДата();
		Стр=СтрЗаменить(Стр,".",",");
		Сп=СоздатьОбъект("СписокЗначений");
		Сп.ИзСтрокиСРазделителями(Стр);
		Год=Число(Сп.ПолучитьЗначение(3));
		Месяц=Число(Сп.ПолучитьЗначение(2));
		День=Число(Сп.ПолучитьЗначение(1));
		Если Год<100 Тогда
			Год=Год+2000;
		КонецЕсли;
		ИмяКаталога=Строка(Год*10000+Месяц*100+День);

		КаталогБД=глОбработатьМакроСтроку("%DB%");
		Если ФС.СуществуетФайл(КаталогБД)=0 Тогда
			ФС.СоздатьКаталог(КаталогБД);
		КонецЕсли;

		КаталогТранзакций=глОбработатьМакроСтроку("%DB%\TRANS");
		Если ФС.СуществуетФайл(КаталогТранзакций)=0 Тогда
			ФС.СоздатьКаталог(КаталогТранзакций);
		КонецЕсли;

		КаталогТранзакций=глОбработатьМакроСтроку("%DB%\TRANS\"+ИмяКаталога);

		Если ФС.СуществуетФайл(КаталогТранзакций)=0 Тогда
			ФС.СоздатьКаталог(КаталогТранзакций);
		КонецЕсли;

		Если ФС.СуществуетФайл(КаталогТранзакций)=0 Тогда
			Ошибка="Неудачная попытка создания каталога транзакций.
			|"+КаталогТранзакций;
			возврат 0;
		КонецЕсли;
	Исключение
		Ошибка="Неудачная попытка создания каталога транзакций.
		|"+КаталогТранзакций+"
		|"+ОписаниеОшибки();
		возврат 0;
	КонецПопытки;

	возврат 1;
КонецФункции

//------------------------------------ ------------------------------------
Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("Файл.Лог");

	ТекстОшибки="";
	Если ПодготовитьКаталогТранзакций(ТекстОшибки)=0 Тогда
		глПредупреждение(ТекстОшибки);
	КонецЕсли;
КонецПроцедуры // Конструктор

//------------------------------------ ------------------------------------
Процедура Деструктор()

КонецПроцедуры // Деструктор

Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии

 // завершение класса Wizard1C++ !!
