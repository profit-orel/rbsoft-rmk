//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:19
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;
Перем СтэкПодМеню Экспорт;
Перем флагКомандаРазрешена Экспорт;//0 - если команда запрещена 1 - разрешена. 
//Нужно если надо делать какие то операции после отработки процедуры ВнешнееСобытие
//Например, если требуется закрыть окно меню, то сначала отрабатывает ВнешнееСобытие, которое проверяет правомочность действия
//Выставляет флагКомандаРазрешена=1, если окно закрыть можно, и из модуля формы закрывается окно

Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции





//------------------------------------ ------------------------------------
Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("Объект");
	Сам=Сам();
	
	
	
	СтэкПодМеню=СоздатьОбъект("ТаблицаЗначений");
	СтэкПодМеню.НоваяКолонка("Слои");//Слои формы, которые были до входа в подменю
	СтэкПодМеню.НоваяКолонка("НомерКнопки");//Номер кнопки, при нажатии на которую входили в подменю
	
	
КонецПроцедуры // Конструктор


Процедура УстановитьОсновноеМеню(Слои,НомерКнопки) Экспорт
	Сам=Сам();
	
	СтэкПодМеню.УдалитьСтроки();
	СтэкПодМеню.НоваяСтрока();
	СтэкПодМеню.Слои=Слои;
	СтэкПодМеню.НомерКнопки=НомерКнопки;
	Сам.ИспользоватьСлой(СтэкПодМеню.Слои,НомерКнопки);
КонецПроцедуры

//возвращает слои текущего подменю
//возвращает пустую строку, если не производилась инициализация меню
Функция ТекущееМеню() Экспорт
	Если СтэкПодМеню.КоличествоСтрок()=0 Тогда
		Возврат "";
	Иначе
		СтэкПодМеню.ПолучитьСтрокуПоНомеру(СтэкПодМеню.КоличествоСтрок());
		Возврат СтэкПодМеню.Слои;
	КонецЕсли;
КонецФункции

Процедура ВойтиВПодменю(Слои,НомерКнопки=1) Экспорт
	Сам=Сам();
	СтэкПодМеню.НоваяСтрока();
	СтэкПодМеню.Слои=Слои;
	СтэкПодМеню.НомерКнопки=Сам.НомерТекущейКнопки();

	Сам.ИспользоватьСлой(СтэкПодМеню.Слои,НомерКнопки);
КонецПроцедуры

Процедура ВыйтиИзПодменю() Экспорт
	Сам=Сам();
	Если СтэкПодМеню.КоличествоСтрок()>1 Тогда
		
		СтэкПодМеню.ПолучитьСтрокуПоНомеру(СтэкПодМеню.КоличествоСтрок());
		НомерКнопки=СтэкПодМеню.НомерКнопки;
		
		СтэкПодМеню.УдалитьСтроку(СтэкПодМеню.КоличествоСтрок());
		СтэкПодМеню.ПолучитьСтрокуПоНомеру(СтэкПодМеню.КоличествоСтрок());
		Сам.ИспользоватьСлой(СтэкПодМеню.Слои,НомерКнопки);
		
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии


Функция ВнешнееСобытие(Издатель,Событие) Экспорт
	
	Сам=Сам();

	Отработали=0;



	Если Событие.Источник="Команда" Тогда

		Команда=ВРЕГ(Событие.Описатель.Команда);

		Если ПустоеЗначение(Команда)=0 Тогда
	
			глОбменДанными.ОтключитьОжиданиеЗагрузки();
			флагКомандаРазрешена=0;
			Если Команда="РЕГИСТРАЦИЯ" Тогда
	
				Если глПраваДоступа.ЕстьПраво("РЕГИСТРАЦИЯ.ВХОДВРЕЖИМ")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе
					флагКомандаРазрешена=1;
					глРМК=СоздатьОбъект("РМК.Магазин");
					глРМК.ОткрытьФормуОбъекта();
				КонецЕсли;
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("ВЫХОД_WINDOWS") Тогда
	
				Если глПраваДоступа.ЕстьПраво("ЗавершениеРаботы.ВыходВОС")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
			
				Иначе	
				
					Ответ=глВопрос("Выйти в Windows?","Да+Нет",10,4,"Завершение работы","Нет");
					Если Ответ="Да" Тогда
						флагКомандаРазрешена=1;
						Работаем=0;
						Если глНастройки.ПолучитьКакЧисло("SETTINGS/MODALMODE")=1 Тогда
							Окна=СоздатьОбъект("Окна");
							Окна.ВыключитьМодальныйРежим();
						КонецЕсли;
						
						ЗавершитьРаботуСистемы(0);
					КонецЕсли;
					
				КонецЕсли;
				Отработали = 1;
	
			ИначеЕсли Команда=ВРЕГ("ВЫХОД_1С") Тогда
	
				Если глПраваДоступа.ЕстьПраво("ЗавершениеРаботы.ВыходВ1С")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе
	
					флагКомандаРазрешена=1;
					
					глОбщиеФункции.ВидимостьМеню(1);
					Окна=СоздатьОбъект("Окна");
					Окна.ПоказыватьПанели(1);
					Окна.ПоказыватьСтрокуСостояния(1);
					Работаем=0;
					глОбщиеФункции.ВидимостьМеню(1);
					Окна.ПоказыватьПанели(1);
					Окна.ПоказыватьСтрокуСостояния(1);
	
					Если глНастройки.ПолучитьКакЧисло("SETTINGS/MODALMODE")=1 Тогда
						Окна.ВыключитьМодальныйРежим();
					КонецЕсли;
					
					
				КонецЕсли;
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("ВЫКЛЮЧИТЬТЕРМИНАЛ") Тогда
	
				//Закомментировано для исключения случайного выключения при отладке
				
				
				
				//Если глПраваДоступа.ЕстьПраво("ЗавершениеРаботы.Выключение")=0 Тогда
				//	глПраваДоступа.ПоказатьОкноЗапрета();
				//Иначе
				//	Ответ=глВопрос("Выключить терминал?","Да+Нет",10,4,"Завершение работы","Нет");
				//	Если Ответ="Да" Тогда
				//		флагКомандаРазрешена=1;
				//		Работаем=0;
				//		Если Debug=1 Тогда
				//			ЗавершитьРаботуСистемы(0);
				//		Иначе
				//			глОбщиеФункции.ВыключитьКомпьютер();
				//		КонецЕсли;
				//	КонецЕсли;
				//КонецЕсли;
				Отработали = 1;
				
			ИначеЕсли Команда="НАЛИЧНОСТЬ" Тогда	
				
				
				ККМ=СоздатьОбъект("Устройство.ККМ");
				ККМ.ОткрытьФормуОбъектаМодально("Наличность");
				
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("Отчеты_Z") Тогда
				
				Если глПраваДоступа.ЕстьПраво("ККМ.ОтчетСГашением")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе
					
					глДрайверы.ЗакрытьСмену();
				КонецЕсли;
				
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("Отчеты_X") Тогда
	
				Если глПраваДоступа.ЕстьПраво("ККМ.ОтчетБезГашения")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе
					глДрайверы.ХОтчет();
				КонецЕсли;
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("ОтчетПоПродавцам") Тогда
	
				Если глПраваДоступа.ЕстьПраво("Отчеты.ПоПродавцам")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе
					ОтчетПоПродажам();
				КонецЕсли;
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("Возврат_Банковский") Тогда
				глПредупреждение("Не настроена работа с платежной системой.");
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("Выгрузка") Тогда
		
				Если глПраваДоступа.ЕстьПраво("ОбменДанными.Выгрузка")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе
					глОбменДанными.ОткрытьФормуОбъектаМодально("ФормаВыгрузки");
				КонецЕсли;
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("Загрузка") Тогда
			
				Если глПраваДоступа.ЕстьПраво("ОбменДанными.Загрузка")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе    
					глОбменДанными.ЗагрузкаДанных(1);
				КонецЕсли;
				Отработали = 1;

		
			ИначеЕсли Команда=ВРЕГ("Оборудование") Тогда
	
				Если глПраваДоступа.ЕстьПраво("Настройка.Оборудование")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе
					глДрайверы.ОткрытьФормуОбъектаМодально();
				КонецЕсли;
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("Пользователи") Тогда
				Если глПраваДоступа.ЕстьПраво("Настройка.Пользователи")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе
					Пользователь=СоздатьОбъект("Пользователь");
					Пользователь.ОткрытьФормуОбъектаМодально("ФормаСписка");
				КонецЕсли;
				Отработали = 1;
			ИначеЕсли Команда=ВРЕГ("Параметры") Тогда
				Если глПраваДоступа.ЕстьПраво("Настройка.Параметры")=0 Тогда
					глПраваДоступа.ПоказатьОкноЗапрета();
				Иначе
					глНастройки.ОткрытьФормуОбъектаМодально();
				КонецЕсли;
				Отработали = 1;
			ИначеЕсли Команда="БЛОКИРОВКА" Тогда
				глПраваДоступа.Авторизация(1);
				Отработали = 1;
			КонецЕсли;  //
		КонецЕсли;  //
		

	КонецЕсли;

	Если Отработали = 1 Тогда
		глСобытиеОбработано(Событие);
		Возврат 0;
    КонецЕсли;
	Возврат 1;

КонецФункции
 
