//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:19
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
перем _База Экспорт;
Перем РМК Экспорт; //Ссылка на связанный объект РМК

Перем ДисконтнаяКарта Экспорт;//Объект - ДисконтнаяКарта

Перем ИнфоПоПлатежнойСистеме Экспорт;//строка описание дисконтной карты

Перем ВидРучнойСкидкиНаЧек;//-1 -скидки нет, 0 - скидка процентом, 1-скидка суммой
Перем РучнаяСкидкаНаЧекСуммой;
Перем РучнаяСкидкаНаЧекПроцентом;
Перем СнятьСуммуСНакопительнойКарты;//1-надо снять сумму с накопительной карты




Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции




//------------------------------------ ------------------------------------
Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("Объект");
	ИнфоПоПлатежнойСистеме="";
	СнятьСуммуСНакопительнойКарты=0;

КонецПроцедуры // Конструктор

//------------------------------------ ------------------------------------
Процедура Деструктор()
КонецПроцедуры // Деструктор

//после создания надо привязывать к экземпляру РМК
Процедура Инит(СсылкаНаРМК) Экспорт
	РМК=СсылкаНаРМК;
КонецПроцедуры

Функция ЕстьДеньРождения(ДатаРождения) Экспорт
	Если ТипЗначенияСтр(ДатаРождения)="Дата" Тогда
		Если (ДатаЧисло(ДатаРождения)=ДатаЧисло(ТекущаяДата()))И
		(ДатаМесяц(ДатаРождения)=ДатаМесяц(ТекущаяДата())) Тогда
			Возврат 1;
		КонецЕсли;
	ИначеЕсли ТипЗначенияСтр(ДатаРождения)="Строка" Тогда
		Если ПустаяСтрока(СокрЛП(ДатаРождения))=1 Тогда
			Возврат 0;
		Иначе
			Дата1=глСтроки.ДатаИзСтроки(СокрЛП(ДатаРождения));
			Возврат ЕстьДеньРождения(Дата1);
		КонецЕсли;
	КонецЕсли;
	Возврат 0;
КонецФункции

Функция ЕстьЮбилей(ДатаРождения) Экспорт
	Если ЕстьДеньРождения(ДатаРождения)=1 Тогда
		Возраст=ДатаГод(ТекущаяДата())-ДатаГод(ДатаРождения);
		Если Возраст%5=0 Тогда
			Возврат 1;
		КонецЕсли;

	КонецЕсли;
	Возврат 0;
КонецФункции

//возвращает процент скидки в зависимости от предоставленной дисконтной карты
//НазваниеАкции - возвращается примененная к карте текущая акция. Например "Для именинников"
Функция ПолучитьСкидкуПоКарте(ДисконтнаяКарта,НазваниеАкции="",_ДатаПродажи="",_ВремяПродажи="") Экспорт
	Если ПустоеЗначение(ДисконтнаяКарта)=1 Тогда
		возврат 0;
	КонецЕсли;
	СкидкаПоКарте=ДисконтнаяКарта.Скидка;
	
	Если СкидкаПоКарте<>0 Тогда
		НазваниеАкции="Дисконт";
	КонецЕсли;

	Если СокрЛП(ДисконтнаяКарта.ДатаРождения)<>"" Тогда
		Если ЕстьДеньРождения(ДисконтнаяКарта.ДатаРождения)=0 Тогда
			Возврат СкидкаПоКарте;
		КонецЕсли;
	КонецЕсли;
	
	//Сюда прошли только именинники
	//Проверить дополнительно по таблице автоматических скидок
	//Проверим акцию для именинников
	//То есть даем специальную скидку, если сегодня день рождения владельца карты.
	
	Если _ДатаПродажи="" Тогда
		ДатаПродажи=ТекущаяДата();
	Иначе
		ДатаПродажи=_ДатаПродажи;
	КонецЕсли;
	Если _ВремяПродажи="" Тогда
		ВремяПродажи=ТекущееВремя();
	Иначе
		ВремяПродажи=_ВремяПродажи;
	КонецЕсли;
	
	ДатаПродажиСтр=Формат(ДатаПродажи,"ДГГГГММДД");

	ПустаяДата=Формат("","С8");
	ПустоеВремя=Формат("","С6");
	ПустоеИД=Формат("","С40");
	

	ОграничениеПоВремени=
	    "((date1<='"+ДатаПродажиСтр+"')or(date1='"+ПустаяДата+"'))
		|and
		|((date2>='"+ДатаПродажиСтр+"')or(date2='"+ПустаяДата+"'))
		|and
		|((time1<='"+СтрЗаменить(ВремяПродажи,":","")+"')or(time1='"+ПустоеВремя+"'))
		|and
		|((time2>='"+СтрЗаменить(ВремяПродажи,":","")+"')or(time2='"+ПустоеВремя+"'))";

	
	ОграничениеПоКарте="(IDCARD='"+ДисконтнаяКарта.ИД+"')";
	
	ТЗ=глБД.ПолучитьЗаписиИзТаблицыПоПолю("Discnt","Type",5,
		"(Active=1) and (DiscType=0) and "+ОграничениеПоВремени+" and "+ОграничениеПоКарте,"Discount");

	Если ТЗ.КоличествоСтрок()>0 Тогда
		//Нашли индивидуальное для карты правило для именинника
		
		
		ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.КоличествоСтрок());
		СкидкаПоКарте=ТЗ.Discount;
			
		Возврат СкидкаПоКарте;
	КонецЕсли;	
	
	ОграничениеПоКарте="(IDCARD='"+ПустоеИД+"')and(CARDTYPE='"+ПустоеИД+"')";	
	ТЗ=глБД.ПолучитьЗаписиИзТаблицыПоПолю("Discnt","Type",5,
		"(Active=1) and (DiscType=0) and "+ОграничениеПоВремени+" and "+ОграничениеПоКарте,"Discount");

	Если ТЗ.КоличествоСтрок()>0 Тогда
		//Нашли общее для всех карт правило для именинника
		
		
		ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.КоличествоСтрок());
		СкидкаПоКарте=ТЗ.Discount;
			
		Возврат СкидкаПоКарте;
	КонецЕсли;	
	
		
	Возврат СкидкаПоКарте;
КонецФункции

//Переопределить потом для получения скидки по дополнительным условиям
Функция ПолучитьПроцентСкидкиПоТовару(РМК,Товар) Экспорт
	Скидка=Товар.Скидка;
	//Проверить дополнительно по таблице автоматических скидок

	Возврат Скидка;
КонецФункции

//Ищет в выборке строки, подходящие по дню недели и числам месяца
Функция ПолучитьТаблицуСкидокПоДнямНеделиИЧислам(ДатаПродажи,ТЗ) Экспорт

	ДеньНедели=НомерДняНедели(ДатаПродажи);
	ЧислоМесяца=ДатаЧисло(ДатаПродажи);

	ТЗРезультат=СоздатьОбъект("ТаблицаЗначений");
	ТЗ.Выгрузить(ТЗРезультат);
	ТЗРезультат.НоваяКолонка("Приоритет","Число");


	Если ТЗРезультат.КоличествоСтрок()>0 Тогда
		Инд=1;

		Пока Инд<=ТЗРезультат.КоличествоСтрок() Цикл
			Оставить=0;
			ТЗРезультат.ПолучитьСтрокуПоНомеру(Инд);
			Если ПустаяСтрока(ТЗРезультат.WeekDays)=1 Тогда
				Если ПустаяСтрока(ТЗРезультат.MonthDay)=1 Тогда
					//правило для всех дней
					Оставить=1;
					ТЗРезультат.Приоритет=3;
				ИначеЕсли Найти(ТЗРезультат.MonthDay,ЧислоМесяца)>0 Тогда
					//правило для заданного числа месяца
					Оставить=1;
					ТЗРезультат.Приоритет=2;
				КонецЕсли;
			Иначе
				Если Сред(ТЗРезультат.Weekdays,ДеньНедели,1)="1" Тогда
					Если ПустаяСтрока(ТЗРезультат.MonthDay)=1 Тогда
						Оставить=1;
						//совпал день недели, правило для всех чисел месяца
						ТЗРезультат.Приоритет=1;
					ИначеЕсли Найти(ТЗРезультат.MonthDay,ЧислоМесяца)>0 Тогда
						Оставить=1;
						//совпали и число и день недели
						ТЗРезультат.Приоритет=0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если Оставить=1 Тогда
				Инд=Инд+1;
			Иначе
				ТЗРезультат.УдалитьСтроку(Инд);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//Отсортируем по приоритетам совпадения времени и приоритетам, заданным настройками
	ТЗРезультат.Сортировать("Приоритет,Priority");



	//Берем первое правило
	ТЗПравило=СоздатьОбъект("ТаблицаЗначений");
	Если ТЗРезультат.КоличествоСтрок()>0 Тогда
		ТЗРезультат.ПолучитьСтрокуПоНомеру(1);
		ПервыйПриоритет=ТЗРезультат.Приоритет;
		Инд=1;
		Пока Инд<=ТЗРезультат.КоличествоСтрок() Цикл
			Если ТЗРезультат.Приоритет=ПервыйПриоритет Тогда
				Инд=Инд+1;
			Иначе
				ТЗРезультат.УдалитьСтроку(Инд);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат ТЗРезультат;
КонецФункции




//Возвращает
//Значение скидки.
//ТипСкидки - 0 -процентная 1 - суммовая
Функция ПолучитьСкидкуПоСуммеЧека(Сумма,ДатаПродажи,ВремяПродажи,ТипСкидки) Экспорт
	ДатаПродажиСтр=Формат(ДатаПродажи,"ДГГГГММДД");

	ПустаяДата=Формат("","С8");
	ПустоеВремя=Формат("","С6");
	ПустоеИД=Формат("","С40");
	ОграничениеПоКарте="(IDCARD='"+ПустоеИД+"')and(CARDTYPE='"+ПустоеИД+"')";

	ОграничениеПоВремени=
	    "((date1<='"+ДатаПродажиСтр+"')or(date1='"+ПустаяДата+"'))
		|and
		|((date2>='"+ДатаПродажиСтр+"')or(date2='"+ПустаяДата+"'))
		|and
		|((time1<='"+СтрЗаменить(ВремяПродажи,":","")+"')or(time1='"+ПустоеВремя+"'))
		|and
		|((time2>='"+СтрЗаменить(ВремяПродажи,":","")+"')or(time2='"+ПустоеВремя+"'))";

	ЧислоМесяца=Формат(ДатаЧисло(ДатаПродажи),"Ч(0)2.0");
	ДеньНедели=НомерДняНедели(ДатаПродажи);

	ОграничениеПоСумме="(NumValue<="+Сумма+")";

	Если ПустоеЗначение(ДисконтнаяКарта)=0 Тогда

		//Есть дисконтная карта. Ищем правило для дисконтной карты или вида дисконтных карт

		ОграничениеПоКарте="(IDCARD='"+ДисконтнаяКарта.ИД+"')";
		ТЗ=глБД.ПолучитьЗаписиИзТаблицыПоПолю("Discnt","Type",0,
		"(Active=1)and "+ОграничениеПоСумме+" and "+ОграничениеПоВремени+" and "+ОграничениеПоКарте,"NumValue");

		ТЗРезультат=ПолучитьТаблицуСкидокПоДнямНеделиИЧислам(ДатаПродажи,ТЗ);

		Если ТЗРезультат.КоличествоСтрок()=0 Тогда
			//По номеру карты не нашли правила
			//Ищем по виду карты
			ОграничениеПоКарте="(CARDTYPE='"+ДисконтнаяКарта.ТипКарты+"')";
			ТЗ=глБД.ПолучитьЗаписиИзТаблицыПоПолю("Discnt",
			"Type",0,"(Active=1)and "+ОграничениеПоСумме+" and "+ОграничениеПоВремени+" and "+ОграничениеПоКарте,"NumValue",,
			"*");
			ТЗРезультат=ПолучитьТаблицуСкидокПоДнямНеделиИЧислам(ДатаПродажи,ТЗ);

		КонецЕсли;
	Иначе
		//Нет дисконтной карты
		//Ищем правило не для карт
		ТЗ=глБД.ПолучитьЗаписиИзТаблицыПоПолю("Discnt",
		"Type",0,"(Active=1)and "+ОграничениеПоСумме+" and "+ОграничениеПоВремени+" and "+ОграничениеПоКарте,"NumValue",,
		"*");

		ТЗРезультат=ПолучитьТаблицуСкидокПоДнямНеделиИЧислам(ДатаПродажи,ТЗ);
	КонецЕсли;

	Если ТЗРезультат.КоличествоСтрок()>0 Тогда
		ТЗРезультат.Сортировать("NumValue-");
		ТЗРезультат.ПолучитьСтрокуПоНомеру(1);
		ТипСкидки=ТЗРезультат.DiscType;
		Возврат ТЗРезультат.Discount;
	КонецЕсли;
    ТипСкидки=0;
	Возврат 0;
КонецФункции



Процедура УстановитьРучнуюСкидкуПроцентом(ПроцентСкидки) Экспорт
	Сам=Сам();

	ВидРучнойСкидки=0;
	РучнаяСкидкаНаЧекСуммой=0;
	РучнаяСкидкаНаЧекПроцентом=ПроцентСкидки;

	Если РМК.ТаблицаТоваров.КоличествоСтрок()>0 Тогда
		РМК.ТаблицаТоваров.Заполнить(0,,,"ПроцентРучнойСкидки");
		РМК.ТаблицаТоваров.Заполнить(0,,,"ПроцентАвтоматическойСкидки");
		РМК.ТаблицаТоваров.Заполнить(0,,,"ВидРучнойСкидки");
		РМК.ТаблицаТоваров.Заполнить(0,,,"Скидка");

		РМК.ТаблицаТоваров.ВыбратьСтроки();
		Пока РМК.ТаблицаТоваров.ПолучитьСтроку()=1 Цикл
			РМК.ТаблицаТоваров.ПроцентРучнойСкидки=РучнаяСкидкаНаЧекПроцентом;
		КонецЦикла;
	КонецЕсли;
	Сам.РасчитатьСкидки();

	Если ПустоеЗначение(ДисконтнаяКарта)=0 Тогда
		НакопленнаяСуммоваяСкидка=ДисконтнаяКарта.СуммоваяСкидка;
		Если ДисконтнаяКарта.ТипСкидки=2 Тогда
			//По дисконтной карте выдаются ТОЛЬКО накопленные суммовые скидки

			СуммаСкидки=РМК.ТаблицаТоваров.Итог("Скидка");
			//скидка по выбранной карте с накоплением скидки
			//можно делать не более указанной в карте
			Если СуммаСкидки>НакопленнаяСуммоваяСкидка Тогда
				Сам.УстановитьРучнуюСкидкуСуммой(НакопленнаяСуммоваяСкидка);

				глПредупреждение("По карте накоплена сумма скидки "+глФРМ(НакопленнаяСуммоваяСкидка)+"
				|Вы пытаетесь предоставить сумму скидки "+глФРМ(СуммаСкидки)+"
				|Предоставляется суммовая скидка на накопленную сумму.");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;


КонецПроцедуры

Процедура УстановитьРучнуюСкидкуСуммой(СуммаСкидки) Экспорт
	Сам=Сам();

	Если ПустоеЗначение(ДисконтнаяКарта)=0 Тогда
		НакопленнаяСуммоваяСкидка=ДисконтнаяКарта.СуммоваяСкидка;
		Если ДисконтнаяКарта.ТипСкидки=2 Тогда
			//По дисконтной карте выдаются ТОЛЬКО накопленные суммовые скидки

			//можно делать не более указанной в карте
			Если СуммаСкидки>НакопленнаяСуммоваяСкидка Тогда
				глПредупреждение("По карте накоплена сумма скидки "+глФРМ(НакопленнаяСуммоваяСкидка)+"
				|Вы пытаетесь предоставить сумму скидки "+глФРМ(СуммаСкидки)+"
				|Операция отменена.");
				возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;


	ВидРучнойСкидки=1;
	РучнаяСкидкаНаЧекСуммой=СуммаСкидки;
	РучнаяСкидкаНаЧекПроцентом=0;


	ОсталосьСписать=СуммаСкидки;

	СуммаВсего=РМК.ТаблицаТоваров.Итог("Сумма");

	Если РМК.ТаблицаТоваров.КоличествоСтрок()>0 Тогда
		РМК.ТаблицаТоваров.Заполнить(0,,,"ПроцентРучнойСкидки");
		РМК.ТаблицаТоваров.Заполнить(0,,,"ПроцентАвтоматическойСкидки");
		РМК.ТаблицаТоваров.Заполнить(1,,,"ВидРучнойСкидки");
		РМК.ТаблицаТоваров.Заполнить(0,,,"Скидка");

		РМК.ТаблицаТоваров.ВыбратьСтроки();
		Пока РМК.ТаблицаТоваров.ПолучитьСтроку()=1 Цикл
			Если СуммаВсего>0 Тогда
				РМК.ТаблицаТоваров.Скидка=Окр(РМК.ТаблицаТоваров.Сумма/СуммаВсего*СуммаСкидки,2,1);
			КонецЕсли;

			Если РМК.ТаблицаТоваров.НомерСтроки=РМК.ТаблицаТоваров.КоличествоСтрок() Тогда
				РМК.ТаблицаТоваров.Скидка=ОсталосьСписать;
				ОсталосьСписать=0;
			Иначе
				ОсталосьСписать=ОсталосьСписать-РМК.ТаблицаТоваров.Скидка;
			КонецЕсли;
		КонецЦикла;
		Сам.РасчитатьСкидки();
	КонецЕсли;
КонецПроцедуры


Процедура УстановитьРучнуюСкидкуНаПозицию(ПроцентСкидки) Экспорт

	Сам=Сам();
	Если РМК.ТаблицаТоваров.КоличествоСтрок()>0 Тогда

		СобытиеОтвет=глПослатьКоманду(Сам,"ЗапросТекущейСтрокиРМК");
		Если СобытиеОтвет.Обработано=1 Тогда
			ТекущаяСтрока=СобытиеОтвет.Описатель.Ответ;

			РМК.ТаблицаТоваров.ПолучитьСтрокуПоНомеру(ТекущаяСтрока);

			РМК.ТаблицаТоваров.ПроцентРучнойСкидки=ПроцентСкидки;
			РМК.ТаблицаТоваров.ВидРучнойСкидки=2;
		КонецЕсли;
		Сам.РасчитатьСкидки();
	КонецЕсли;
КонецПроцедуры



Процедура УстановитьРучнуюСкидкуНаПозициюСуммой(СуммаСкидки) Экспорт

	Сам=Сам();
	Если РМК.ТаблицаТоваров.КоличествоСтрок()>0 Тогда
		СобытиеОтвет=глПослатьКоманду(Сам,"ЗапросТекущейСтрокиРМК");
		Если СобытиеОтвет.Обработано=1 Тогда
			ТекущаяСтрока=СобытиеОтвет.Описатель.Ответ;
			РМК.ТаблицаТоваров.ПолучитьСтрокуПоНомеру(ТекущаяСтрока);
			РМК.ТаблицаТоваров.Скидка=СуммаСкидки;
			РМК.ТаблицаТоваров.ВидРучнойСкидки=3;
		КонецЕсли;
		Сам.РасчитатьСкидки();
	КонецЕсли;

КонецПроцедуры



Процедура РасчитатьСкидки() Экспорт
	Сам=Сам();

	СкидкаПоКарте=0;
	Если ПустоеЗначение(ДисконтнаяКарта)=0 Тогда
		Если ДисконтнаяКарта.Активность=1 Тогда
			Если ДисконтнаяКарта.ТипСкидки=2 Тогда
				//скидка только суммовая

				НакопленнаяСуммоваяСкидка=ДисконтнаяКарта.СуммоваяСкидка;
				Если НакопленнаяСуммоваяСкидка>0 Тогда
					Если РучнаяСкидкаНаЧекСуммой>НакопленнаяСуммоваяСкидка Тогда
						РучнаяСкидкаНаЧекСуммой=НакопленнаяСуммоваяСкидка;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ДисконтнаяКарта.ТипСкидки=1 Тогда
				СкидкаПоКарте=Сам.ПолучитьСкидкуПоКарте(ДисконтнаяКарта);
			ИначеЕсли ДисконтнаяКарта.ТипСкидки=0 Тогда
				СкидкаПоКарте=Сам.ПолучитьСкидкуПоКарте(ДисконтнаяКарта);

			КонецЕсли;
		КонецЕсли;
	КонецЕсли;


	ТипСкидкиПоСумме=0;
	СкидкаПоСумме=ПолучитьСкидкуПоСуммеЧека(РМК.ТаблицаТоваров.Итог("Сумма"),ТекущаяДата(),ТекущееВремя(),ТипСкидкиПоСумме);

	АвтоСкидкаНаЧек=СкидкаПоКарте;
	Если (ТипСкидкиПоСумме=0)И(СкидкаПоСумме<>0) Тогда
		АвтоСкидкаНаЧек=Макс(СкидкаПоСумме,АвтоСкидкаНаЧек);
	КонецЕсли;


	ТЗ=РМК.ТаблицаТоваров;
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку()=1 Цикл
		Товар=ТЗ.Товар;
		Если ТЗ.Количество=0 Тогда
			ТЗ.Скидка=0;
		Иначе


			МаксимальнаяСкидка=Товар.МаксимальнаяСкидка;
			Если МаксимальнаяСкидка=0 Тогда
				МаксимальнаяСкидка=100;
			КонецЕсли;

			МинимальнаяЦена=Товар.МинимальнаяЦена;


			ПроцентСкидкиНаТовар=Сам.ПолучитьПроцентСкидкиПоТовару(РМК,Товар);



			//выбираем стратегию - из всех возможных скидок на товар выбрать максимальную
			//затем ее ограничить снизу минимальной ценой и минимальным процентом

			ТЗ.ПроцентАвтоматическойСкидки=Макс(АвтоСкидкаНаЧек,ПроцентСкидкиНаТовар);

			Если (ТЗ.ВидРучнойСкидки=0)Или(ТЗ.ВидРучнойСкидки=2) Тогда //ручная скидка процентная
				Если ТЗ.ПроцентРучнойСкидки<>0 Тогда
					ПроцентСкидки=ТЗ.ПроцентРучнойСкидки;
					ТЗ.ПроцентАвтоматическойСкидки=0;
				Иначе
					ПроцентСкидки=ТЗ.ПроцентАвтоматическойСкидки;
				КонецЕсли;

				Если (МаксимальнаяСкидка < ПроцентСкидки) Тогда
					ПроцентСкидки=МаксимальнаяСкидка;
				КонецЕсли;
				ТЗ.Скидка=Окр(ТЗ.Сумма*ПроцентСкидки/100,2,1);

			ИначеЕсли (ТЗ.ВидРучнойСкидки=1)Или(ТЗ.ВидРучнойСкидки=3) Тогда  //ручная скидка суммовая


				МаксСуммаСкидки=Окр(ТЗ.Сумма*МаксимальнаяСкидка/100,2,1);


				Если ТЗ.Скидка>МаксСуммаСкидки Тогда
					ТЗ.Скидка=МаксСуммаСкидки;
				КонецЕсли;
				ТЗ.ПроцентАвтоматическойСкидки=0;

				Если ТЗ.Сумма>0 Тогда
					ТЗ.ПроцентРучнойСкидки=Окр(ТЗ.Скидка/ТЗ.Сумма*100,2,1);
				Иначе
					ТЗ.ПроцентРучнойСкидки=0;
				КонецЕсли;

			КонецЕсли;

			ТЗ.Скидка=Окр(ТЗ.Скидка,2,1);
			ТЗ.Всего=ТЗ.Сумма-ТЗ.Скидка;

			Цена=Окр(ТЗ.Всего/ТЗ.Количество,2,1);

			Если МинимальнаяЦена>Цена Тогда
				ТЗ.Всего=Окр(МинимальнаяЦена*ТЗ.Количество,2,1);
				ТЗ.Скидка=Окр(ТЗ.Сумма-ТЗ.Всего,2,1);
				Если ТЗ.ПроцентРучнойСкидки<>0 Тогда
					ТЗ.ПроцентРучнойСкидки=Окр(ТЗ.Скидка/ТЗ.Сумма*100,2,1);
					ТЗ.ПроцентАвтоматическойСкидки=0;
				Иначе
					ТЗ.ПроцентРучнойСкидки=0;
					ТЗ.ПроцентАвтоматическойСкидки=Окр(ТЗ.Скидка/ТЗ.Сумма*100,2,1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

//Открывает диалог выбора карточки
//возвращает выбранную дисконтную карту или 0
Функция ВыбратьДисконтнуюКарту() Экспорт
	ДК=СоздатьОбъект("ИДКарта");

	Карта="";
	Если ДК.ВыбратьОбъект(Карта)=1 Тогда
		Возврат Карта;
	КонецЕсли;
	Возврат 0;
КонецФункции

Функция ЕстьКарта() Экспорт
	Если ПустоеЗначение(ДисконтнаяКарта)=1 Тогда
		Возврат 0;
	Иначе
		Возврат 1;
	КонецЕсли;
КонецФункции


Функция Сброс() Экспорт
	Сам=Сам();
	ДисконтнаяКарта=0;
	ВидРучнойСкидки=-1;
	РучнаяСкидкаНаЧекСуммой=0;
	РучнаяСкидкаНаЧекПроцентом=0;
	СнятьСуммуСНакопительнойКарты=0;

	Если РМК.ТаблицаТоваров.КоличествоСтрок()>0 Тогда
		РМК.ТаблицаТоваров.Заполнить(0,,,"ПроцентРучнойСкидки");
		РМК.ТаблицаТоваров.Заполнить(0,,,"ПроцентАвтоматическойСкидки");
		РМК.ТаблицаТоваров.Заполнить(0,,,"ВидРучнойСкидки");
		РМК.ТаблицаТоваров.Заполнить(0,,,"Скидка");
	КонецЕсли;

	Сам.РасчитатьСкидки();
	ИнфоПоПлатежнойСистеме="";
КонецФункции

Процедура УстановитьДисконтнуюКарту(ДК) Экспорт

	Сам=Сам();
	Сам.Сброс();

	Если ТипЗначенияСтр(ДК)="Структура" Тогда
		ДисконтнаяКарта=ДК;
	Иначе
		ДисконтнаяКарта=ДК.Данные;
	КонецЕсли;


	ИнфоПоПлатежнойСистеме="";

	Если ПустоеЗначение(ДисконтнаяКарта)=0 Тогда

		Если (глНастройки.ПолучитьКакЧисло("EXCHANGE/UpdateCardsFromCheckServer")=1)
		  ИЛИ(глНастройки.ПолучитьКакЧисло("CARDS/UpdateCardsFromCheckServer")=1) Тогда


			ИДКарты=СокрЛП(ДисконтнаяКарта.ИД);

			ИнфоПоПлатежнойСистеме="Платежная система RB-SOFT CARDS:
			|";

			СобытиеОтвет=глПослатьКоманду(Сам,"ПолучитьКарту",ИДКарты,"ПлатежнаяСистема");
			Если СобытиеОтвет.Обработано=1 Тогда

				Если СобытиеОтвет.Описатель.Ответ=1 Тогда
					КартаНаСервере=СобытиеОтвет.Описатель.Ответ1;

					ДисконтнаяКарта.СуммоваяСкидка=0;
					ДисконтнаяКарта.Остаток=0;
					ДисконтнаяКарта.ТекущийОборот=КартаНаСервере.ТекущийОборот;
					ДисконтнаяКарта.ТекущаяСуммаСкидок=КартаНаСервере.ТекущаяСуммаСкидок;
					ДисконтнаяКарта.ТипСкидки=КартаНаСервере.ТипСкидки;

					ДисконтнаяКарта.Активность=КартаНаСервере.Активность;

					Если КартаНаСервере.ТипСкидки=1 Тогда
						ДисконтнаяКарта.Скидка=КартаНаСервере.ПроцентСкидки;
						ИнфоПоПлатежнойСистеме=ИнфоПоПлатежнойСистеме+"Дисконт "+КартаНаСервере.ПроцентСкидки+"%
						|";
					ИначеЕсли КартаНаСервере.ТипСкидки=2 Тогда
						ДисконтнаяКарта.СуммоваяСкидка=КартаНаСервере.ТекущийОстаток;
						ИнфоПоПлатежнойСистеме=ИнфоПоПлатежнойСистеме+"Накопленная скидка: "+глФРМ(КартаНаСервере.ТекущийОстаток)+"
						|";
					КонецЕсли;

					Если КартаНаСервере.ЭтоПлатежнаяКарта=1 Тогда
						ДисконтнаяКарта.Остаток=КартаНаСервере.ТекущийОстаток;
						ИнфоПоПлатежнойСистеме=ИнфоПоПлатежнойСистеме+"Дебетовая карта.
						|Баланс: "+глФРМ(КартаНаСервере.ТекущийОстаток)+"
						|";

					ИначеЕсли КартаНаСервере.ЭтоПлатежнаяКарта=2 Тогда
						ДисконтнаяКарта.Остаток=КартаНаСервере.ТекущийОстаток;
						ИнфоПоПлатежнойСистеме=ИнфоПоПлатежнойСистеме+"Платежный сертификат.
						|Номинал: "+глФРМ(КартаНаСервере.ТекущийОстаток)+"
						|";

						СнятьСуммуСНакопительнойКарты=1;
					КонецЕсли;
					Если ДисконтнаяКарта.Активность=0 Тогда
						ИнфоПоПлатежнойСистеме=ИнфоПоПлатежнойСистеме+"КАРТА НЕАКТИВНА!
						|"
					КонецЕсли;


				Иначе
					ИнфоПоПлатежнойСистеме=ИнфоПоПлатежнойСистеме+СобытиеОтвет.Описатель.Ошибка;
				КонецЕсли;
			Иначе
				ИнфоПоПлатежнойСистеме=ИнфоПоПлатежнойСистеме+"Не найдена карта";
			КонецЕсли;
		Иначе

		КонецЕсли;


	КонецЕсли;

	Сам.РасчитатьСкидки();
КонецПроцедуры

//------------------------------------ ------------------------------------
Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии

