//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:19
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
Перем _База Экспорт;

Перем ТекстЗапроса Экспорт;
Перем ТаблицаВыборки Экспорт;
Перем ТаблицаРезультат Экспорт;

Перем СтруктураОтбора Экспорт;
Перем СтруктураГруппировок Экспорт;
Перем СтруктураПоказателей Экспорт;


Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции



Функция СоздатьСтруктуруПоляОтбора(Имя,ИмяПоляТаблицы,Представление="",Использовать=0,ТипСравнения="=",Значение="",_ТипЗначения="",_Длина=10,_Точность=0) Экспорт

	Структура=НовыйОбъект("СтруктураПоляОтбора");
	Структура.Имя=Имя;
	Структура.ИмяПоляТаблицы=ИмяПоляТаблицы;
	Структура.Представление=?(Представление="",ИмяПоляТаблицы,Представление);
	Структура.Значение=Значение;
	Структура.ТипСравнения=ТипСравнения;
	Структура.ПредставлениеСравнения=глОбщиеФункции.ПредставлениеСравнения(ТипСравнения);


	Структура.ТипЗначения=нрег(?(_ТипЗначения="",ТипЗначенияСтр(Значение),_ТипЗначения));
	Структура.Длина=_Длина;
	Структура.Точность=_Точность;
	Структура.Использовать=Использовать;
	Возврат Структура;
КонецФункции

Функция СоздатьСтруктуруПоляГруппировки(Имя,ИмяПоляТаблицы,Представление="",Использовать=1) Экспорт

	Структура=НовыйОбъект("СтруктураПоляГруппировки");
	Структура.Имя=Имя;
	Структура.ИмяПоляТаблицы=ИмяПоляТаблицы;
	Структура.Представление=?(Представление="",ИмяПоляТаблицы,Представление);
	Структура.Использовать=Использовать;
	Возврат Структура;
КонецФункции


Функция СоздатьСтруктуруПоляПоказателя(Имя,ИмяПоляТаблицы,Представление="",Использовать=1) Экспорт

	Структура=НовыйОбъект("СтруктураПоляПоказателя");
	Структура.Имя=Имя;
	Структура.ИмяПоляТаблицы=ИмяПоляТаблицы;
	Структура.Представление=?(Представление="",ИмяПоляТаблицы,Представление);
	Структура.Использовать=Использовать;
	Возврат Структура;
КонецФункции


Процедура ДобавитьПолеОтбора(Имя,ИмяПоляТаблицы,Представление="",Использовать=0,ТипСравнения="=",Значение="",_ТипЗначения="",_Длина=10,_Точность=0) Экспорт
	СтруктураОтбора.Вставить(Имя,СоздатьСтруктуруПоляОтбора(Имя,ИмяПоляТаблицы,Представление,Использовать,ТипСравнения,Значение,_ТипЗначения,_Длина,_Точность));
КонецПроцедуры

Процедура ДобавитьПолеГруппировки(Имя,ИмяПоляТаблицы,Представление="",Использовать=1) Экспорт
	СтруктураГруппировок.Вставить(Имя,СоздатьСтруктуруПоляГруппировки(Имя,ИмяПоляТаблицы,Представление,Использовать));
КонецПроцедуры

Процедура ДобавитьПолеПоказателя(Имя,ИмяПоляТаблицы,Представление="",Использовать=1) Экспорт
	СтруктураПоказателей.Вставить(Имя,СоздатьСтруктуруПоляПоказателя(Имя,ИмяПоляТаблицы,Представление,Использовать));
КонецПроцедуры

//------------------------------------ ------------------------------------
Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("Объект");

	СтруктураОтбора=СоздатьОбъект("Структура");
	СтруктураГруппировок=СоздатьОбъект("Структура");
	СтруктураПоказателей=СоздатьОбъект("Структура");

КонецПроцедуры // Конструктор


//абстрактный. вызывается каждый раз при вызове метода Выполнить
//должен формировать текст запроса с учетом текущих настроек отчета
Функция СформироватьТекстЗапроса() Экспорт
	возврат "";
КонецФункции


Функция ВыполнитьЗапрос(_ТекстЗапроса) Экспорт
	глДебаг(_ТекстЗапроса);
	возврат глБД.ВыполнитьЗапрос(_ТекстЗапроса);
КонецФункции

//возвращает результат запроса

Функция Выполнить() Экспорт
	Сам=Сам();
	ТекстЗапроса=Сам.СформироватьТекстЗапроса();
	ТЗ=Сам.ВыполнитьЗапрос(ТекстЗапроса);
	Возврат ТЗ;
КонецФункции

//------------------------------------ ------------------------------------
Процедура Деструктор()

КонецПроцедуры // Деструктор

Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии

