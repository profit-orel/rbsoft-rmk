//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:51
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс Драйверы
//_______________________________________________________________________________________
перем _База Экспорт;
Перем Драйверы Экспорт;  //ссылка на объект структуру для хранения ссылок на драйверы по их именам из rmkconfig.ini

Перем ДрайверСервераЧеков Экспорт; //ссылка на класс-драйвер сервера чеков

Перем КэшДрайверов Экспорт; //ссылка на индексированную таблицу с данными о номерах логических устройств

Перем Клавиатура Экспорт;//

Перем ТекстовыйПроцессор Экспорт; //ссылка на объект ТекстовыйПроцессор



Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции





//получаем драйвер по имени или 0, если такой не грузили

Функция ПолучитьДрайвер(ИмяДрайвера) Экспорт
Перем Драйвер;
	Если Драйверы.Свойство(ИмяДрайвера,Драйвер)=1 Тогда
		Возврат Драйвер;
	КонецЕсли;
	Сам().УстановитьКодИОшибку(5000,"Не найден драйвер с ИД = "+ИмяДрайвера);
	возврат 0;
КонецФункции

//сохраняет ссылку на загруженный драйвер в структуре
//в дальнейшем можем получить доступ по имени драйвера
Процедура ЗарегистрироватьДрайвер(ИмяДрайвера,Драйвер) Экспорт
	Драйверы.Вставить(ИмяДрайвера,Драйвер);
КонецПроцедуры

Функция ЗагрузитьКомпоненту(ИмяКомпоненты, ИмяКласса, ИмяДЛЛ)  Экспорт


	ФайлКомпоненты=глОбработатьМакроСтроку("%DLL%\"+ИмяДЛЛ);

	глЗаписатьСобытие("Драйверы","Загрузка компоненты",ФайлКомпоненты);

	Если ЗагрузитьВнешнююКомпоненту(ФайлКомпоненты) <> 1 Тогда
		Если ПустаяСтрока(ИмяКомпоненты) = 0 Тогда
			глПредупреждение("Компонента "+ИмяКомпоненты+" ("+ИмяКласса+", "+ИмяДЛЛ+") не загружена!");
		КонецЕсли;
		глЗаписатьСобытие("Драйверы","Компонента не загружена",ФайлКомпоненты);
		Возврат 0;
	КонецЕсли;
	глЗаписатьСобытие("Драйверы","Загрузка компоненты","ОК");
	Возврат 1;
КонецФункции


Функция Загрузить(ИмяФайла="",ИмяСекции="") Экспорт
	Сам=Сам();

	ИниФайл=СоздатьОбъект("Файл.INI");
	ФайлСОписанием=ИмяФайла;
	Если ФайлСОписанием="" Тогда
		ФайлСОписанием="%ETC%\rmkconfig.ini";
	КонецЕсли;
	Секция=ИмяСекции;
	Если Секция="" Тогда
		Секция="Drivers";
	КонецЕсли;

	ИниФайл.ИмяФайла=глОбработатьМакроСтроку(ФайлСОписанием);

	Если ИниФайл.ПрочитатьСекцию(Секция)=0 Тогда

		Возврат 0;
	КонецЕсли;

	СсылкаНаСекцию=ИниФайл.ПолучитьСекцию("Drivers");
	Если ПустоеЗначение(СсылкаНаСекцию)=1 Тогда
		Сам.УстановитьКодИОшибку(5001,"Не найдена секция ["+Секция+"].");
		Возврат 0;
	КонецЕсли;  //

	СсылкаНаСекцию.ВыбратьСвойства();
	СсылканаПоле="";
	ИмяПоля="";
	Пока СсылкаНаСекцию.ПолучитьСвойство(СсылканаПоле,ИмяПоля)=1 Цикл

		Если ИмяПоля="_Комментарий" Тогда
			Продолжить;
		ИначеЕсли ИмяПоля="_ИД" Тогда
			Продолжить;
		КонецЕсли;

		ИД=ВРЕГ(СокрЛП(ИмяПоля));
		Значение=Строка(СсылканаПоле.Значение);

		Стр=СтрЗаменить(Значение,",",РазделительСтрок);
		Загружать=Число(СтрПолучитьСтроку(Стр,1));
		Если Загружать=1 Тогда
			ТипДрайвера=Нрег(СтрПолучитьСтроку(Стр,2));
			Если ТипДрайвера="dll" Тогда
				//грузим драйвер в виде dll
				Если СтрКоличествоСтрок(Стр)<>4 Тогда
					Сам.УстановитьКодИОшибку(5002,"Неверный формат описания драйвера. Количество параметров при типе драйвера ""dll"" должно быть равно 4.");
					Возврат 0;
				КонецЕсли;  //

				ИмяОбъекта=СокрЛП(СтрПолучитьСтроку(Стр,3));
				ФайлДрайвера=СокрЛП(СтрПолучитьСтроку(Стр,4));

				ДЛЛ=глОбработатьМакроСтроку("%DLL%\"+ФайлДрайвера);
				Если ФС.СуществуетФайл(ДЛЛ)=0 Тогда
					ДЛЛ=глОбработатьМакроСтроку(ФайлДрайвера);
					Если ФС.СуществуетФайл(ДЛЛ)=0 Тогда
						Сам.УстановитьКодИОшибку(5004,"Не найден файл драйвера "+ДЛЛ);
						Возврат 0;
					КонецЕсли;
				КонецЕсли;
				Если ЗагрузитьВнешнююКомпоненту(ДЛЛ) <> 0  Тогда
					Попытка
						Объект=СоздатьОбъект(ИмяОбъекта);
					Исключение
						Сам.УстановитьКодИОшибку(5006,"Ошибка создания объекта компоненты "+ДЛЛ+" "+ИмяОбъекта);
						возврат 0;
					КонецПопытки;
				Иначе
					Сам.УстановитьКодИОшибку(5005,"Ошибка загрузки компоненты "+ДЛЛ);
					возврат 0;
				КонецЕсли

			ИначеЕсли СтрКоличествоСтрок(Стр)<>3 Тогда
				Сам.УстановитьКодИОшибку(5003,"Неверный формат описания драйвера. Количество параметров при типе драйвера """+ТипДрайвера+""" должно быть не менее 3.");
				Возврат 0;
			ИначеЕсли ТипДрайвера="class" Тогда
				//грузим драйвер в виде класса 1С++
				ИмяОбъекта=СокрЛП(СтрПолучитьСтроку(Стр,3));

				Попытка
					Объект=СоздатьОбъект(ИмяОбъекта);
				Исключение
					Сам.УстановитьКодИОшибку(5007,"Ошибка создания класса "+ИмяОбъекта);
					возврат 0;
				КонецПопытки;

			ИначеЕсли ТипДрайвера="com" Тогда
				//грузим драйвер в виде COM-объекта
				//аналогично...

				ИмяОбъекта=СокрЛП(СтрПолучитьСтроку(Стр,3));

				Попытка
					Объект=СоздатьОбъект(ИмяОбъекта);
				Исключение
					Сам.УстановитьКодИОшибку(5008,"Ошибка создания COM-объекта  "+ИмяОбъекта);
					возврат 0;
				КонецПопытки;
			КонецЕсли;

			Сам.ЗарегистрироватьДрайвер(ИД,Объект);
		КонецЕсли;

	КонецЦикла;
	возврат 1;
КонецФункции

/////////////////////////////////////////////////////////////////////////
//               РАБОТА С КЭШЕМ ДРАЙВЕРОВ
/////////////////////////////////////////////////////////////////////////

//
//Функция СоздатьКэшДрайверов()
//	ТЗ=СоздатьОбъект("ИндексированнаяТаблица");
//	ТЗ.НоваяКолонка("ИД"); 			// строка - Полный идентификатор устройства в виде [ИДДрайвера]/[ИДУстройства]
//	ТЗ.НоваяКолонка("ИДДрайвера");	// строка - идентификатор драйвера
//	ТЗ.НоваяКолонка("ИДУстройства");// строка - идентификатор устройства
//	ТЗ.НоваяКолонка("НомерЛУ");		// число  - номер логического устройства. инициализируется при загрузке и настройке драйверов устройств
//	ТЗ.НоваяКолонка("Объект");	    // ссылка на объект-устройство
//
//	ТЗ.ДобавитьИндекс("ИД","ИД",1);
//	ТЗ.ДобавитьИндекс("ИДДрайвера","ИДДрайвера");
//	ТЗ.ДобавитьИндекс("ИДУстройства","ИДУстройства");
//	Возврат ТЗ;
//КонецФункции

//Запоминает в кэш драйверов сгенерированный НомерЛУ устройства
Функция ЗарегистрироватьУстройство(_ИДДрайвера,_ИДУстройства,Объект) Экспорт
	Сам=Сам();

	Если ПустоеЗначение(Объект)=1 Тогда
		Сам.УстановитьКодИОшибку(5010,"Попытка зарегистрировать устройство с пустым объектом. ИДДрайвера="+_ИДДрайвера+" ИДУстройства="+_ИДУстройства);
		Возврат 0;
	КонецЕсли;

	ИДДрайвера=Врег(СокрЛП(_ИДДрайвера));
	ИДУстройства=Врег(СокрЛП(_ИДУстройства));


	Если Сам.ПолучитьНомерЛУ(ИДДрайвера,ИДУстройства)=0 Тогда
		КэшДрайверов.НоваяСтрока();
		КэшДрайверов.ИД=ИДДрайвера+"/"+ИДУстройства;
		КэшДрайверов.ИДДрайвера=ИДДрайвера;
		КэшДрайверов.ИДУстройства=ИДУстройства;

		ВидУстройства=Врег(СокрЛП(Объект.Вид()));
		КэшДрайверов.ВидУстройства=ВидУстройства;

		КэшДрайверов.ВидУстройстваИД=КэшДрайверов.ВидУстройства+"/"+ИДУстройства;
		НомерЛУ=Сам.ПолучитьКоличествоЛУ(ИДДрайвера);
		КэшДрайверов.НомерЛУ=НомерЛУ;
		Объект.НомерЛУ=НомерЛУ;
		КэшДрайверов.Объект=Объект;



		Возврат 1;
	Иначе
		Сам.УстановитьКодИОшибку(5009,"Попытка зарегистрировать устройство, которое уже было зарегистрировано. ИДДрайвера="+ИДДрайвера+" ИДУстройства="+ИДУстройства);
		Возврат 0;
	КонецЕсли;  //
КонецФункции

Функция ПолучитьУстройство(_ИДДрайвера,_ИДУстройства) Экспорт
	Сам=Сам();

	ИДДрайвера=Врег(СокрЛП(_ИДДрайвера));
	ИДУстройства=Врег(СокрЛП(_ИДУстройства));

	НомерСтроки=КэшДрайверов.НайтиСтроку("ИД", ИДДрайвера+"/"+ИДУстройства, , 1);
	Если НомерСтроки=0 Тогда
		Возврат 0;
	Иначе
		возврат КэшДрайверов.Объект;
	КонецЕсли;  //
КонецФункции

//возвращает списк значений с объектами заданного вида или 0 - если таких нет
Функция ПолучитьСписокУстройств(ВидОбъектов) Экспорт
	КэшДрайверов.ВыбратьСтроки();

	СЗ=СоздатьОбъект("СписокЗначений");

	Пока КэшДрайверов.ПолучитьСтроку()=1 Цикл
		Если КэшДрайверов.Объект.Вид()=ВидОбъектов Тогда
			СЗ.ДобавитьЗначение(КэшДрайверов.Объект);
		КонецЕсли;
	КонецЦикла;
	возврат СЗ;
КонецФункции

Функция ПолучитьУстройствоПоВиду(_ВидОбъектов,_ИДУстройства) Экспорт
	Сам=Сам();



	ВидОбъектов=Врег(СокрЛП(_ВидОбъектов));
	ИДУстройства=Врег(СокрЛП(_ИДУстройства));

	НомерСтроки=КэшДрайверов.НайтиСтроку("ВидУстройстваИД", ВидОбъектов+"/"+ИДУстройства, , 1);
	Если НомерСтроки=0 Тогда
		Возврат 0;
	Иначе
		возврат КэшДрайверов.Объект;
	КонецЕсли;  //
КонецФункции

//получить номер логического устройства для устройства с ИД=ИДУстройства в драйвере с ИД=ИДДрайвера
//если нет еще такого, то вернуть 0
Функция ПолучитьНомерЛУ(_ИДДрайвера,_ИДУстройства) Экспорт
	Сам=Сам();

	ИДДрайвера=Врег(СокрЛП(_ИДДрайвера));
	ИДУстройства=Врег(СокрЛП(_ИДУстройства));

	НомерСтроки=КэшДрайверов.НайтиСтроку("ИД", ИДДрайвера+"/"+ИДУстройства, , 1);
	Если НомерСтроки=0 Тогда
		Возврат 0;
	Иначе
		возврат КэшДрайверов.НомерЛУ;
	КонецЕсли;  //
КонецФункции

//Получить количество логических устройств, привязанных к драйверу с идентификатором ИДДрайвера
Функция ПолучитьКоличествоЛУ(_ИДДрайвера) Экспорт

	ИДДрайвера=Врег(СокрЛП(_ИДДрайвера));
	КэшДрайверов.УстановитьФильтр(ИДДрайвера, ИДДрайвера, "ИДДрайвера");
	Количество=КэшДрайверов.КоличествоСтрок("ИДДрайвера");
	КэшДрайверов.ВыключитьФильтр("ИДДрайвера");
	Возврат Количество;

КонецФункции

//ТипУстройства=ККМ|Считыватель|ДисплейПокупателя
Функция НастроитьДрайверыУстройства(ТипУстройства) Экспорт
	Сам=Сам();
	ТЗ=глБД.ПрочитатьОбъекты("Устройство."+ТипУстройства,"Active=1");

	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл
		Объект=ТЗ.Объект;
		Если ПустоеЗначение(Объект)=1 Тогда
			Сам.УстановитьОшибку("Ошибка настройки устройства.
			|ТипУстройства="+ТипУстройства+". Не был создан объект для работы с устройством.");

			Возврат 0;
		КонецЕсли;
		Если Сам.ЗарегистрироватьУстройство(Объект.Данные.Драйвер,Объект.Данные.ИД,Объект)=0 Тогда
			Возврат 0;
		КонецЕсли;  //

	КонецЦикла;



	БылиОшибки=0;
	СписокПрошедшихПервичнуюНастройкуДрайверов=СоздатьОбъект("СписокЗначений");
	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл

		Объект=ТЗ.Объект;

		Рез=0;
		Если СписокПрошедшихПервичнуюНастройкуДрайверов.Принадлежит(Объект.Данные.Драйвер)=0 Тогда
			Рез=Объект.Инит(1);
			СписокПрошедшихПервичнуюНастройкуДрайверов.ДобавитьЗначение(Объект.Данные.Драйвер);
		Иначе
			Рез=Объект.Инит();
		КонецЕсли;

		Если Рез=0 Тогда
			Сам.УстановитьОшибку("Ошибка инициализации устройства.
			|ИДУстройства="+Объект.Данные.ИД+" "+Объект.Данные.Наименование+"
			|"+Объект.ПоследняяОшибка());
			БылиОшибки=1;
		Иначе
			Если Объект.Включить()=0 Тогда
				БылиОшибки=1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;


	Если БылиОшибки=1 Тогда
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции



Функция НастроитьДрайверы() Экспорт

	Сам=Сам();
	Рез=1;
	ТекстОшибки="";

	Если Сам.НастроитьДрайверыУстройства("ККМ")=0 Тогда
		ТекстОшибки=ТекстОшибки+"
		|Не настроен драйвер ККМ: "+Сам.ПоследняяОшибка();
		Рез=0;
	КонецЕсли;



	Если Сам.НастроитьДрайверыУстройства("ПлатежнаяСистема")=0 Тогда
		ТекстОшибки=ТекстОшибки+"
		|Не настроен драйвер платежной системы: "+Сам.ПоследняяОшибка();
		Рез=0;
	КонецЕсли;


	Если Сам.НастроитьДрайверыУстройства("Считыватель")=0 Тогда
		ТекстОшибки=ТекстОшибки+"
		|Не настроен драйвер считывателей: "+Сам.ПоследняяОшибка();
		Рез=0;
	КонецЕсли;
	Если Сам.НастроитьДрайверыУстройства("ДисплейПокупателя")=0 Тогда
		ТекстОшибки=ТекстОшибки+"
		|Не настроен драйвер дисплея покупателя: "+Сам.ПоследняяОшибка();
		Рез=0;
	КонецЕсли;

	Если ТекстОшибки<>"" Тогда
		Сам.УстановитьОшибку(ТекстОшибки);
	КонецЕсли;
	Возврат Рез;
КонецФункции


Функция ОбработкаСобытий(Издатель,Событие) Экспорт
	Сам=Сам();

	Отработали=0;

	Если Событие.Источник="Команда" Тогда

		//Команда=Событие.Описатель.Команда;
		//
		//Если Команда="" Тогда
		//
		//	Отработали = 1;
		//КонецЕсли;

	КонецЕсли;

	Если Отработали = 1 Тогда
		глСобытиеОбработано(Событие);
		Возврат 0;
    КонецЕсли;
	Возврат 1;
КонецФункции

Процедура ОбработкаВнешнегоСобытия(пКонтекст, Источник,СобытиеСтр,ДанныеДрайвера) Экспорт
	Сам=Сам();
	//1.Определяем с какого устройства событие
	КэшДрайверов.ВыбратьСтроки();
	Пока КэшДрайверов.ПолучитьСтроку()=1 Цикл
		Если КэшДрайверов.Объект.ЕстьДанныеНаВходе(Источник,СобытиеСтр,ДанныеДрайвера)=1 Тогда //данные ДОЛЖНЫ обрабатываться текущим устройством

			//2.читаем и декодируем внешнее сообщение методом объекта
			//возвращаетсся структура события

			ТекущееУстройство=КэшДрайверов.Объект;
			Событие=КэшДрайверов.Объект.ПолучитьВнешнееСобытие(Источник,СобытиеСтр,ДанныеДрайвера);

			//3.отправляем на обработку подписчикам
			глПослатьСобытие(ТекущееУстройство,Событие);

			//4.очищаем очередь событий
			ТекущееУстройство.ОчиститьОчередь();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры



Процедура ЗакрытьСмену() Экспорт


	Попытка

		ККМ=ВыбратьККМ();

		Если ПустоеЗначение(ККМ)=0 Тогда
			Если ККМ.ЗакрытьСмену()=0 Тогда
				глПредупреждение("Сбой!
				|Устройство  : "+ККМ.ПоследняяОшибка()+"
				|Оборудование:"+ККМ.ИнтерфейсОборудования.ПоследняяОшибка());
			КонецЕсли;
		КонецЕсли;
	Исключение
		глДебаг(ОписаниеОшибки(),"ZОтчет");
	КонецПопытки;
КонецПроцедуры

Процедура ХОтчет() Экспорт

	Попытка

		ККМ=ВыбратьККМ();
		Если ПустоеЗначение(ККМ)=0 Тогда
			Если ККМ.ОтчетБезГашения()=0 Тогда
				глПредупреждение("Сбой!
				|Устройство  : "+ККМ.ПоследняяОшибка()+"
				|Оборудование:"+ККМ.ИнтерфейсОборудования.ПоследняяОшибка());
			КонецЕсли;
		КонецЕсли;
	Исключение
		глДебаг(ОписаниеОшибки(),"ХОтчет");
	КонецПопытки;
КонецПроцедуры


//вернет ссылку на объект ККМ из кэша драйверов
//по которому необхродимо регистрировать продажи фирмы с кодом КодФирмы
Функция ПолучитьККМПоКодуФирмы(КодФирмы) Экспорт
	Сам=Сам();
	Сам.КэшДрайверов.ВыбратьСтроки();
	Пока Сам.КэшДрайверов.ПолучитьСтроку()=1 Цикл
		Если Сам.КэшДрайверов.Объект.Вид()="Устройство.ККМ" Тогда

			Если Сам.КэшДрайверов.Объект.Данные.КодФирмы=КодФирмы Тогда
				Возврат Сам.КэшДрайверов.Объект;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	возврат 0;
КонецФункции

Функция ПолучитьККМПоИД(ИД) Экспорт
	Сам=Сам();
	Сам.КэшДрайверов.ВыбратьСтроки();
	Пока Сам.КэшДрайверов.ПолучитьСтроку()=1 Цикл
		Если Сам.КэшДрайверов.Объект.Вид()="Устройство.ККМ" Тогда

			Если Сам.КэшДрайверов.Объект.Данные.ИД=ИД Тогда
				Возврат Сам.КэшДрайверов.Объект;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	возврат 0;
КонецФункции

//------------------------------------ ------------------------------------
Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("Объект");
	Сам=Сам();
	Драйверы=СоздатьОбъект("Структура");

	КэшДрайверов=НовыйОбъект("КэшДрайверов");
	КэшДрайверов.ДобавитьИндекс("ИД","ИД",1);
	КэшДрайверов.ДобавитьИндекс("ИДДрайвера","ИДДрайвера");
	КэшДрайверов.ДобавитьИндекс("ИДУстройства","ИДУстройства");
	КэшДрайверов.ДобавитьИндекс("ВидУстройства","ВидУстройства");
	КэшДрайверов.ДобавитьИндекс("ВидУстройстваИД","ВидУстройстваИД");

	Клавиатура=СоздатьОбъект("Клавиатура");

	ТекстовыйПроцессор=СоздатьОбъект("ТекстовыйПроцессор");
	ТекстовыйПроцессор.ИмяФайлаМакетов=глОбработатьМакроСтроку("%ETC%\print.ini");



КонецПроцедуры // Конструктор

//------------------------------------ ------------------------------------
Процедура Деструктор()
	Если ПустоеЗначение(ДрайверСервераЧеков)=0 Тогда
		глОтписатьсяОтСобытий(ДрайверСервераЧеков);
		ДрайверСервераЧеков=0;
	КонецЕсли;

	Драйверы=0;
	КэшДрайверов=0;
	Клавиатура=0;

КонецПроцедуры // Деструктор


Функция ПодключитьсяКСерверуЧеков() Экспорт
	Сам=Сам();
	ИмяДрайвера=глНастройки.Получить("EXCHANGE/CheckServerDriver");
	Если ПустаяСтрока(ИмяДрайвера)=1 Тогда
		Сам.УстановитьОшибку("Не указано имя драйвера чеков в параметре EXCHANGE/CheckServerDriver");
		Возврат 0;
	КонецЕсли;
	ДрайверСервераЧеков=ПолучитьДрайвер(ИмяДрайвера);;



	Если ПустоеЗначение(ДрайверСервераЧеков)=1 Тогда
		Сам.УстановитьОшибку("Не зарегистрирован драйвер чеков с именем "+ИмяДрайвера);
		Возврат 0;
	КонецЕсли;

	Если ДрайверСервераЧеков.УстановитьСоединение()=0 Тогда
		Сам.УстановитьОшибку("Не установлена связь с сервером чеков "+ИмяДрайвера+". "+Сам.ПоследняяОшибка());
		Возврат 0;
	КонецЕсли;

	глПодписатьсяНаСобытия(ДрайверСервераЧеков);
	Возврат 1;
КонецФункции


//------------------------------------ ------------------------------------
Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии
