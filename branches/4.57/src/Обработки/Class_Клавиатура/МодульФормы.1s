//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:52
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс Клавиатура
//_______________________________________________________________________________________
Перем _База Экспорт;

Перем НастройкиКлавиатуры Экспорт;//Ссылка на класс .

Перем ЗадержкаКлавиатуры Экспорт;
Перем ИмяФайлаНастройкиКлавиатуры Экспорт;

Перем Буфер Экспорт;

Перем Сервис Экспорт;

Перем СпЦифры экспорт;  //список значений,коды клавиш, соответствующие цифрам 


Перем СпКоманды экспорт;//список значений,коды клавиш, соответствующие командам


Перем Раскладки Экспорт;//ТЗ с разными раскладками
Перем ЯзыковыеРаскладки Экспорт;//СЗ список названий раскладок
Перем ТекущаяРаскладка Экспорт;//Строка с идентификатором текущей языковой раскладки


Перем   СчетчикКлавиатуры экспорт;//время последнего принятого сканкода
Перем   Чувствительность экспорт;

Перем КнопкаПодбораТовара   экспорт, КнопкаПодбораПоКоду    экспорт,  КнопкаПодбораПоАртикулу      экспорт,
КнопкаПодбораПоШтрихКоду    экспорт, КнопкаПодбораПоЦене    экспорт,  КнопкаАктивацииСтрокиПоиска  экспорт,
КнопкаЗагрузкиДанных   		экспорт,
КнопкаВыбораДисконта        экспорт, КнопкаОткрытияЯщика    экспорт,  КнопкаБлокировки             экспорт,
КнопкаЗабой                 экспорт, КнопкаОтмена           экспорт,  КнопкаДа                     экспорт,
КнопкаНет                   экспорт, КнопкаИтог             экспорт,  КнопкаОтменыЧека             экспорт,
КнопкаВозврат               экспорт, КнопкаКоличество       экспорт,  КнопкаЦена                   экспорт,
КнопкаСкидка                экспорт, КнопкаНадбавка         экспорт,  Кнопка00                     экспорт,
КнопкаВверх                 экспорт, КнопкаПлюс1       		экспорт,  КнопкаМинус1       		   экспорт,
КнопкаВниз                  экспорт, КнопкаВлево            экспорт,  КнопкаВправо                 экспорт,
КнопкаУдалитьСтроку         экспорт, КнопкаЗакрытьПрограмму экспорт,  //для навигации в справочнике
Кнопка_1       				экспорт, Кнопка_2           	экспорт,  Кнопка_3                	   экспорт,  
Кнопка_4         			экспорт, Кнопка_5		        экспорт,  Кнопка_6           		   экспорт,  
Кнопка_7                	экспорт, Кнопка_8         		экспорт,  Кнопка_9		               экспорт, 
Кнопка_0           			экспорт,  
КнопкаЗапятая           	экспорт,
КнопкаТаб		            экспорт, КнопкаОтменыАвтоскидок экспорт, КнопкаЖурналЧеков Экспорт,
КнопкаПечатьКопии 			экспорт, КнопкаВводСимволов 	экспорт,
КнопкаКалькулятор  			экспорт, КнопкаВнешниеЧеки		экспорт, КнопкаВизуальногоВыбора Экспорт,
КнопкаНадбавкаСуммой 		экспорт, КнопкаНадбавкаНаПозицию экспорт, КнопкаНадбавкаНаПозициюСуммой       экспорт,
КнопкаСкидкаСуммой   		экспорт, КнопкаСкидкаНаПозицию   экспорт, КнопкаСкидкаНаПозициюСуммой         экспорт,
КнопкаСтраницаВниз   		экспорт, КнопкаСтраницаВверх     экспорт, КнопкаВНачало экспорт, КнопкаВКонец экспорт,
КнопкаОплата 				экспорт;

Перем КнопкаПереключенияРаскладки Экспорт;

Функция Этот(Конт) 		Возврат Конт; 			КонецФункции

Функция Сам() 			Возврат Этот(Контекст) 	КонецФункции


 //_____________________________________________________________________________

//Назначение:
//Параметры:
//
//
//Возвращает:
//
Функция ПолучитьВремяКлавиатуры() экспорт
	возврат _GetPerformanceCounter()-СчетчикКлавиатуры;
КонецФункции //ПолучитьВремяКлавиатуры

//_____________________________________________________________________________
//Процедура
//Назначение:
//
//Параметры:
//
//
Процедура СброситьВремяКлавиатуры() экспорт
	СчетчикКлавиатуры=_GetPerformanceCounter();
КонецПроцедуры //



Процедура ИнициализироватьКлавиатуру() Экспорт
	
	Раскладки=НовыйОбъект("Раскладки");
	
		
	Раскладки.EN.Описание = "Символы английского алфавита";
	Раскладки.EN.Имя="EN";
	
	Раскладки.RU.Описание = "Символы русского алфавита";
	Раскладки.RU.Имя="RU";
	
	
	Раскладки.Цифры.Описание = "Символы цифр";
	Раскладки.Цифры.Имя="Цифры";
	
	
	Раскладки.Разделители.Описание = "Символы разделителей дробной части";
	Раскладки.Разделители.Имя="Разделители";
	
	
	Раскладки.Команды.Описание = "Командные кнопки и комбинации";
	Раскладки.Команды.Имя="Команды";
	
	
	Раскладки.ФункциональныеКнопки.Описание = "Функциональные кнопки";
	Раскладки.ФункциональныеКнопки.Имя="ФункциональныеКнопки";
	
	
	
	Таблица=СоздатьОбъект("Таблица");
	Таблица.ИсходнаяТаблица("КодыКлавиатуры");
	Таблица.Вывести();

	НачСтрока=6;
	Идентификатор="-";
	Инд=0;
	Пока Идентификатор<>"" Цикл
		ТекСтр=НачСтрока+Инд;
		Область=Таблица.Область(ТекСтр,1);
		Идентификатор=СокрЛП(Область.Текст);
	
		Область=Таблица.Область(ТекСтр,2);
		Сканкод=СокрЛП(Область.Текст);
	
		Область=Таблица.Область(ТекСтр,3);
		Hex=СокрЛП(Область.Текст);
		
		Область=Таблица.Область(ТекСтр,4);
		ИмяКнопки=СокрЛП(Область.Текст);
	
		Область=Таблица.Область(ТекСтр,5);
		СимволEN=СокрЛП(Область.Текст);
		
		Область=Таблица.Область(ТекСтр,6);
		СимволRU=СокрЛП(Область.Текст);
	
		
		Если Идентификатор="VK_SPACE" Тогда
			СимволRU=" ";
			СимволEN=" ";
		КонецЕсли; 
		
		ЭтоСимвол=0;
		Если (СимволEN<>"") Тогда
			Раскладки.EN.Раскладка.НоваяСтрока();
			Раскладки.EN.Раскладка.СканКод=Сканкод;
			Раскладки.EN.Раскладка.Идентификатор=Идентификатор;
			Раскладки.EN.Раскладка.ВидЗначения=0;
			Раскладки.EN.Раскладка.Значение=СимволEN;
			Раскладки.EN.Раскладка.Описание=ИмяКнопки;
			ЭтоСимвол=1;
		КонецЕсли;
		
	
		
		
		Если (СимволRU<>"") Тогда
			
			Раскладки.RU.Раскладка.НоваяСтрока();
			Раскладки.RU.Раскладка.СканКод=Сканкод;
			Раскладки.RU.Раскладка.Идентификатор=Идентификатор;
			Раскладки.RU.Раскладка.ВидЗначения=0;
			Раскладки.RU.Раскладка.Значение=СимволRU;
			Раскладки.RU.Раскладка.Описание=ИмяКнопки;
			ЭтоСимвол=1;
		КонецЕсли;
		
		
		Если Найти("/0/1/2/3/4/5/6/7/8/9/","/"+СимволEN+"/")>0 Тогда
			Раскладки.Цифры.Раскладка.НоваяСтрока();
			Раскладки.Цифры.Раскладка.СканКод=Сканкод;
			Раскладки.Цифры.Раскладка.Идентификатор=Идентификатор;
			Раскладки.Цифры.Раскладка.ВидЗначения=0;
			Раскладки.Цифры.Раскладка.Значение=СимволEN;
			Раскладки.Цифры.Раскладка.Описание=ИмяКнопки;
			ЭтоСимвол=1;
		КонецЕсли;
		
		Если Найти("/./,/","/"+СимволEN+"/")>0 Тогда
			Раскладки.Разделители.Раскладка.НоваяСтрока();
			Раскладки.Разделители.Раскладка.СканКод=Сканкод;
			Раскладки.Разделители.Раскладка.Идентификатор=Идентификатор;
			Раскладки.Разделители.Раскладка.ВидЗначения=0;
			Раскладки.Разделители.Раскладка.Значение=СимволEN;
			Раскладки.Разделители.Раскладка.Описание=ИмяКнопки;
			ЭтоСимвол=1;
		КонецЕсли;
		
		Если ЭтоСимвол=0 Тогда
			Раскладки.ФункциональныеКнопки.Раскладка.НоваяСтрока();
			Раскладки.ФункциональныеКнопки.Раскладка.СканКод=Сканкод;
			Раскладки.ФункциональныеКнопки.Раскладка.Идентификатор=Идентификатор;
			Раскладки.ФункциональныеКнопки.Раскладка.ВидЗначения=1;
			Раскладки.ФункциональныеКнопки.Раскладка.Значение=Идентификатор;
			Раскладки.ФункциональныеКнопки.Раскладка.Описание=ИмяКнопки;
			
		КонецЕсли;
		
		Инд=Инд+1;
	КонецЦикла;
	
КонецПроцедуры


//======================================================================
//переключает язык ввода на следующий или на указанный
//КодЯзыка -  строка, RU - русский. EN-английский
Процедура ПереключитьЯзык(_КодЯзыка="") Экспорт
	
	
	Если _КодЯзыка="" Тогда
		//Переключаем на следующую раскладку
		Поз=ЯзыковыеРаскладки.НайтиЗначение(ТекущаяРаскладка);
		Если Поз>0 Тогда
			
			Если Поз=ЯзыковыеРаскладки.РазмерСписка() Тогда
				Поз=1;
			Иначе
				Поз=Поз+1;
			КонецЕсли;
		Иначе
			Поз=1;	
		КонецЕсли;
		ТекущаяРаскладка=ЯзыковыеРаскладки.ПолучитьЗначение(Поз);
	Иначе
		Поз=ЯзыковыеРаскладки.НайтиЗначение(ВРЕГ(_КодЯзыка));
		Если Поз>0 Тогда
			ТекущаяРаскладка=ЯзыковыеРаскладки.ПолучитьЗначение(Поз);
		КонецЕсли;
	КонецЕсли;
	Сообщить("Посылаем команду Обновить");
	глПослатьКоманду(Сам(),"Обновить");
КонецПроцедуры // ПереключитьЯзык

Процедура Деструктор()

КонецПроцедуры // Деструктор




Процедура ПодготовитьДанныеКЗаписи() Экспорт
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_1",Кнопка_1);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_2",Кнопка_2);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_3",Кнопка_3);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_4",Кнопка_4);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_5",Кнопка_5);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_6",Кнопка_6);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_7",Кнопка_7);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_8",Кнопка_8);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_9",Кнопка_9);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_0",Кнопка_0);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦИФРА_00",Кнопка00);

	НастройкиКлавиатуры.Установить("KEYTABLE/ЗАПЯТАЯ",КнопкаЗапятая);
	
	НастройкиКлавиатуры.Установить("KEYTABLE/ПЕРЕКЛЮЧЕНИЕ_РАСКЛАДКИ",КнопкаПереключенияРаскладки);


	НастройкиКлавиатуры.Установить("KEYTABLE/ПОДБОР_ТОВАРА",КнопкаПодбораТовара);
	НастройкиКлавиатуры.Установить("KEYTABLE/ПОДБОР_ПО_КОДУ",КнопкаПодбораПоКоду);
	НастройкиКлавиатуры.Установить("KEYTABLE/ПОДБОР_ПО_АРТИКУЛУ",КнопкаПодбораПоАртикулу);
	НастройкиКлавиатуры.Установить("KEYTABLE/ПОДБОР_ПО_ЦЕНЕ",КнопкаПодбораПоЦене);
	НастройкиКлавиатуры.Установить("KEYTABLE/ПОДБОР_ПО_ШТРИХКОДУ",КнопкаПодбораПоШтрихКоду);

	НастройкиКлавиатуры.Установить("KEYTABLE/ВИЗУАЛЬНЫЙ_ВЫБОР",КнопкаВизуальногоВыбора);
	НастройкиКлавиатуры.Установить("KEYTABLE/АКТИВАЦИЯ_СТРОКИ_ПОИСКА",КнопкаАктивацииСтрокиПоиска);

	НастройкиКлавиатуры.Установить("KEYTABLE/ПЛЮС_1",КнопкаПлюс1);
	НастройкиКлавиатуры.Установить("KEYTABLE/МИНУС_1",КнопкаМинус1);


	НастройкиКлавиатуры.Установить("KEYTABLE/КОЛИЧЕСТВО",КнопкаКоличество);
	НастройкиКлавиатуры.Установить("KEYTABLE/УДАЛИТЬ_СТРОКУ",КнопкаУдалитьСтроку);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЦЕНА",КнопкаЦена);
	НастройкиКлавиатуры.Установить("KEYTABLE/СКИДКА",КнопкаСкидка);
	НастройкиКлавиатуры.Установить("KEYTABLE/ДИСКОНТ",КнопкаВыбораДисконта);
	НастройкиКлавиатуры.Установить("KEYTABLE/ОТКРЫТЬ_ЯЩИК",КнопкаОткрытияЯщика);
	НастройкиКлавиатуры.Установить("KEYTABLE/БЛОКИРОВКА",КнопкаБлокировки);
	НастройкиКлавиатуры.Установить("KEYTABLE/EDIT_ЗАБОЙ",КнопкаЗабой);
	НастройкиКлавиатуры.Установить("KEYTABLE/EDIT_ОТМЕНА",КнопкаОтмена);
	НастройкиКлавиатуры.Установить("KEYTABLE/ДА",КнопкаДа);
	НастройкиКлавиатуры.Установить("KEYTABLE/НЕТ",КнопкаНет);

	НастройкиКлавиатуры.Установить("KEYTABLE/ПРОБИТЬ_ЧЕК",КнопкаИтог);
	НастройкиКлавиатуры.Установить("KEYTABLE/ВОЗВРАТ",КнопкаВозврат);
	НастройкиКлавиатуры.Установить("KEYTABLE/ОТМЕНА_ЧЕКА",КнопкаОтменыЧека);


	НастройкиКлавиатуры.Установить("KEYTABLE/ВЫБОР_ОПЛАТЫ",КнопкаОплата);
	НастройкиКлавиатуры.Установить("KEYTABLE/ВЫБОР_ВНЕШНЕГО_ЧЕКА",КнопкаВнешниеЧеки);


	НастройкиКлавиатуры.Установить("KEYTABLE/ВВЕРХ",КнопкаВверх);
	НастройкиКлавиатуры.Установить("KEYTABLE/ВНИЗ",КнопкаВниз);
	НастройкиКлавиатуры.Установить("KEYTABLE/ВПРАВО",КнопкаВправо);
	НастройкиКлавиатуры.Установить("KEYTABLE/ВЛЕВО",КнопкаВлево);
	НастройкиКлавиатуры.Установить("KEYTABLE/СТРАНИЦА_ВНИЗ",КнопкаСтраницаВниз);
	НастройкиКлавиатуры.Установить("KEYTABLE/СТРАНИЦА_ВВЕРХ",КнопкаСтраницаВверх);
	НастройкиКлавиатуры.Установить("KEYTABLE/В_НАЧАЛО",КнопкаВначало);
	НастройкиКлавиатуры.Установить("KEYTABLE/В_КОНЕЦ",КнопкаВКонец);

	НастройкиКлавиатуры.Установить("KEYTABLE/ТАБУЛЯЦИЯ",КнопкаТаб);

	НастройкиКлавиатуры.Установить("KEYTABLE/ОТМЕНА_АВТОСКИДОК",КнопкаОтменыАвтоСкидок);
	НастройкиКлавиатуры.Установить("KEYTABLE/ЖУРНАЛ_ЧЕКОВ",КнопкаЖурналЧеков);
	НастройкиКлавиатуры.Установить("KEYTABLE/ПЕЧАТЬ_КОПИИ",КнопкаПечатьКопии);
	НастройкиКлавиатуры.Установить("KEYTABLE/ВВОД_СИМВОЛОВ",КнопкаВводСимволов);

	НастройкиКлавиатуры.Установить("KEYTABLE/КАЛЬКУЛЯТОР",КнопкаКалькулятор);

	НастройкиКлавиатуры.Установить("KEYTABLE/НАДБАВКА",КнопкаНадбавка);
	НастройкиКлавиатуры.Установить("KEYTABLE/НАДБАВКА_СУММОЙ",КнопкаНадбавкаСуммой);
	НастройкиКлавиатуры.Установить("KEYTABLE/НАДБАВКА_НА_ПОЗИЦИЮ",КнопкаНадбавкаНаПозицию);
	НастройкиКлавиатуры.Установить("KEYTABLE/НАДБАВКА_НА_ПОЗИЦИЮ_СУММОЙ",КнопкаНадбавкаНаПозициюСуммой);
	НастройкиКлавиатуры.Установить("KEYTABLE/СКИДКА_СУММОЙ",КнопкаСкидкаСуммой);
	НастройкиКлавиатуры.Установить("KEYTABLE/СКИДКА_НА_ПОЗИЦИЮ",КнопкаСкидкаНаПозицию);
	НастройкиКлавиатуры.Установить("KEYTABLE/СКИДКА_НА_ПОЗИЦИЮ_СУММОЙ",КнопкаСкидкаНаПозициюСуммой);

	НастройкиКлавиатуры.Установить("KEYTABLE/ЗАКРЫТЬ_ПРОГРАММУ",КнопкаЗакрытьПрограмму);



КонецПроцедуры


Процедура ИнициализироватьИзНастроек() Экспорт


	Кнопка_1=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_1");
	Кнопка_2=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_2");
	Кнопка_3=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_3");
	Кнопка_4=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_4");
	Кнопка_5=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_5");
	Кнопка_6=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_6");
	Кнопка_7=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_7");
	Кнопка_8=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_8");
	Кнопка_9=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_9");
	Кнопка_0=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_0");
	Кнопка00=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦИФРА_00");

	КнопкаЗапятая=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЗАПЯТАЯ");
	КнопкаПереключенияРаскладки=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ПЕРЕКЛЮЧЕНИЕ_РАСКЛАДКИ");


	СпКоманды=СоздатьОбъект("СписокЗначений");


	КнопкаПодбораТовара=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ПОДБОР_ТОВАРА");
	КнопкаПодбораПоКоду=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ПОДБОР_ПО_КОДУ");
	КнопкаПодбораПоАртикулу=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ПОДБОР_ПО_АРТИКУЛУ");
	КнопкаПодбораПоЦене=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ПОДБОР_ПО_ЦЕНЕ");
	КнопкаПодбораПоШтрихКоду=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ПОДБОР_ПО_ШТРИХКОДУ");

	СпКоманды.Установить("ПОДБОР_ТОВАРА",КнопкаПодбораТовара);
	СпКоманды.Установить("ПОДБОР_ПО_КОДУ",КнопкаПодбораПоКоду);
	СпКоманды.Установить("ПОДБОР_ПО_АРТИКУЛУ",КнопкаПодбораПоАртикулу);
	СпКоманды.Установить("ПОДБОР_ПО_ЦЕНЕ",КнопкаПодбораПоЦене);
	СпКоманды.Установить("ПОДБОР_ПО_ШТРИХКОДУ",КнопкаПодбораПоШтрихКоду);


	КнопкаВизуальногоВыбора=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ВИЗУАЛЬНЫЙ_ВЫБОР");
	КнопкаАктивацииСтрокиПоиска=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/АКТИВАЦИЯ_СТРОКИ_ПОИСКА");

	СпКоманды.Установить("ВИЗУАЛЬНЫЙ_ВЫБОР",КнопкаВизуальногоВыбора);
	СпКоманды.Установить("АКТИВАЦИЯ_СТРОКИ_ПОИСКА",КнопкаАктивацииСтрокиПоиска);


	КнопкаПлюс1=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ПЛЮС_1");
	КнопкаМинус1=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/МИНУС_1");
	КнопкаКоличество=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/КОЛИЧЕСТВО");
	КнопкаУдалитьСтроку=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/УДАЛИТЬ_СТРОКУ");
	КнопкаЦена=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЦЕНА");
	КнопкаСкидка=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/СКИДКА");
	КнопкаВыбораДисконта=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ДИСКОНТ");
	КнопкаОткрытияЯщика=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ОТКРЫТЬ_ЯЩИК");
	КнопкаБлокировки=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/БЛОКИРОВКА");
	КнопкаЗабой=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/EDIT_ЗАБОЙ");
	КнопкаОтмена=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/EDIT_ОТМЕНА");
	КнопкаДа=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ДА");
	КнопкаНет=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/НЕТ");

	СпКоманды.Установить("ПЛЮС_1",КнопкаПлюс1);
	СпКоманды.Установить("МИНУС_1",КнопкаМинус1);
	СпКоманды.Установить("КОЛИЧЕСТВО",КнопкаКоличество);
	СпКоманды.Установить("УДАЛИТЬ_СТРОКУ",КнопкаУдалитьСтроку);
	СпКоманды.Установить("ЦЕНА",КнопкаЦена);
	СпКоманды.Установить("СКИДКА",КнопкаСкидка);
	СпКоманды.Установить("ДИСКОНТ",КнопкаВыбораДисконта);
	СпКоманды.Установить("ОТКРЫТЬ_ЯЩИК",КнопкаОткрытияЯщика);
	СпКоманды.Установить("БЛОКИРОВКА",КнопкаБлокировки);
	СпКоманды.Установить("EDIT_ЗАБОЙ",КнопкаЗабой);
	СпКоманды.Установить("EDIT_ОТМЕНА",КнопкаОтмена);
	СпКоманды.Установить("ДА",КнопкаДа);
	СпКоманды.Установить("НЕТ",КнопкаНет);


	КнопкаИтог=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ПРОБИТЬ_ЧЕК");
	КнопкаВозврат=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ВОЗВРАТ");
	КнопкаОтменыЧека=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ОТМЕНА_ЧЕКА");

	СпКоманды.Установить("ПРОБИТЬ_ЧЕК",КнопкаИтог);
	СпКоманды.Установить("ВОЗВРАТ",КнопкаВозврат);
	СпКоманды.Установить("ОТМЕНА_ЧЕКА",КнопкаОтменыЧека);


	КнопкаОплата=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ВЫБОР_ОПЛАТЫ");
	КнопкаВнешниеЧеки=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ВЫБОР_ВНЕШНЕГО_ЧЕКА");

	СпКоманды.Установить("ВЫБОР_ОПЛАТЫ",КнопкаОплата);
	СпКоманды.Установить("ВЫБОР_ВНЕШНЕГО_ЧЕКА",КнопкаВнешниеЧеки);

	КнопкаВверх=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ВВЕРХ");
	КнопкаВниз=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ВНИЗ");
	КнопкаВправо=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ВПРАВО");
	КнопкаВлево=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ВЛЕВО");
	КнопкаСтраницаВниз=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/СТРАНИЦА_ВНИЗ");
	КнопкаСтраницаВверх=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/СТРАНИЦА_ВВЕРХ");
	КнопкаВначало=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/В_НАЧАЛО");
	КнопкаВКонец=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/В_КОНЕЦ");

	СпКоманды.Установить("ВВЕРХ",КнопкаВверх);
	СпКоманды.Установить("ВНИЗ",КнопкаВниз);
	СпКоманды.Установить("ВПРАВО",КнопкаВправо);
	СпКоманды.Установить("ВЛЕВО",КнопкаВлево);
	СпКоманды.Установить("СТРАНИЦА_ВНИЗ",КнопкаСтраницаВниз);
	СпКоманды.Установить("СТРАНИЦА_ВВЕРХ",КнопкаСтраницаВверх);
	СпКоманды.Установить("В_НАЧАЛО",КнопкаВначало);
	СпКоманды.Установить("В_КОНЕЦ",КнопкаВКонец);

	КнопкаТаб=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ТАБУЛЯЦИЯ");

	СпКоманды.Установить("ТАБУЛЯЦИЯ",КнопкаТаб);

	КнопкаОтменыАвтоСкидок=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ОТМЕНА_АВТОСКИДОК");
	КнопкаЖурналЧеков=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЖУРНАЛ_ЧЕКОВ");
	КнопкаПечатьКопии=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ПЕЧАТЬ_КОПИИ");
	КнопкаВводСимволов=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ВВОД_СИМВОЛОВ");

	СпКоманды.Установить("ОТМЕНА_АВТОСКИДОК",КнопкаОтменыАвтоСкидок);
	СпКоманды.Установить("ЖУРНАЛ_ЧЕКОВ",КнопкаЖурналЧеков);
	СпКоманды.Установить("ПЕЧАТЬ_КОПИИ",КнопкаПечатьКопии);
	СпКоманды.Установить("ВВОД_СИМВОЛОВ",КнопкаВводСимволов);


	КнопкаКалькулятор=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/КАЛЬКУЛЯТОР");

	СпКоманды.Установить("КАЛЬКУЛЯТОР",КнопкаКалькулятор);

	КнопкаНадбавка=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/НАДБАВКА");
	КнопкаНадбавкаСуммой=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/НАДБАВКА_СУММОЙ");
	КнопкаНадбавкаНаПозицию=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/НАДБАВКА_НА_ПОЗИЦИЮ");
	КнопкаНадбавкаНаПозициюСуммой=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/НАДБАВКА_НА_ПОЗИЦИЮ_СУММОЙ");
	КнопкаСкидкаСуммой=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/СКИДКА_СУММОЙ");
	КнопкаСкидкаНаПозицию=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/СКИДКА_НА_ПОЗИЦИЮ");
	КнопкаСкидкаНаПозициюСуммой=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/СКИДКА_НА_ПОЗИЦИЮ_СУММОЙ");


	СпКоманды.Установить("НАДБАВКА",КнопкаНадбавка);
	СпКоманды.Установить("НАДБАВКА_СУММОЙ",КнопкаНадбавкаСуммой);
	СпКоманды.Установить("НАДБАВКА_НА_ПОЗИЦИЮ",КнопкаНадбавкаНаПозицию);
	СпКоманды.Установить("НАДБАВКА_НА_ПОЗИЦИЮ_СУММОЙ",КнопкаНадбавкаНаПозициюСуммой);
	СпКоманды.Установить("СКИДКА_СУММОЙ",КнопкаСкидкаСуммой);
	СпКоманды.Установить("СКИДКА_НА_ПОЗИЦИЮ",КнопкаСкидкаНаПозицию);
	СпКоманды.Установить("СКИДКА_НА_ПОЗИЦИЮ_СУММОЙ",КнопкаСкидкаНаПозициюСуммой);


	КнопкаЗакрытьПрограмму=НастройкиКлавиатуры.ПолучитьКакЧисло("KEYTABLE/ЗАКРЫТЬ_ПРОГРАММУ");
	СпКоманды.Установить("ЗАКРЫТЬ_ПРОГРАММУ",КнопкаЗакрытьПрограмму);


КонецПроцедуры

Функция ЗагрузитьРаскладкуКлавиатуры (ИмяФайлаНастройкиКлавиатуры) экспорт


	Если НастройкиКлавиатуры.ПрочитатьФайл(ИмяФайлаНастройкиКлавиатуры)=0 Тогда
		Сам().УстановитьОшибку("Не удалось прочитать раскладку клавиатуры!
		|"+НастройкиКлавиатуры.ПоследняяОшибка());

		глПредупреждение(Сам().ПоследняяОшибка());
		возврат 0;
	КонецЕсли;


	ИнициализироватьИзНастроек();



	СекцияТоваров=НастройкиКлавиатуры.ПолучитьСекцию("GOODS");
	Если ПустоеЗначение(СекцияТоваров)=0 Тогда
		//есть описание быстрого подбора товаров по горячим клавишам

		КодКнопки="";КодыТоваров="";
		СекцияТоваров.ВыбратьСвойства();
		Пока СекцияТоваров.ПолучитьСвойство(КодКнопки,КодыТоваров)=1 Цикл

		КонецЦикла;

	КонецЕсли;


	СпЦифры=СоздатьОбъект("СписокЗначений");
	СпЦифры.ДобавитьЗначение(Кнопка_0,"0");
	СпЦифры.ДобавитьЗначение(Кнопка_1,"1");
	СпЦифры.ДобавитьЗначение(Кнопка_2,"2");
	СпЦифры.ДобавитьЗначение(Кнопка_3,"3");
	СпЦифры.ДобавитьЗначение(Кнопка_4,"4");
	СпЦифры.ДобавитьЗначение(Кнопка_5,"5");
	СпЦифры.ДобавитьЗначение(Кнопка_6,"6");
	СпЦифры.ДобавитьЗначение(Кнопка_7,"7");
	СпЦифры.ДобавитьЗначение(Кнопка_8,"8");
	СпЦифры.ДобавитьЗначение(Кнопка_9,"9");
	СпЦифры.ДобавитьЗначение(Кнопка00,"00");
	
	возврат 1;
КонецФункции // ЗагрузитьРаскладкуКлавиатуры

//_____________________________________________________________________________
//Функция
//Назначение:
//преобразование любой комбинации клавиш в унифицированное число однозначно определяющее комбинацию кнопок
//Параметры:
//
//
//Возвращает:
//
Функция ПолучитьКодКлавиши(пКодКлавиши,Alt,Shift,Ctrl) экспорт
    возврат пКодКлавиши+Alt*kbAltFlag+Ctrl*kbCtrlFlag+Shift*kbShiftFlag;
КонецФункции //


Функция ПолучитьТекущуюРаскладку() Экспорт
Перем ОписательРаскладки;	
	Если Раскладки.Свойство(ТекущаяРаскладка,ОписательРаскладки)=0 Тогда
		//не должно сюда попадать
		возврат "";
	КонецЕсли; 
	Возврат ОписательРаскладки;
КонецФункции

//По коду нажатой клавиши (или комбинации) определяет соответствуюший по раскладке символ

Функция ПолучитьСимвол(Код,Идентификатор="",Представление="") экспорт
Перем Стр,Инд;
	Стр="";
	СтрокаТЗ=0;
	
	
	Раскладка=ПолучитьТекущуюРаскладку().Раскладка;

	
	
	СтрокаТЗ=0;
	Если Раскладка.НайтиЗначение(Строка(Код),СтрокаТЗ,"СканКод")>0 Тогда
		Раскладка.ПолучитьСтрокуПоНомеру(СтрокаТЗ);
		Стр=Раскладка.Значение;
		Представление=Раскладка.Описание;
		Идентификатор=Раскладка.Идентификатор;
	КонецЕсли;
	
	возврат Стр;
КонецФункции // ПолучитьСимвол


Функция ПолучитьФункциональнуюКнопку(Код,Описание) Экспорт
Перем Стр,Инд;
	Стр="";
	СтрокаТЗ=0;
	
	
	Раскладка=Раскладки.ФункциональныеКнопки.Раскладка;

	
	СтрокаТЗ=0;
	Если Раскладка.НайтиЗначение(Строка(Код),СтрокаТЗ,"СканКод")>0 Тогда
		Раскладка.ПолучитьСтрокуПоНомеру(СтрокаТЗ);
		Описание=Раскладка.Описание;
		Идентификатор=Раскладка.Идентификатор;
	КонецЕсли;
	
	возврат Идентификатор;	
КонецФункции

Функция ЭтоЦифра(Код) Экспорт
	Если ТипЗначенияСтр(Код)="Число" Тогда
		возврат СпЦифры.Принадлежит(Код);
	ИначеЕсли ТипЗначенияСтр(Код)="Строка" Тогда
		Если СтрДлина(Код)=1 Тогда
			Если Найти("01234546789",Код)>0 Тогда
				возврат 1;
			КонецЕсли;
		ИначеЕсли Код="00" Тогда
			возврат 1;
		КонецЕсли;
	КонецЕсли;
	возврат 0;
КонецФункции // ЭтоЦифра


Функция ПолучитьКомандуРедактораСтроки(Код) Экспорт
	Если Код=КнопкаЗабой Тогда
		возврат "EDIT_ЗАБОЙ";
	ИначеЕсли Код=КнопкаЗапятая Тогда
		возврат "Запятая";
	ИначеЕсли Код=Кнопка00 Тогда
		возврат "00";
	КонецЕсли;
	возврат "";
КонецФункции

//По коду кнопки Код возвращает идентификатор команды.

Функция ПолучитьКоманду(Код,Режим="") Экспорт

	Команда="";
	Поз=СпКоманды.НайтиЗначение(Код);
	Если Поз>0 Тогда

		СпКоманды.ПолучитьЗначение(Поз,Команда);
		Возврат Команда;
	КонецЕсли;

	возврат "";
КонецФункции

Функция СоздатьСобытие(пКонтекст,ИмяКонтекста,пКодКлавиши,Alt,Shift,Ctrl) Экспорт

	Сам=Сам();
	Событие=НовыйОбъект("Событие");

	Событие.Источник="Клавиатура";
	Событие.ДанныеДрайвера=НовыйОбъект("СтруктураДанныхДрайвера");
	Событие.ДанныеДрайвера.Источник="Клавиатура";
	Событие.ДанныеДрайвера.Событие="Нажатие";
	Событие.ДанныеДрайвера.Данные=глДрайверы.Клавиатура.ПолучитьКодКлавиши(пКодКлавиши,Alt,Shift,Ctrl);



	Событие.Описатель=НовыйОбъект("ОписательСобытияКлавиатуры");

	Событие.Описатель.ИмяКонтекста=ИмяКонтекста;

	Событие.Описатель.КодКлавиши=пКодКлавиши;
	Событие.Описатель.Alt=Alt;
	Событие.Описатель.Shift=Shift;
	Событие.Описатель.Ctrl=Ctrl;
	Событие.Описатель.Данные=Событие.ДанныеДрайвера.Данные;
	Событие.Описатель.Символ=Сам.ПолучитьСимвол(Событие.ДанныеДрайвера.Данные);

	возврат Событие;
КонецФункции


Функция ПредставлениеКнопки(Код) Экспорт
	Перем Стр,Инд,КодКнопки,флаги,СтрокаФлаг;
	Стр="";

	Если Код>kbAltFlag Тогда
		флаги=Цел(Код/kbAltFlag)*kbAltFlag;
		КодКнопки=Код-флаги;
		СтрокаФлаг="";
		Если флаги=kbAltFlag Тогда
			СтрокаФлаг="Alt";
		ИначеЕсли флаги=kbCtrlFlag Тогда
			СтрокаФлаг="Ctrl";
		ИначеЕсли флаги=kbShiftFlag Тогда
			СтрокаФлаг="Shift";
		ИначеЕсли флаги=kbCtrlFlag+kbShiftFlag Тогда
			СтрокаФлаг="Ctrl+Shift";
		ИначеЕсли флаги=kbAltFlag+kbShiftFlag Тогда
			СтрокаФлаг="Alt+Shift";
		ИначеЕсли флаги=kbCtrlFlag+kbAltFlag Тогда
			СтрокаФлаг="Ctrl+Alt";
		КонецЕсли;
		Если КодКнопки=0 Тогда
			Возврат СтрокаФлаг;
		Иначе
			Возврат СтрокаФлаг+"+"+ПредставлениеКнопки(КодКнопки);
		КонецЕсли;
	Иначе
		ИД="";Описание="";
		Символ=ПолучитьСимвол(Код,ИД,Описание);
		Если Описание="" Тогда
			ИД=ПолучитьФункциональнуюКнопку(Код,Описание);
			Стр=Описание;
		КонецЕсли;
		Стр=Описание;
		
		
	КонецЕсли;
	
	Возврат Стр;
КонецФункции


Процедура ВключитьПроверкуКлавиатуры() Экспорт

	Сервис.ОбработкаОжидания("ОбработкаКлавиатуры",ЗадержкаКлавиатуры);
КонецПроцедуры

Процедура ОтключитьПроверкуКлавиатуры() Экспорт

	Сервис.ОбработкаОжидания("ОбработкаКлавиатуры",0);
КонецПроцедуры



Процедура Конструктор()
     _База = Этот(Контекст).ПолучитьБазовыйКласс("Объект");

	 
	 Чувствительность=100;
	 СчетчикКлавиатуры=0;

	 ЗадержкаКлавиатуры=80;


	 Значение=глНастройки.Получить("KEYBOARD/SENS");
	 Если ПустоеЗначение(Значение)=0 Тогда
		ЗадержкаКлавиатуры=Число(Значение);
	 КонецЕсли;  //ПустоеЗначение(Значение)=1

	 Значение=глНастройки.Получить("KEYBOARD/LAYOUT");
	Если ПустоеЗначение(Значение)=0 Тогда
		ИмяФайлаНастройкиКлавиатуры=глОбработатьМакроСтроку(Значение);
	КонецЕсли;  //ПустоеЗначение(Значение)=1

	
	ТекущаяРаскладка="EN";
	ЯзыковыеРаскладки=СоздатьОбъект("СписокЗначений");
	ЯзыковыеРаскладки.ДобавитьЗначение("EN","Английская раскладка");
	ЯзыковыеРаскладки.ДобавитьЗначение("RU","Русская раскладка");
	

	НастройкиКлавиатуры=СоздатьОбъект("Файл.INI");
	ИнициализироватьКлавиатуру();

	Буфер = НовыйОбъект("БуферКлавиатуры");

	Если ЗагрузитьРаскладкуКлавиатуры(ИмяФайлаНастройкиКлавиатуры)=0 Тогда
		//#curmeth
		//#error Ошибка загрузки раскладки клавиатуры
	КонецЕсли;  //глЗагрузитьРаскладкуКлавиатуры(ТекстОшибки)=1

	Сервис=СоздатьОбъект("Сервис");
	СброситьВремяКлавиатуры();
КонецПроцедуры // Конструктор


Процедура ДобавитьВБуфер(Конт,КодКлавиши,Alt,Shift,Ctrl) Экспорт
	Сам=Сам();

	Если (КодКлавиши=kbAlt)Или(КодКлавиши=kbShift)Или(КодКлавиши=kbCtrl) Тогда
		СброситьВремяКлавиатуры();
		//Сам.ВключитьПроверкуКлавиатуры();
		возврат;
	КонецЕсли;  //

	Буфер.НоваяСтрока();
	Буфер.КодКлавиши=КодКлавиши;
	Буфер.Alt=Alt;
	Буфер.Shift=Shift;
	Буфер.Ctrl=Ctrl;
	Буфер.Время=_GetPerformanceCounter();
	Буфер.Интервал=ПолучитьВремяКлавиатуры();


	СброситьВремяКлавиатуры();

	ВключитьПроверкуКлавиатуры();

КонецПроцедуры

Процедура ОчиститьБуфер() Экспорт
	Буфер.УдалитьСтроки();
	СброситьВремяКлавиатуры();
КонецПроцедуры


//Читаем буфер.
//Последовательные строки с малым интервалом (меньше, чем порог чувствительности клавиатуры)
//считаем пришедшими от устройства
//Если таких событий не больше 4, считаем что это программируемая клавиатура, в учет берем последнюю кнопку
//Если больше, то игнорируем.
//Потом можно сделать анализатор и генерацию событий от клавиатурного сканера и ридера, и обходиться без драйвера Атол
Процедура ОбработкаКлавиатуры() Экспорт

	Сам=Сам();


	ЕстьКнопкаРедактирования=0;

	Если Буфер.КоличествоСтрок()>0 Тогда
		Буфер.ВНачало();

		КодКомбинации=ПолучитьКодКлавиши(Буфер.КодКлавиши,Буфер.Alt,Буфер.Shift,Буфер.Ctrl);

		Сп=СоздатьОбъект("СписокЗначений");
		Сп.ДобавитьЗначение(КнопкаЗабой);
		Сп.ДобавитьЗначение(КнопкаВверх);
		Сп.ДобавитьЗначение(КнопкаВниз);
		Сп.ДобавитьЗначение(КнопкаВправо);
		Сп.ДобавитьЗначение(КнопкаВлево);
		Сп.ДобавитьЗначение(КнопкаВКонец);
		Сп.ДобавитьЗначение(КнопкаСтраницаВверх);
		Сп.ДобавитьЗначение(КнопкаСтраницаВниз);

		Если Сп.Принадлежит(КодКомбинации)=1 Тогда
			ЕстьКнопкаРедактирования=1;
		КонецЕсли;

	КонецЕсли;

	Если (ПолучитьВремяКлавиатуры()<ЗадержкаКлавиатуры)И(ЕстьКнопкаРедактирования=0) Тогда
		//Ждем окончания серии нажатий, только если это не BackSpace

		Возврат;
	КонецЕсли;


	//сюда попали только в случае, когда с момента последнего клавиатурного нажатия прошло время задержки
	//значит кончился ввод серии нажатий от клавиатурного устойства

	//серия у нас лежит в буфере

	ОтключитьПроверкуКлавиатуры();

	Если (Буфер.КоличествоСтрок()=0) Тогда
		Возврат;
	КонецЕсли;


	ЕстьСобытие=0;
	//быстрые серии до 5 клавиш могут быть и у человека
	Если Буфер.КоличествоСтрок()<5 Тогда
		Буфер.Вначало();
		Событие=СоздатьСобытие(,,Буфер.КодКлавиши,Буфер.Alt,Буфер.Shift,Буфер.Ctrl);
		ЕстьСобытие=1;
	КонецЕсли;
	Буфер.УдалитьСтроки();


	Если ЕстьСобытие=1 Тогда
		
		
		глПослатьСобытие(Сам, Событие);

		Если Событие.Обработано=0 Тогда
			//нет обработчика нажатой клавиши по коду
			//преобразовываем в команду и опять посылаем подписчикам
			Команда=ПолучитьКоманду(КодКомбинации);
			глПослатьКоманду(Сам,Команда);

			Если Событие.Обработано=0 Тогда
				//Команда в данный момент никому не нужна

			КонецЕсли;

		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


Функция Записать() экспорт
	Сам().ПодготовитьДанныеКЗаписи();
	возврат НастройкиКлавиатуры.Записать();
КонецФункции


Функция ВыгрузитьВФайл(ИмяФайла) экспорт
	Сам().ПодготовитьДанныеКЗаписи();
	возврат НастройкиКлавиатуры.ВыгрузитьВФайл(ИмяФайла);
КонецФункции
