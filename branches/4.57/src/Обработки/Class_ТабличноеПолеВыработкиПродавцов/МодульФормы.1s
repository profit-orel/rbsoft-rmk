//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:20
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;
Перем ШрифтЗаголовка Экспорт;
Перем ШрифтОсновной Экспорт;

Перем ЦветТекстаЗаголовка Экспорт;
Перем ЦветФонаЗаголовка Экспорт;
Перем ТаблицаОбъектов Экспорт;

Перем РМК Экспорт;

Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции



Процедура НастройкаПолей()  Экспорт


		Сам=Сам();

		Сам.Колонки.Добавить("Картинка");

		Сам.Колонки.Добавить("Продавец");
		Сам.Колонки.Добавить("СуммаПродаж");
		Сам.Колонки.Добавить("НакоплениеПоЗарплате");
		Сам.Колонки.Добавить("ДатаРасчета");

		Сам.ВертСкроллер=0;
		Сам.РежимВыделенияСтроки=1;
		Сам.ВертикальныеЛинии=1;
		Сам.ГоризонтальныеЛинии=1;
		Сам.СтильЗаголовков=0;
		Сам.ТаймаутБыстрогоПоиска=1;
		Сам.ТаймаутОбновления=0;
		Сам.ИзменятьПозициюКолонок=0;
		Сам.РазрешитьНачалоПеретаскивания=0;
		Сам.РазрешитьПеретаскивание=0;
		Сам.ЧередованиеЦветовСтрок=1;

		Сам.ЦветФонаЧередованияСтрок=глОбщиеФункции.ПолучитьЦвет(250,240,240);

		ЦветФонаЗаголовка=глОбщиеФункции.ПолучитьЦвет(255,250,190);
		ЦветТекстаЗаголовка=глОбщиеФункции.ПолучитьЦвет(190,185,125);

		Сам.ЦветФона=глОбщиеФункции.ПолучитьЦвет(255,255,255);
		Сам.ЦветТекста=глОбщиеФункции.ПолучитьЦвет(0,0,0);
		Сам.ЦветЛиний=глОбщиеФункции.ПолучитьЦвет(200,200,200);
		Сам.Шрифт=ШрифтОсновной;


		Сам.Колонки.Картинка.Ширина=3;

		Сам.Колонки.Продавец.Данные="Наименование";
		Сам.Колонки.Продавец.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.Продавец.Ширина=50;
		Сам.Колонки.Продавец.Заголовок="Продавец";
		Сам.Колонки.Продавец.Видимость=1;
		Сам.Колонки.Продавец.ШрифтЗаголовка=ШрифтЗаголовка;


		Сам.Колонки.СуммаПродаж.Данные="СуммаПродаж";
		Сам.Колонки.СуммаПродаж.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.СуммаПродаж.Ширина=10;
		Сам.Колонки.СуммаПродаж.Заголовок="Сумма продаж";
		Сам.Колонки.СуммаПродаж.Видимость=1;
		Сам.Колонки.СуммаПродаж.ШрифтЗаголовка=ШрифтЗаголовка;

		Сам.Колонки.НакоплениеПоЗарплате.Данные="НакоплениеПоЗарплате";
		Сам.Колонки.НакоплениеПоЗарплате.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.НакоплениеПоЗарплате.Ширина=10;
		Сам.Колонки.НакоплениеПоЗарплате.Заголовок="Накопление по зарплате";
		Сам.Колонки.НакоплениеПоЗарплате.Видимость=1;
		Сам.Колонки.НакоплениеПоЗарплате.ШрифтЗаголовка=ШрифтЗаголовка;

		Сам.Колонки.ДатаРасчета.Данные="ДатаРасчета";
		Сам.Колонки.ДатаРасчета.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.ДатаРасчета.Ширина=10;
		Сам.Колонки.ДатаРасчета.Заголовок="Дата расчета";
		Сам.Колонки.ДатаРасчета.Видимость=1;
		Сам.Колонки.ДатаРасчета.ШрифтЗаголовка=ШрифтЗаголовка;

КонецПроцедуры	// НастройкаПолей


Процедура НастройкаШрифтов() Экспорт
	ШрифтОсновной 	= глФабрикаОбъектов.Шрифт("Arial", 12, 0);
	ШрифтЗаголовка 	= глФабрикаОбъектов.Шрифт("Arial", 8, 0);


КонецПроцедуры	// НастройкаШрифтов


Процедура ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) Экспорт
	Сам=Сам();

	ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку=1;
	ОформлениеСтроки.Ячейки.Картинка.ОтображатьТекст=1;
	ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=1;


КонецПроцедуры


Функция Инит(КонтекстФормы, ИдентификаторРеквизита,_РМК) Экспорт

	_База.Инит(КонтекстФормы, ИдентификаторРеквизита);

	ПД_Таблица=СоздатьОбъект("ПоставщикДанныхТЗ");
	ПД_Таблица.УстТаблицуЗначений(ТаблицаОбъектов);

	Сам().ПоставщикДанных=ПД_Таблица;

	Сам=Сам();
	Сам.НастройкаШрифтов();
	Сам.НастройкаПолей();

	РМК=_РМК;

	Сам.Обновить();
	Возврат 1;
КонецФункции


Процедура Обновить() Экспорт
	Сам=Сам();

	ТаблицаОбъектов.УдалитьСтроки();

	ТЗ=СоздатьОбъект("ТаблицаЗначений");

	ТЗ=глБД.ПрочитатьОбъекты("Пользователь");


	ОплатаНаличными="";

	ТЗ.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСтроку() = 1 Цикл

		ТекущийОбъект=ТЗ.Объект;
		Если ТекущийОбъект.ЭтоМастерКод()=1 Тогда
			//встроенного юзера пропускаем, если только по нему нет статистики
			Если (ТекущийОбъект.Данные.СуммаПродаж=0)И(ТекущийОбъект.Данные.НакоплениеПоЗарплате=0) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		ТаблицаОбъектов.НоваяСтрока();
		ТаблицаОбъектов.Объект=ТекущийОбъект;
		ТаблицаОбъектов.ИД=ТекущийОбъект.Данные.ИД;
		ТаблицаОбъектов.Наименование=ТекущийОбъект.Данные.ФИО;
		ТаблицаОбъектов.СуммаПродаж=ТекущийОбъект.Данные.СуммаПродаж;
		ТаблицаОбъектов.ДатаРасчета=ТекущийОбъект.Данные.ДатаРасчета;
		ТаблицаОбъектов.НакоплениеПоЗарплате=ТекущийОбъект.Данные.НакоплениеПоЗарплате;

	КонецЦикла;


	Сам.ОбновитьСтроки();
КонецПроцедуры	//


Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("ТабличноеПолеСНастройками");
	Сам=Сам();
	ТаблицаОбъектов=НовыйОбъект("ТаблицаВыработкиПродавцов");


КонецПроцедуры	// Конструктор


Процедура Выбор() Экспорт
	Сам = Сам();
КонецПроцедуры	// Выбор

//вызывается посредством подписки на событие
//1 - можно продолжать обработку события другими обработчиками
//
Функция ВнешнееСобытие(Издатель,Событие) Экспорт
	Сам=Сам();

	Отработали=0;

	Если Событие.Источник="Команда" Тогда

		Команда=Событие.Описатель.Команда;


		Если Команда="ЗапросТекущейСтрокиВыработкиПродавцов" Тогда

			Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
				Событие.Описатель.Ответ=Сам.ТекущаяСтрока;
			Иначе
				Событие.Описатель.Ответ=0;
			КонецЕсли;

			Отработали = 1;
		ИначеЕсли Команда="ВНИЗ" Тогда

			Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
				Сам.ТекущаяСтрока=Сам.ТекущаяСтрока+1;

				Если ТаблицаОбъектов.КоличествоСтрок()>0 Тогда
					ТаблицаОбъектов.ПолучитьСтрокуПоНомеру(Сам.ТекущаяСтрока);
				КонецЕсли;
			КонецЕсли;
			Отработали = 1;
		ИначеЕсли Команда="ВВЕРХ" Тогда
			Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
				Если Сам.ТекущаяСтрока>1 Тогда
					Сам.ТекущаяСтрока=Сам.ТекущаяСтрока-1;
					Если ТаблицаОбъектов.КоличествоСтрок()>0 Тогда
						ТаблицаОбъектов.ПолучитьСтрокуПоНомеру(Сам.ТекущаяСтрока);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			Отработали = 1;
		ИначеЕсли Команда="В_НАЧАЛО" Тогда
			Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
				Если Сам.ТекущаяСтрока>1 Тогда
					Сам.ТекущаяСтрока=1;

					Если ТаблицаОбъектов.КоличествоСтрок()>0 Тогда
						ТаблицаОбъектов.ПолучитьСтрокуПоНомеру(Сам.ТекущаяСтрока);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			Отработали = 1;
		ИначеЕсли Команда="В_КОНЕЦ" Тогда
			Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
				Сам.ТекущаяСтрока=Сам.ПоставщикДанных.ТаблицаЗначений.КоличествоСтрок();
				Отработали = 1;

				Если ТаблицаОбъектов.КоличествоСтрок()>0 Тогда
					ТаблицаОбъектов.ПолучитьСтрокуПоНомеру(Сам.ТекущаяСтрока);
				КонецЕсли;
			КонецЕсли;
			Отработали = 1;
		КонецЕсли;
	КонецЕсли;

	Если Отработали = 1 Тогда
		глСобытиеОбработано(Событие);
		Сам.ОбновитьСтроки();


		глПослатьКоманду(Сам,"Обновить");
		Возврат 0;
    КонецЕсли;
	Возврат 1;
КонецФункции

Процедура Сброс() Экспорт

	ТаблицаОбъектов.УдалитьСтроки();
КонецПроцедуры

Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии