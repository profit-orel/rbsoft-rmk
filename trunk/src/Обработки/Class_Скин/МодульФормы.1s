//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:20
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;
Перем Картинки Экспорт;
Перем Цвета Экспорт;
Перем ЦветТекстаПоУмолчанию;
Перем ИмяФайлаОбоев экспорт;


Перем КаталогСкина Экспорт;
Перем ИмяСкина Экспорт;
Перем ИмяФайлаСкина Экспорт;

Функция Этот(Конт) 		Возврат Конт; 			КонецФункции
Функция Сам() 			Возврат Этот(Контекст) 	КонецФункции


//*******************************************
Функция Вид() Экспорт
	Возврат "Скин";
КонецФункции	// гл


//------------------------------------ ------------------------------------
Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("Файл.INI");
	Картинки=СоздатьОбъект("СписокЗначений");
	Цвета=СоздатьОбъект("СписокЗначений");

	ЦветТекстаПоУмолчанию="0,0,100";

	Сам=Сам();

	Сам.Инит("Default");
КонецПроцедуры // Конструктор


Процедура Инит(_ИмяСкина) Экспорт

	ИмяСкина=_ИмяСкина;
	КаталогСкина=глОбработатьМакроСтроку("%ETC%\Skins\"+ИмяСкина);
	ИмяФайлаСкина=КаталогСкина+"\skin.ini";
	ИмяФайлаОбоев="";

	Сам=Сам();

	Сам.ПрочитатьФайл(ИмяФайлаСкина);
	Обои=Сам.Получить("SETTINGS/WALLPAPER");

	Если ПустоеЗначение(Обои)=0 Тогда
		Если ФС.СуществуетФайл(КаталогСкина+"\"+Обои)=1 Тогда
			ИмяФайлаОбоев=КаталогСкина+"\"+Обои;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//------------------------------------ ------------------------------------
Процедура Деструктор()

КонецПроцедуры // Деструктор


//0-  не удалось прочитать
//1- удалось
//возвращает картинку если все ок в Параметре Картинка
функция ПолучитьКартинкуИзФайла(ФайлКартинки,Картинка) Экспорт
	Попытка
		Если ПустоеЗначение(ФайлКартинки)=0 Тогда
			ПутьККартинке=КаталогСкина+"\"+ФайлКартинки;
			Если ФС.СуществуетФайл(ПутьККартинке)=1 Тогда
				лКартинка=СоздатьОбъект("Картинка");
				лКартинка.Загрузить(ПутьККартинке);

				Картинка=лКартинка;
				возврат 1;
			КонецЕсли;  //
		КонецЕсли;  //
	Исключение
	КонецПопытки;
	возврат 0;
КонецФункции


Процедура ЗапомнитьКартинку(ИмяКлюча) Экспорт
	лИмя=СокрЛП(ВРЕГ(ИмяКлюча));
	Значение=Сам().Получить(лИмя);
	Картинка="";
	Рез=ПолучитьКартинкуИзФайла(Значение,Картинка);
	Если Рез=1 Тогда
		Картинки.Установить(лИмя,Картинка);
	КонецЕсли;

КонецПроцедуры	// глЗапомнитьКартинку


Функция ПолучитьКартинку(Ключ) Экспорт
	возврат Картинки.Получить(СокрЛП(ВРЕГ(Ключ)));
КонецФункции

Процедура ЗапомнитьЦвет(_Ключ) Экспорт

	Ключ=СокрЛП(ВРЕГ(Ключ));
	Цвет=Сам().Получить(Ключ);

	Если ПустоеЗначение(Цвет)=1 Тогда
		Цвета.Установить(Ключ,ЦветТекстаПоУмолчанию);
	Иначе
		Цвета.Установить(Ключ,Цвет);
	КонецЕсли;

КонецПроцедуры	// глЗапомнитьЦвет

Функция ПрочитатьФайл(_ИмяФайла,_ВыбСекция="") Экспорт
	Если _База.ПрочитатьФайл(_ИмяФайла,_ВыбСекция)=0 Тогда
		Возврат 0;
	КонецЕсли;  //

	Сам().ВыбратьСвойства();
	ИмяСекции="";Секция="";
	Пока Сам().ПолучитьСвойство(Секция,ИмяСекции)=1 Цикл

		ИД_ИмяЭлементаоформления="";Описание="";
		Секция.ВыбратьСвойства();
		Пока Секция.ПолучитьСвойство(Описание,ИД_ИмяЭлементаоформления)=1 Цикл
			Если (ИД_ИмяЭлементаоформления="_ИД") или (ИД_ИмяЭлементаоформления="_Комментарий") Тогда
				Продолжить;
			КонецЕсли;


			ЗначениеПараметра=Описание.Значение;

			Если ВРЕГ(Лев(ИД_ИмяЭлементаоформления,6))="IMAGE_" Тогда
				//это картинка
				ЗапомнитьКартинку(ВРЕГ(ИмяСекции+"/"+ИД_ИмяЭлементаоформления));
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;
	возврат 1;
КонецФункции

//получает цвет интерфейсного элемента, назначенный текущим скином
Функция ПолучитьЦветТекста(Ключ,Р=0,Г=0,Б=0)  Экспорт
Перем Цвет,РГБ;

	Цвет=Цвета.Получить(ВРЕГ(Ключ));
	Если ПустоеЗначение(Цвет)=1 Тогда
		Цвет=ЦветТекстаПоУмолчанию;
	КонецЕсли;
	РГБ=СоздатьОбъект("СписокЗначений");
	РГБ.ИзСтрокиСРазделителями(Цвет);
	Если РГБ.РазмерСписка()=3 Тогда
		Р=Число(РГБ.ПолучитьЗначение(1));
		Г=Число(РГБ.ПолучитьЗначение(2));
		Б=Число(РГБ.ПолучитьЗначение(3));
	Иначе
		Р=0;Г=0;Б=0;
	КонецЕсли;
	возврат глОбщиеФункции.ПолучитьЦвет(Р,Г,Б);
КонецФункции	// ПолучитьЦветТекста


//возврат 1 - в скине было описание для реквизита, ПараметрыТекста - структура типа ПараметрыТекста

//0 - не было или была ошибка

Функция ПолучитьПараметрыТекста(Ключ,ПараметрыТекста) Экспорт
Перем Сервис;
	Сам=Сам();

	Параметр=СокрЛП(Строка(Сам.Получить(Ключ)));
	Сервис=СоздатьОбъект("Сервис");

	Попытка
		Если ПустаяСтрока(Параметр)=0 Тогда

			Параметр=СтрЗаменить(Параметр,";",РазделительСтрок);
			КоличествоПараметров=СтрКоличествоСтрок(Параметр);
			Если КоличествоПараметров>=7 Тогда
				Координаты		=	СтрПолучитьСтроку(Параметр,1);

					Координаты=СтрЗаменить(Координаты,",",РазделительСтрок);

					ПараметрыТекста.Координаты=НовыйОбъект("Прямоугольник");
					ПараметрыТекста.Координаты.Лево		=	Число(СтрПолучитьСтроку(Координаты,1));
					ПараметрыТекста.Координаты.Верх		=	Число(СтрПолучитьСтроку(Координаты,2));
					ПараметрыТекста.Координаты.Ширина	=	Число(СтрПолучитьСтроку(Координаты,3));
					ПараметрыТекста.Координаты.Высота	=	Число(СтрПолучитьСтроку(Координаты,4));



				ЦветТекста		=	СтрПолучитьСтроку(Параметр,2);

					ЦветТекста=СтрЗаменить(ЦветТекста,",",РазделительСтрок);
				    ПараметрыТекста.Цвет=НовыйОбъект("Цвет");
					ПараметрыТекста.Цвет.Красный		=	Число(СтрПолучитьСтроку(ЦветТекста,1));
					ПараметрыТекста.Цвет.Зеленый		=	Число(СтрПолучитьСтроку(ЦветТекста,2));
					ПараметрыТекста.Цвет.Синий			=	Число(СтрПолучитьСтроку(ЦветТекста,3));
					ПараметрыТекста.Цвет.НомерЦвета		=	глОбщиеФункции.ПолучитьЦвет(ПараметрыТекста.Цвет.Красный,
																						ПараметрыТекста.Цвет.Зеленый,
																						ПараметрыТекста.Цвет.Синий);



				ЦветФона		=	СтрПолучитьСтроку(Параметр,3);

					ЦветФона=СтрЗаменить(ЦветФона,",",РазделительСтрок);
					ПараметрыТекста.ЦветФона=НовыйОбъект("Цвет");
					ПараметрыТекста.ЦветФона.Красный		=	Число(СтрПолучитьСтроку(ЦветФона,1));
					ПараметрыТекста.ЦветФона.Зеленый		=	Число(СтрПолучитьСтроку(ЦветФона,2));
					ПараметрыТекста.ЦветФона.Синий			=	Число(СтрПолучитьСтроку(ЦветФона,3));
					ПараметрыТекста.ЦветФона.НомерЦвета		=	глОбщиеФункции.ПолучитьЦвет(ПараметрыТекста.ЦветФона.Красный,
																							ПараметрыТекста.ЦветФона.Зеленый,
																							ПараметрыТекста.ЦветФона.Синий);


				ПараметрыТекста.ПрозрачныйФон	=	0;
				Попытка
					ПрозрачныйФон	=	Число(СтрПолучитьСтроку(Параметр,4));
					Если ПрозрачныйФон<>0 Тогда
						ПараметрыТекста.ПрозрачныйФон=1;
					КонецЕсли;
				Исключение
				КонецПопытки;



				ИмяШрифта		=	СтрПолучитьСтроку(Параметр,5);
				ПараметрыШрифта	=	СтрПолучитьСтроку(Параметр,6);
					ПараметрыШрифта =   СтрЗаменить(ПараметрыШрифта,",",РазделительСтрок);

					ПараметрыТекста.Шрифт=НовыйОбъект("Шрифт");
					ПараметрыТекста.Шрифт.Имя=ИмяШрифта;
					ПараметрыТекста.Шрифт.Высота			=	Число(СтрПолучитьСтроку(ПараметрыШрифта,1));
					ПараметрыТекста.Шрифт.Жирность			=	Число(СтрПолучитьСтроку(ПараметрыШрифта,2));
					ПараметрыТекста.Шрифт.Курсив			=	Число(СтрПолучитьСтроку(ПараметрыШрифта,3));
					ПараметрыТекста.Шрифт.Подчеркивание		=	Число(СтрПолучитьСтроку(ПараметрыШрифта,4));
					ПараметрыТекста.Шрифт.Зачеркивание		=	Число(СтрПолучитьСтроку(ПараметрыШрифта,5));
					ПараметрыТекста.Шрифт.Наклон			=	Число(СтрПолучитьСтроку(ПараметрыШрифта,6));
					ПараметрыТекста.Шрифт.Код       	    =	Сервис.СоздатьШрифт(ПараметрыТекста.Шрифт.Имя,
					                                    	                        ПараметрыТекста.Шрифт.Высота,
																					ПараметрыТекста.Шрифт.Жирность,
																					ПараметрыТекста.Шрифт.Курсив,
																					ПараметрыТекста.Шрифт.Подчеркивание,
																					ПараметрыТекста.Шрифт.Зачеркивание,
																					ПараметрыТекста.Шрифт.Наклон);


					ПараметрыТекста.ВыравниваниеПоГоризонтали=	Число(СтрПолучитьСтроку(ПараметрыШрифта,7));
					ПараметрыТекста.ВыравниваниеПоВертикали	 =	Число(СтрПолучитьСтроку(ПараметрыШрифта,8));

				ПараметрыТекста.Заголовок		=	СтрПолучитьСтроку(Параметр,7);


				Если КоличествоПараметров=14 Тогда
					КоординатыMouseOver	=	 СтрПолучитьСтроку(Параметр,8);
					ЦветТекстаMouseOver	=	 СтрПолучитьСтроку(Параметр,9);
					ЦветФонаMouseOver	=	 СтрПолучитьСтроку(Параметр,10);
					ПрозрачныйФонMouseOver=	 СтрПолучитьСтроку(Параметр,11);
					ИмяШрифтаMouseOver	=	 СтрПолучитьСтроку(Параметр,12);
					ПараметрыШрифтаMouseOver=СтрПолучитьСтроку(Параметр,13);
					ЗаголовокMouseOver	=	 СтрПолучитьСтроку(Параметр,14);

					//пока не делаем
				КонецЕсли;

				возврат 1;
			КонецЕсли;
		КонецЕсли;

	Исключение
		Сам.УстановитьОшибку("ПолучитьПараметрыТекста("+Ключ+"):"+ОписаниеОшибки());
	КонецПопытки;

	возврат 0;
КонецФункции
// ПоказатьОбои()
//
// Параметры:
//
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  ТекстОписания
//
Процедура ПоказатьОбои(Режим=-1,РежимЦвет=-1) Экспорт
	Попытка
		Режим=6;
		Серый=0;
		ЦветФона=глОбщиеФункции.ПолучитьЦвет(103,213,254);
		Сервис=СоздатьОбъект("Сервис");
		Сервис.УстановитьОбои(ИмяФайлаОбоев,Режим,Серый,ЦветФона);
	Исключение
	КонецПопытки;

КонецПроцедуры // ПоказатьОбои()


//применяет скин к переданной форме
//Обрабатывает в цикле каждый интерфейсный элемент
//Если у интерфейсного элемента есть идентификатор, то пытается найти для него
//способ отображения в текущем скине: Цвет, положение, шрифт, картинка

//Форма      - Форма, к которой надо применить скин
//ИмяРаздела - Имя секции в файле описания скина

Процедура Применить(КонтекстФормы, Форма,ИмяРаздела) Экспорт
Перем Сервис,ФормаРасш,Инд;

	Сам=Сам();



	ФормаРасш = СоздатьОбъект("РасширениеФормы");
	ФормаРасш.УстановитьФорму(Форма);
	Сервис=СоздатьОбъект("Сервис");

	Для Инд = 0 По ФормаРасш.КоличествоАтрибутов() - 1 Цикл
		АтрибутФормы=ФормаРасш.ПолучитьАтрибут(Инд);
	    Идентификатор=АтрибутФормы.Идентификатор;
		Тип=АтрибутФормы.Тип;

		//Доступ к значению типу контрола атрибута. Возможные значения:
		//
		//1 - STATIC (Текст)
		//2 - 1CEDIT (Поле ввода)
		//3 - BUTTON (Кнопка)
		//4 - 1CGROUPBOX (Рамка группы)
		//5 - 1CEDIT (Колонка многострочной части редактируемая)
		//8 - SysTreeView32 (Дерево групп)
		//9 - STATIC (Колонка многострочной части с пикторгаммой или просто текстовая)
		//10 - PICTURE (Картинка)
		//11 - LISTBOX (Список)
		//12 - CHECKBOX (Флажок)
		//13 - RADIO (Переключатель)
		//14 - COMBOBOX (Поле со списком)
		//15 - TABLE (Таблица)

		Если Идентификатор<>"" Тогда
			Если Тип=1 Тогда
				//статический текст

				ПараметрыТекста=НовыйОбъект("ПараметрыТекста");

				ИмяПараметра=ИмяРаздела+"/TEXT_"+Идентификатор;
				Если Сам.ПолучитьПараметрыТекста(ИмяПараметра,ПараметрыТекста)=1 Тогда
					АтрибутФормы.Заголовок=ПараметрыТекста.Заголовок;

					АтрибутФормы.Шрифт=ПараметрыТекста.Шрифт.Код;

					АтрибутФормы.УстановитьКоординаты(ПараметрыТекста.Координаты.Лево,ПараметрыТекста.Координаты.Верх,ПараметрыТекста.Координаты.Ширина,ПараметрыТекста.Координаты.Высота);

					Атрибут=Форма.ПолучитьАтрибут(Идентификатор);

					Атрибут.Цвет(ПараметрыТекста.Цвет.НомерЦвета);


				ИначеЕсли Сам.КодОшибки()<>0 Тогда
					Предупреждение("Ошибка:"+Сам.ПоследняяОшибка());
					Возврат;
				КонецЕсли;


			ИначеЕсли Тип=10 Тогда
				//картинка
				//Не работает отсюда инициализация объекта Картинка. Приходится тупо делать из формы....


				//ИмяПараметра=ИмяРаздела+"/IMAGE_"+Идентификатор;

				//Картинка=Сам.ПолучитьКартинку(ИмяПараметра);
				//
				//КартинкаКонтекста="";
				//
				//Если ПустоеЗначение(Картинка)=0 Тогда
				//	Если Сервис.ПолучитьПеременнуюКонтекста(КонтекстФормы,Идентификатор,КартинкаКонтекста)=1 Тогда
				//		КартинкаКонтекста.УстановитьКартинку(Картинка);
				//	КонецЕсли;
				//
				//КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;


КонецПроцедуры