//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:20
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;
Перем ШрифтЗаголовка Экспорт;
Перем ШрифтОсновной Экспорт;
Перем ШрифтНомерСтроки Экспорт;
Перем ШрифтЗначение Экспорт;

Перем ЦветТекстаЗаголовка Экспорт;
Перем ЦветФонаЗаголовка Экспорт;
Перем ТаблицаОбъектов Экспорт;



Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции



Процедура НастройкаПолей()  Экспорт


	Сам=Сам();

	Сам.Колонки.Очистить();
	Сам.Колонки.Добавить("Картинка");
	Сам.Колонки.Добавить("НомерСтроки");


	Сам.ВертСкроллер=0;
	Сам.РежимВыделенияСтроки=0;
	Сам.ВертикальныеЛинии=1;
	Сам.ГоризонтальныеЛинии=1;
	Сам.СтильЗаголовков=0;
	Сам.ТаймаутБыстрогоПоиска=1;
	Сам.ТаймаутОбновления=0;
	Сам.ИзменятьПозициюКолонок=1;
	Сам.РазрешитьНачалоПеретаскивания=1;
	Сам.РазрешитьПеретаскивание=1;
	Сам.ЧередованиеЦветовСтрок=1;

	Сам.ЦветФонаЧередованияСтрок=глОбщиеФункции.ПолучитьЦвет(250,240,240);

	ЦветФонаЗаголовка=глОбщиеФункции.ПолучитьЦвет(255,250,190);
	ЦветТекстаЗаголовка=глОбщиеФункции.ПолучитьЦвет(190,185,125);


	Сам.ЦветФона=глОбщиеФункции.ПолучитьЦвет(255,255,255);
	Сам.ЦветТекста=глОбщиеФункции.ПолучитьЦвет(0,0,0);
	Сам.ЦветЛиний=глОбщиеФункции.ПолучитьЦвет(200,200,200);
	Сам.Шрифт=ШрифтОсновной;



	Сам.Колонки.Картинка.ГоризонтальноеВыравнивание=1;
	Сам.Колонки.Картинка.Ширина=5;
	Сам.Колонки.Картинка.Заголовок="";

	//Пиктограммы=СоздатьОбъект("Картинка");
	//Пиктограммы.Загрузить("СтатусыУтверждения");
	//Сам.Колонки.Картинка.УстановитьКартинкиСтрок(Пиктограммы);
	//
	Сам.Колонки.НомерСтроки.Данные="НомерСтроки";
	Сам.Колонки.НомерСтроки.ГоризонтальноеВыравнивание=2;
	Сам.Колонки.НомерСтроки.Ширина=5;
	Сам.Колонки.НомерСтроки.Видимость=1;
	Сам.Колонки.НомерСтроки.Заголовок="№";


	Для Инд=1 По ТаблицаОбъектов.КоличествоКолонок() Цикл
		Тип="";
		ИмяКолонки=ТаблицаОбъектов.ПолучитьПараметрыКолонки(Инд,Тип);
		НоваяКолонка=Сам.Колонки.Добавить(ИмяКолонки);

		НоваяКолонка.Данные=ИмяКолонки;

		Если Тип="Число" Тогда
			НоваяКолонка.ГоризонтальноеВыравнивание=2;
			НоваяКолонка.Ширина=10;
		Иначе
			НоваяКолонка.ГоризонтальноеВыравнивание=1;
			НоваяКолонка.Ширина=30;
		КонецЕсли;


		НоваяКолонка.Видимость=1;
		НоваяКолонка.Заголовок=ИмяКолонки;
	КонецЦикла;

КонецПроцедуры	// НастройкаПолей


Процедура НастройкаШрифтов() Экспорт
	ШрифтОсновной 	= глФабрикаОбъектов.Шрифт("Arial", 10, 0);
	ШрифтЗаголовка 	= глФабрикаОбъектов.Шрифт("Arial", 10, 0);
	ШрифтНомерСтроки= глФабрикаОбъектов.Шрифт("Tahoma", 10, 0);
	ШрифтЗначение	= глФабрикаОбъектов.Шрифт("Tahoma", 12, 0);

КонецПроцедуры	// НастройкаШрифтов

Процедура ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) Экспорт
	Сам=Сам();

	//ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку=1;
	//ОформлениеСтроки.Ячейки.Картинка.ОтображатьТекст=1;
	//
	//
	//ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=1;
	//Если ДанныеСтроки.Статус=0 Тогда
	//	Если ДанныеСтроки.ТипОперации=0 Тогда
	//		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=1;
	//	ИначеЕсли ДанныеСтроки.ТипОперации=1 Тогда
	//	    ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=2;
	//	Иначе
	//		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=0;
	//	КонецЕсли;  //
	//
	//ИначеЕсли ДанныеСтроки.Статус=1 Тогда
	//	Если ДанныеСтроки.ТипОперации=0 Тогда
	//		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=3;
	//	ИначеЕсли ДанныеСтроки.ТипОперации=1 Тогда
	//	    ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=4;
	//	Иначе
	//	    ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=3;
	//	КонецЕсли;  //
	//КонецЕсли;  //



КонецПроцедуры


Процедура УстановитьОбъектОтображения(ТаблицаЗначений) Экспорт
	Сам=Сам();

	ТаблицаОбъектов=ТаблицаЗначений;

	Сам.НастройкаШрифтов();
	Сам.НастройкаПолей();

	Сам.ПоставщикДанных=СоздатьОбъект("ПоставщикДанныхТЗ");
	Сам.ПоставщикДанных.УстТаблицуЗначений(ТаблицаОбъектов);


КонецПроцедуры

Функция Инит(КонтекстФормы, ИдентификаторРеквизита,Структура) Экспорт

	_База.Инит(КонтекстФормы, ИдентификаторРеквизита);

	Сам=Сам();

	//Сам.УстановитьОбъектОтображения(ТаблицаЗначений);

	Возврат 1;
КонецФункции



Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("ТабличноеПолеСНастройками");
	Сам=Сам();


	ТаблицаОбъектов=СоздатьОбъект("ТаблицаЗначений");

	ТаблицаОбъектов.НоваяКолонка("Поле","Строка");
	ТаблицаОбъектов.НоваяКолонка("Значение");

КонецПроцедуры	// Конструктор

Процедура Выбор() Экспорт
	Сам=Сам();
	ТекущийОбъект=Сам.ТекущиеДанные.Получить(Сам.ТекущаяКолонка.Имя);
	Сам.ВыполнитьВыбор(ТекущийОбъект,Сам.ТекущаяКолонка.Имя);
КонецПроцедуры

Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии