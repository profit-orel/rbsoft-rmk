//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:20
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем Объект;


//*******************************************
Процедура ПоКнопкеЗаписать()

	Товары.ВыбратьСтроки();
	Объект.Данные.Товары.УдалитьСтроки();

	Пока Товары.ПолучитьСтроку()=1 Цикл
		Объект.Данные.Товары.НоваяСтрока();
		Объект.Данные.Товары.Родитель=Объект.Данные.ИД;

		Объект.Данные.Товары.Наименование=Товары.Номенклатура;
		Объект.Данные.Товары.Товар=Товары.ИД;
		Объект.Данные.Товары.Количество=Товары.Количество;
		Объект.Данные.Товары.Цена=Товары.Цена;
		Объект.Данные.Товары.СуммаБезСкидки=Товары.СуммаБезСкидки;
		Объект.Данные.Товары.СуммаСкидки=Товары.СуммаСкидки;
		Объект.Данные.Товары.СуммаВсего=Товары.СуммаВсего;
	КонецЦикла;



	Если Объект.Записать()=0 Тогда
		глПредупреждение("Объект не записан.");
	КонецЕсли;

КонецПроцедуры



Процедура ДобавитьТовар()
	Товары.НоваяСтрока();
	Товары.ИД=Объект.Данные.ИД;

КонецПроцедуры


Процедура Очистить()
	Товары.УдалитьСтроки();
	Шапка.УдалитьСтроки();
	Оплаты.УдалитьСтроки();
КонецПроцедуры

Процедура Обновить()
	Данные=Объект.Данные;

	Очистить();

	Тов=Данные.Товары;

	Для Инд=1 По Данные.Количество() Цикл
		Зн="";
		Имя="";
		Зн=Объект.Данные.Получить(Инд,Имя);
		Если ТипЗначенияСтр(Зн)="ТаблицаЗначений" Тогда
			Продолжить;
		КонецЕсли;

		Шапка.НоваяСтрока();
		Шапка.Поле = Имя;
		Шапка.Значение = Зн;

	КонецЦикла;

	Тов.ВыбратьСтроки();
	Пока Тов.ПолучитьСтроку()=1 Цикл
		Товары.НоваяСтрока();
		Товары.Номенклатура=Тов.Наименование;
		Товары.ИД=Тов.Товар;
		Товары.Единица=Тов.Единица+"("+Тов.Коэффициент+")";
		Товары.Количество=Тов.Количество;
		Товары.Цена=Тов.Цена;
		Товары.СуммаБезСкидки=Тов.СуммаБезСкидки;
		Товары.СуммаСкидки=Тов.СуммаСкидки;
		Товары.СуммаВсего=Тов.СуммаВсего;
	КонецЦикла;

	Опл=Данные.Оплаты;
	Опл.ВыбратьСтроки();
	Пока Опл.ПолучитьСтроку()=1 Цикл
		Оплаты.НоваяСтрока();
		Оплаты.ВидОплаты=Опл.ВидОплаты+?(ПустаяСтрока(Опл.Инфо)=1,"","("+Опл.Инфо+")");

		Если СокрЛП(Оплаты.ВидОплаты)="0" Тогда
			Оплаты.Наименование="Наличные";
		Иначе

			Оплаты.Наименование=Опл.Наименование;
			ВидОплаты=глБД.ПолучитьВидОплатыПоКоду(Оплаты.ВидОплаты);
			Если ПустоеЗначение(ВидОплаты)=0 Тогда
				Оплаты.Наименование=ВидОплаты.Наименование;
			КонецЕсли;
		КонецЕсли;
		Оплаты.СуммаОплаты=Опл.СуммаОплаты;
	КонецЦикла;
КонецПроцедуры

Процедура ПриОткрытии()

	Если ПустоеЗначение(Форма.Параметр)=1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	СтруктураПараметров=Форма.Параметр;
	Объект=СтруктураПараметров.Объект;

	Обновить();
КонецПроцедуры	// ПриОткрытии


Процедура ПриПовторномОткрытии()
	ПриОткрытии();

КонецПроцедуры	// ПриПовторномОткрытии


Процедура КликНаТоваре()

	Имя=Товары.ТекущаяКолонка();
	Стр="";
	Если ВвестиСтроку(Стр,Имя,100,0)=1 Тогда
	    Товары.УстановитьЗначение(Товары.НомерСтроки,Имя,Стр);
	КонецЕсли;  //

КонецПроцедуры

Процедура ОтправитьНаСервер()

	Если глНастройки.ПолучитьКакЧисло("EXCHANGE/CopyChecksToServer")=0 Тогда
		глПредупреждение("Не настроено подключение к серверу чеков");
	ИначеЕсли Объект.ОтправитьНаСервер()=0 Тогда
		глПредупреждение("Ошибка:"+Объект.ПоследняяОшибка());
	КонецЕсли


КонецПроцедуры

Процедура ПробитьЧек()
	ККМ=0;
	Спр=СоздатьОбъект("Устройство.ККМ");
	Если Объект.Данные.ЭтоНовый=1 Тогда
		ПоКнопкеЗаписать();
		Если Объект.Данные.ЭтоНовый=0 Тогда
			глПредупреждение("Не удалось записать чек. Регистрация по ККМ будет разрешена только для записанных чеков.");
		Иначе
			Если Спр.ВыбратьОбъект(ККМ)=1 Тогда
				Если Объект.ПробитьЧек(ККМ)=1 Тогда

					Если Объект.Записать()=0 Тогда
						глПредупреждение("Чек пробит по ККМ, но в базу данных не записан.
						|"+Объект.ПоследняяОшибка());
					ИначеЕсли глНастройки.ПолучитьКакЧисло("EXCHANGE/CopyChecksToServer")=1 Тогда
						ОтправитьНаСервер();
					КонецЕсли;
				КонецЕсли;

			КонецЕсли;
		КонецЕсли;
	Иначе

		Если Спр.ВыбратьОбъект(ККМ)=1 Тогда
			Если Объект.ПробитьЧек(ККМ)=1 Тогда

				Если Объект.Записать()=0 Тогда
					глПредупреждение("Чек пробит по ККМ, но в базу данных не записан.
						|"+Объект.ПоследняяОшибка());
				ИначеЕсли глНастройки.ПолучитьКакЧисло("EXCHANGE/CopyChecksToServer")=1 Тогда
					ОтправитьНаСервер();

				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Обновить();
КонецПроцедуры




Шапка.НоваяКолонка("Поле",,,,,20);
Шапка.НоваяКолонка("Значение",,,,,30);


Оплаты.НоваяКолонка("ВидОплаты",,,,"Код",10);
Оплаты.НоваяКолонка("Наименование",,,,"Вид оплаты",40);
Оплаты.НоваяКолонка("СуммаОплаты","Число",15,2,"Сумма",10);


Товары.НоваяКолонка("ИД",,,,,10);
Товары.НоваяКолонка("Номенклатура",,,,,50);
Товары.НоваяКолонка("Единица",,,,"Ед.",7);
Товары.НоваяКолонка("Количество","Число",15,3,"Кол-во",7);
Товары.НоваяКолонка("Цена","Число",15,2,,10);
Товары.НоваяКолонка("СуммаБезСкидки","Число",15,2,"Сумма",10);
Товары.НоваяКолонка("СуммаСкидки","Число",15,2,"Скидка",10);
Товары.НоваяКолонка("СуммаВсего","Число",15,2,"Всего",10);

//Товары.ВидимостьКолонки("ИД",0);
