//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.43 от 19.07.10 20:54:20
//Назначение: Автоматизация POS-узлов в магазинах (Point of sale).
//(c) Баинов Евгений, ООО "РБ-Софт" 2006, г.Улан-Удэ, проспект 50-летия Октября,21А,офис 110 
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 44-03-57, 44-76-42, 44-86-58
//---------------------------------------------------------------------------------------
//Данная программа является свободным программным обеспечением.
//Вы вправе распространять ее и/или модифицировать в соответствии с условиями версии 2 
//либо по вашему выбору с условиями более поздней версии Стандартной Общественной Лицензии GNU,
//опубликованной Free Software Foundation. 
//Мы распространяем данную программу в надежде на то, что она будет вам полезной, 
//однако НЕ ПРЕДОСТАВЛЯЕМ НА НЕЕ НИКАКИХ ГАРАНТИЙ, 
//в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
//и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ.
//Для получения более подробной информации ознакомьтесь со Стандартной Общественной Лицензией GNU.
//Вместе с данной программой вы должны были получить экземпляр Стандартной Общественной Лицензии GNU.
//Если вы его не получили, сообщите об этом в Free Software Foundation, Inc.,
//59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//_______________________________________________________________________________________
//Имя модуля:
// <Вставить имя модуля>
//_______________________________________________________________________________________
//Разработчик: Баинов Евгений, e-mail: bainov@rb-soft.ru , icq: 73718937
//_______________________________________________________________________________________
//Назначение модуля:
// <Вставить описание модуля>
//
//_______________________________________________________________________________________
Перем _База Экспорт;
Перем ШрифтЗаголовка Экспорт;
Перем ШрифтОсновной Экспорт;
Перем ШрифтВидОперации Экспорт;
Перем ШрифтСумма Экспорт;
Перем ШрифтИТОГО Экспорт;

Перем ЦветФонаИТОГО Экспорт;
Перем ЦветТекстаИТОГО Экспорт;
Перем ЦветЯчеекИТОГО Экспорт;

Перем ЦветТекстаОтрицательных Экспорт;

Перем ЦветФонаВидОперации Экспорт;
Перем ЦветТекстаВидОперации Экспорт;

Перем ЦветТекстаЗаголовка Экспорт;
Перем ЦветФонаЗаголовка Экспорт;


Перем ТаблицаИтоговПоСмене Экспорт;


Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции


Процедура НастройкаПолей()  Экспорт


		Сам=Сам();
		Сам.Колонки.Добавить("НаименованиеОперации");
		Сам.Колонки.Добавить("Продажа");
		Сам.Колонки.Добавить("Возврат");
		Сам.Колонки.Добавить("Итог");

		Сам.ВертСкроллер=2;
		Сам.РежимВыделенияСтроки=0;
		Сам.ВертикальныеЛинии=1;
		Сам.ГоризонтальныеЛинии=1;
		Сам.СтильЗаголовков=1;
		Сам.ТаймаутБыстрогоПоиска=0;
		Сам.ТаймаутОбновления=0;
		Сам.ИзменятьПозициюКолонок=0;
		Сам.РазрешитьНачалоПеретаскивания=0;
		Сам.РазрешитьПеретаскивание=0;
		Сам.ЧередованиеЦветовСтрок=0;

		ЦветФонаВидОперации=глОбщиеФункции.ПолучитьЦвет(255,255,200);
		ЦветТекстаВидОперации=глОбщиеФункции.ПолучитьЦвет(50,50,50);

		ЦветФонаИТОГО=глОбщиеФункции.ПолучитьЦвет(255,250,190);
		ЦветТекстаИТОГО=глОбщиеФункции.ПолучитьЦвет(128,64,0);
		ЦветЯчеекИТОГО=глОбщиеФункции.ПолучитьЦвет(128,64,0);

		ЦветФонаЗаголовка=глОбщиеФункции.ПолучитьЦвет(255,250,190);
		ЦветТекстаЗаголовка=глОбщиеФункции.ПолучитьЦвет(128,64,0);

		ЦветТекстаОтрицательных=глОбщиеФункции.ПолучитьЦвет(250,0,0);

		Сам.ЦветФона=глОбщиеФункции.ПолучитьЦвет(255,255,255);
		Сам.ЦветТекста=глОбщиеФункции.ПолучитьЦвет(0,0,0);

		Сам.ЦветФонаВыделения=ЦветФонаВидОперации;
		Сам.ЦветТекстаВыделения=Сам.ЦветТекста;
		Сам.ЦветЛиний=глОбщиеФункции.ПолучитьЦвет(200,200,200);

		Сам.Шрифт=ШрифтОсновной;

		Сам.Колонки.НаименованиеОперации.Данные="НаименованиеОперации";
		Сам.Колонки.НаименованиеОперации.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.НаименованиеОперации.Ширина=20;
		Сам.Колонки.НаименованиеОперации.Заголовок="Наименование операции";
		Сам.Колонки.НаименованиеОперации.ЦветФона=ЦветФонаВидОперации;
		Сам.Колонки.НаименованиеОперации.ЦветТекста=глОбщиеФункции.ПолучитьЦвет(10,10,10);
		Сам.Колонки.НаименованиеОперации.ШрифтЗаголовка=ШрифтЗаголовка;
		Сам.Колонки.НаименованиеОперации.Шрифт=ШрифтВидОперации;

		Сам.Колонки.НаименованиеОперации.ЦветТекстаЗаголовка=ЦветТекстаЗаголовка;
		Сам.Колонки.НаименованиеОперации.ЦветФонаЗаголовка=ЦветФонаЗаголовка;
		Сам.Колонки.НаименованиеОперации.ЗнакУпорядочивания=0;


		Сам.Колонки.Продажа.Данные="Продажа";
		Сам.Колонки.Продажа.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.Продажа.Ширина=10;
		Сам.Колонки.Продажа.Заголовок="Продажа";
		Сам.Колонки.Продажа.ШрифтЗаголовка=ШрифтЗаголовка;
		Сам.Колонки.Продажа.Шрифт=ШрифтСумма;


		Сам.Колонки.Продажа.ЦветТекстаЗаголовка=ЦветТекстаЗаголовка;
		Сам.Колонки.Продажа.ЦветФонаЗаголовка=ЦветФонаЗаголовка;
		Сам.Колонки.Продажа.ЗнакУпорядочивания=0;


		Сам.Колонки.Возврат.Данные="Возврат";
		Сам.Колонки.Возврат.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.Возврат.Ширина=10;
		Сам.Колонки.Возврат.Заголовок="Возврат";
		Сам.Колонки.Возврат.ШрифтЗаголовка=ШрифтЗаголовка;
		Сам.Колонки.Возврат.Шрифт=ШрифтСумма;

		Сам.Колонки.Возврат.ЦветТекстаЗаголовка=ЦветТекстаЗаголовка;
		Сам.Колонки.Возврат.ЦветФонаЗаголовка=ЦветФонаЗаголовка;
		Сам.Колонки.Возврат.ЗнакУпорядочивания=0;

		Сам.Колонки.Итог.Данные="Итог";
		Сам.Колонки.Итог.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.Итог.Ширина=10;
		Сам.Колонки.Итог.ЦветФона=ЦветФонаИТОГО;
		Сам.Колонки.Итог.Заголовок="Итог";
		Сам.Колонки.Итог.ШрифтЗаголовка=ШрифтЗаголовка;
		Сам.Колонки.Итог.Шрифт=ШрифтИТОГО;

	    Сам.Колонки.Итог.ЦветТекстаЗаголовка=ЦветТекстаЗаголовка;
		Сам.Колонки.Итог.ЦветФонаЗаголовка=ЦветФонаЗаголовка;
		Сам.Колонки.Итог.ЗнакУпорядочивания=0;


КонецПроцедуры	// НастройкаПолей

Процедура ПриНачалеБыстрогоПоиска(чТипБыстрогоПоиска, чФСО) Экспорт

	чФСО=0;
КонецПроцедуры


Процедура НастройкаШрифтов() Экспорт
	ШрифтОсновной 	= глФабрикаОбъектов.Шрифт("Arial", 10, 1);
	ШрифтЗаголовка 	= глФабрикаОбъектов.Шрифт("Arial", 10, 1);
	ШрифтСумма		= глФабрикаОбъектов.Шрифт("Arial", 10, 0);
	ШрифтВидОперации= глФабрикаОбъектов.Шрифт("Arial", 11, 0);
	ШрифтИТОГО		= глФабрикаОбъектов.Шрифт("Arial", 11, 1);
КонецПроцедуры	// НастройкаШрифтов



Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("ТабличноеПолеСНастройками");
	ТаблицаИтоговПоСмене=Сам().СоздатьТаблицуИтоговПоСмене();

КонецПроцедуры	// Конструктор


Процедура ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) Экспорт
	Сам=Сам();
	Если ВРЕГ(Лев(СокрЛП(ДанныеСтроки.НаименованиеОперации),5))="ИТОГО" Тогда
		ОформлениеСтроки.Шрифт=Сам.ШрифтИТОГО;
		ОформлениеСтроки.ЦветФона=Сам.ЦветФонаИТОГО;
		ОформлениеСтроки.ЦветТекста=Сам.ЦветЯчеекИТОГО;

		ОформлениеСтроки.Ячейки.НаименованиеОперации.ЦветТекста=Сам.ЦветТекстаИТОГО;
		ОформлениеСтроки.Ячейки.НаименованиеОперации.ГоризонтальноеВыравнивание=2;
	КонецЕсли;  //

	Если ДанныеСтроки.Продажа<0 Тогда
		ОформлениеСтроки.Ячейки.Продажа.ЦветТекста=ЦветТекстаОтрицательных;
	КонецЕсли;
	Если ДанныеСтроки.Возврат<0 Тогда
		ОформлениеСтроки.Ячейки.Возврат.ЦветТекста=ЦветТекстаОтрицательных;
	КонецЕсли;
	Если ДанныеСтроки.Итог<0 Тогда
		ОформлениеСтроки.Ячейки.Итог.ЦветТекста=ЦветТекстаОтрицательных;
	КонецЕсли;

КонецПроцедуры


Функция Инит(КонтекстФормы, ИдентификаторРеквизита) Экспорт

	_База.Инит(КонтекстФормы, ИдентификаторРеквизита);

	Сам=Сам();
	Сам.НастройкаШрифтов();
	Сам.НастройкаПолей();

	Сам.ПоставщикДанных=СоздатьОбъект("ПоставщикДанныхТЗ");
	Сам.ПоставщикДанных.УстТаблицуЗначений(ТаблицаИтоговПоСмене);

	Возврат 1;
КонецФункции


//таблица итогов по смене используется при просмотре журнала чеков
//при заполнении журнала производится суммирование итогов
Функция СоздатьТаблицуИтоговПоСмене()  экспорт
Перем ТЗ;
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("НаименованиеОперации","Строка");
	ТЗ.НоваяКолонка("Продажа","Число",15,2);
	ТЗ.НоваяКолонка("Возврат","Число",15,2);
	ТЗ.НоваяКолонка("Итог","Число",15,2);

	ТЗ.НоваяСтрока();
	ТЗ.НаименованиеОперации="Продажа (без скидки)";//1
	ТЗ.НоваяСтрока();
	ТЗ.НаименованиеОперации="Скидка";              //2
	ТЗ.НоваяСтрока();
	ТЗ.НаименованиеОперации="ИТОГО";               //3
	ТЗ.НоваяСтрока();
	ТЗ.НаименованиеОперации="Наличные";            //4
	ТЗ.НоваяСтрока();
	ТЗ.НаименованиеОперации="Платежная карта";     //5
	ТЗ.НоваяСтрока();
	ТЗ.НаименованиеОперации="Банковский кредит";   //6
	ТЗ.НоваяСтрока();
	ТЗ.НаименованиеОперации="Прочее";              //7

	ТЗ.НоваяСтрока();
	ТЗ.НаименованиеОперации="ИТОГО";               //8

	возврат ТЗ;
КонецФункции

Процедура ПроСуммировать() Экспорт

	Сам=Сам();
	Сам.ТаблицаИтоговПоСмене.ВыбратьСтроки();
	Пока Сам.ТаблицаИтоговПоСмене.ПолучитьСтроку()=1 Цикл
		Сам.ТаблицаИтоговПоСмене.Итог=Сам.ТаблицаИтоговПоСмене.Продажа-Сам.ТаблицаИтоговПоСмене.Возврат;
	КонецЦикла;
КонецПроцедуры

Процедура УстановитьИтоги(ИтогиПоСмене) Экспорт

	ТаблицаИтоговПоСмене.ПолучитьСтрокуПоНомеру(1);
	ТаблицаИтоговПоСмене.Продажа=ИтогиПоСмене.ПродажаБезСкидки;
	ТаблицаИтоговПоСмене.Возврат=ИтогиПоСмене.ВозвратБезСкидки;

	ТаблицаИтоговПоСмене.ПолучитьСтрокуПоНомеру(2);

	ТаблицаИтоговПоСмене.Продажа=ИтогиПоСмене.Скидка;
	ТаблицаИтоговПоСмене.Возврат=ИтогиПоСмене.ВозвратСкидки;

	ТаблицаИтоговПоСмене.ПолучитьСтрокуПоНомеру(3);

	ТаблицаИтоговПоСмене.Продажа=ИтогиПоСмене.ПродажаБезСкидки-ИтогиПоСмене.Скидка;
	ТаблицаИтоговПоСмене.Возврат=ИтогиПоСмене.ВозвратБезСкидки-ИтогиПоСмене.ВозвратСкидки;


	ТаблицаИтоговПоСмене.ПолучитьСтрокуПоНомеру(4);

	ТаблицаИтоговПоСмене.Продажа=ИтогиПоСмене.Нал;
	ТаблицаИтоговПоСмене.Возврат=ИтогиПоСмене.ВозвратНал;

	ТаблицаИтоговПоСмене.ПолучитьСтрокуПоНомеру(5);

	ТаблицаИтоговПоСмене.Продажа=ИтогиПоСмене.Банк;
	ТаблицаИтоговПоСмене.Возврат=ИтогиПоСмене.ВозвратБанк;

	ТаблицаИтоговПоСмене.ПолучитьСтрокуПоНомеру(6);
	ТаблицаИтоговПоСмене.Продажа=ИтогиПоСмене.Кредит;
	ТаблицаИтоговПоСмене.Возврат=0;

	ТаблицаИтоговПоСмене.ПолучитьСтрокуПоНомеру(7);
	ТаблицаИтоговПоСмене.Продажа=ИтогиПоСмене.Прочее;
	ТаблицаИтоговПоСмене.Возврат=0;

	ТаблицаИтоговПоСмене.ПолучитьСтрокуПоНомеру(8);

	ТаблицаИтоговПоСмене.Продажа=ИтогиПоСмене.Нал+ИтогиПоСмене.Банк+ИтогиПоСмене.Кредит+ИтогиПоСмене.Прочее;
	ТаблицаИтоговПоСмене.Возврат=ИтогиПоСмене.ВозвратНал+ИтогиПоСмене.ВозвратБанк;


	ПроСуммировать();

	Сам().ОбновитьСтроки();

КонецПроцедуры


Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии