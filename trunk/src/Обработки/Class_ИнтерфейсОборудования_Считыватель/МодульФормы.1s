//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:52
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс ИнтерфейсОборудования.Считыватель
//_______________________________________________________________________________________
Перем _База Экспорт;



Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции



Функция ВидУстройства() Экспорт
	Возврат "Считыватель";
КонецФункции


//------------------------------------ ------------------------------------
Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("ИнтерфейсОборудования");
КонецПроцедуры // Конструктор

//------------------------------------ ------------------------------------
Процедура Деструктор()
КонецПроцедуры // Деструктор

Функция ИмяТаблицыБД() Экспорт
	Возврат "devinput";
КонецФункции



//Стр. строка из кодов целевой строки
//каждая двойка символов - десятичный код символа ANSI

Функция ПолучитьСтрокуИзКодовANSI(Стр) Экспорт

	Стр1=СокрЛП(Стр);
	ДлинаЦели=Цел(СтрДлина(Стр1)/2);
	Если ДлинаЦели<>СтрДлина(Стр1)/2 Тогда
		Сообщить("Неверный параметр передан в функцию раскодирования глПолучитьСтрокуИзКодовASCII.
		|строка должна быть с четной длиной.");
		возврат "";
	КонецЕсли;
	Рез="";
	Для Инд=0 По ДлинаЦели-1 Цикл

		КодСтр=Сред(Стр1,Инд*2+1,2);
		Код=Число(КодСтр);

		Символ=Симв(Код);
		Рез=Рез+Символ;

	КонецЦикла;

	Возврат Рез;

КонецФункции	// гл





//_____________________________________________________________________________
//Процедура РаскодироватьMSR_ISO(СтрокаMSR_ISO,лТрек1,лТрек2,лТрек2);
//Назначение:
//
//Параметры:
//
//
Процедура РаскодироватьMSR_ISO(СтрокаMSR_ISO,лТрек1,лТрек2,лТрек3) Экспорт


	Стр=СтрокаMSR_ISO;

	Стр=СтрЗаменить(СтрЗаменить(Стр,"%",""),"?","");
	Стр=СтрЗаменить(Стр,";",РазделительСтрок);
	Текст=создатьОбъект("Текст");
	Текст.ДобавитьСтроку(Стр);
	лТрек1="";
	лТрек2="";
	лТрек3="";

	Попытка
		лТрек1=Текст.ПолучитьСтроку(1);
		лТрек2=Текст.ПолучитьСтроку(2);
		лТрек3=Текст.ПолучитьСтроку(3);
	Исключение
	КонецПопытки;

КонецПроцедуры //РаскодироватьMSR_ISO(СтрокаMSR_ISO,лТрек1,лТрек2,лТрек2);


//_____________________________________________________________________________
//Функция ПарсерПрефикса
//Назначение:
//на вход поступает строка типа #13,#10,CR,ESC,SPACE,LF
//Параметры:
//
//
//Возвращает:
//строка с символами, коды которых получаются из входной строки: Симв(13)Симв(10)Симв(13)Симв(10)...
Функция ПарсерПрефикса(СтрокаПрефикса) Экспорт
    Стр=ВРЕГ(СокрЛП(СтрокаПрефикса));
	Текст=СоздатьОбъект("Текст");
	Стр=СтрЗаменить(Стр,",",РазделительСтрок);
	Стр=СтрЗаменить(Стр," ",РазделительСтрок);
	Текст.ДобавитьСтроку(Стр);
	Результат="";
	Для Инд=1 По Текст.КоличествоСтрок() Цикл
		СтрЧисло=СокрЛП(Текст.ПолучитьСтроку(Инд));
		Если ПустаяСтрока(СтрЧисло)=1 Тогда
			Продолжить;
		КонецЕсли;
		Символ="";
		Если Лев(СтрЧисло,1)="#" Тогда
			СтрокаЦифр=Сред(СтрЧисло,2) ;
			ЧислоСтроки=Число(СтрокаЦифр);
			Символ=Симв(ЧислоСтроки);
		ИначеЕсли СтрЧисло="CR" Тогда
			Символ=Симв(13);
		ИначеЕсли СтрЧисло="LF" Тогда
			Символ=Симв(10);
		ИначеЕсли СтрЧисло="SPACE" Тогда
			Символ=Симв(32);
		ИначеЕсли СтрЧисло="ESC" Тогда
			Символ=Симв(27);
		ИначеЕсли СтрЧисло="TAB" Тогда
			Символ=Симв(9);
		ИначеЕсли (СтрЧисло="BACKSPACE")Или(СтрЧисло="BS") Тогда
			Символ=Симв(8);

		КонецЕсли;
		Результат=Результат+Символ;
	КонецЦикла;

	Возврат Результат;
КонецФункции //ПарсерПрефикса

//_____________________________________________________________________________
//Функция глОбработатьШК
//Назначение: Убрать спецсимволы из строки пришедшей от устройства ввода
//спецсимволы попадают во входящий поток обычно при неправильной настройке оборудования
//однако предварительная  обработка входящего потока символов часто позволяет исправлять ситуацию на лету
//Параметры:
//ШК
//
//Возвращает:
//
Функция ОбработатьШК(ШК) экспорт
	возврат СокрЛП(СтрЗаменить(СтрЗаменить(ШК,Симв(10),""),Симв(13),""));
КонецФункции //глОбработатьШК

//Абстрактная функция
//определяет источник события по содержимому параметров процедуры ОбработкаВнешнегоСобытия
//Вызывается при обработке внешнего события от устройств ввода
//возвращает:
//Сканер - событие пришло от сканера штрихкода
//Ридер - событие пришло от ридера магнитных карт
//Ключ - событие от механического ключа
//Радиоридер - событие от считывателя проксимити

Функция ПолучитьИсточникВнешнегоСобытия(Источник,Событие="",ДанныеДрайвера="") Экспорт
	возврат "Сканер";
КонецФункции


//абстрактная функция
Функция ПолучитьДанныеСканера(Событие,ДанныеДрайвера) Экспорт

	возврат "";
КонецФункции

//абстрактная функция
Функция ПолучитьДанныеРидера(Событие,ДанныеДрайвера) Экспорт
	возврат "";
КонецФункции

//абстрактная функция
Функция ПолучитьДанныеКлюча(Событие,ДанныеДрайвера) Экспорт
	возврат "";
КонецФункции

//абстрактная функция
Функция ПолучитьДанныеРадиоРидера(Событие,ДанныеДрайвера) Экспорт
	возврат "";
КонецФункции



//------------------------------------ ------------------------------------
Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии

