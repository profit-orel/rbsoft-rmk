//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:52
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс ТабличноеПолеЖурналЧеков
//_______________________________________________________________________________________
Перем _База Экспорт;
Перем ШрифтЗаголовка Экспорт;
Перем ШрифтОсновной Экспорт;

Перем ЦветТекстаЗаголовка Экспорт;
Перем ЦветФонаЗаголовка Экспорт;
Перем ЦветТекстаВозврат Экспорт;
Перем ЦветТекстаПродаж Экспорт;

Перем ЦветТекстаНорма Экспорт;
Перем ЦветТекстаОшибкаНаСервере Экспорт;

Перем ТаблицаОбъектов Экспорт;

Перем ИтогиПоСмене Экспорт; //структура с полями для хранения итогов по смене в журнале чеков
//заполняется при чтении списка чеков
Перем ТаблицаИтоговПоОплате Экспорт;//ТЗ с Итогами по оплате по разным видам безналичных продаж

Перем ТабличноеПолеИтогов Экспорт;
Перем ТабличноеПолеИтоговОплаты Экспорт;

Перем Отбор Экспорт; // Структура с параметрами отбора


Функция Этот(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Этот(Контекст) КонецФункции


//
Функция СоздатьСтруктуруОтбора() Экспорт
	Структура=СоздатьОбъект("Структура");
	Структура.Вставить("ДатаНачала",глУниверсальныйОтчет.СоздатьСтруктуруПоляОтбора(ТекущаяДата(),">=",1));
	Структура.Вставить("ДатаКонца",глУниверсальныйОтчет.СоздатьСтруктуруПоляОтбора(ТекущаяДата(),"<=",1));
	Структура.Вставить("ККМ",глУниверсальныйОтчет.СоздатьСтруктуруПоляОтбора("","=",0));
	Структура.Вставить("Продавец",глУниверсальныйОтчет.СоздатьСтруктуруПоляОтбора("","=",0));
	Структура.Вставить("Кассир",глУниверсальныйОтчет.СоздатьСтруктуруПоляОтбора("","=",0));
	Структура.Вставить("Сумма",глУниверсальныйОтчет.СоздатьСтруктуруПоляОтбора("","=",0));
	Структура.Вставить("Проведен",глУниверсальныйОтчет.СоздатьСтруктуруПоляОтбора(1,"=",0));

	Возврат Структура;
КонецФункции


Процедура Очистить()
	ТаблицаОбъектов.УдалитьСтроки();
	ТаблицаИтоговПоОплате.УдалитьСтроки();
    глОбщиеФункции.ОчиститьСтруктуру(ИтогиПоСмене);

КонецПроцедуры


Процедура Обновить() Экспорт
	Сам=Сам();

	Очистить();

	ТЗЧеков=СоздатьОбъект("ТаблицаЗначений");

	ТЗЧеков=глБД.ПолучитьЧеки(Отбор);


	ТЗЧеков.ВыбратьСтроки();
	Пока ТЗЧеков.ПолучитьСтроку() = 1 Цикл
		//Начало операции ККМ

		ИД=ТЗЧеков.ID;
		НомерДокументаККМ=ТЗЧеков.NumDoc;
		НомерСменыККМ=ТЗЧеков.Z;
		НомерЧекаККМ=ТЗЧеков.Num;
		ККМНомер=ТЗЧеков.SN;
		ТипОперации=ТЗЧеков.Operation;
		ДатаЧека=глСтроки.ДатаИзСтроки(ТЗЧеков.Date);
		ВремяЧека=ТЗЧеков.Time;
		ИДКассира=ТЗЧеков.UserID;
		ФИОКассира=ТЗЧеков.UserName;

		Продавец=ТЗЧеков.SellName;
		Кассир=ТЗЧеков.UserName;

		СуммаЧека=0;
		Скидка=0;
		ИтогЧека=0;
		Покупатель="";



		СуммаЧека=ТЗЧеков.Summ;
		Скидка=ТЗЧеков.Discount;
		ИтогЧека=ТЗЧеков.Total;
		Покупатель=ТЗЧеков.Discrd;


		//прочитали шапку - теперь идем дальше до признака завершения транзакции

		ЧекПробит=ТЗЧеков.Status;

		СуммаНал=0;
		СуммаБезнал=0;
		СуммаКредит=0;
		СуммаПрочее=0;
		ВидБезнал="";
		лВидОплаты="";

		Если ЧекПробит=1 Тогда


			//соединяем 2 таблицы по ключу
			лТЗОплат=глБД.ПолучитьЗаписиИзТаблицыПоПолю("pays,paytypes","pays.idparent",ИД,"pays.paytype=paytypes.id",,,"PayTypes.Type,Pays.paytype,PayTypes.Name,Summ");


			лТЗОплат.ВыбратьСтроки();
			//суммируем типы оплат
			Пока лТЗОплат.ПолучитьСтроку()=1 Цикл
				Если лТЗОплат.Type=0 Тогда
					СуммаНал=СуммаНал+лТЗОплат.Summ;
				Иначе
					лВидОплаты=СокрЛП(лТЗОплат.Name);
					Если лВидОплаты="" Тогда
						лВидОплаты=лТЗОплат.PayType;


					КонецЕсли;

					ВидБезнал=ВидБезнал+?(СуммаБезнал=0,"",";")+лВидОплаты;

					Если лТЗОплат.Type=1 Тогда
						СуммаБезнал=СуммаБезнал+лТЗОплат.Summ;
					ИначеЕсли лТЗОплат.Type=2 Тогда
						СуммаКредит=СуммаКредит+лТЗОплат.Summ;
					Иначе
						СуммаПрочее=СуммаПрочее+лТЗОплат.Summ;
					КонецЕсли;

					ТаблицаИтоговПоОплате.НоваяСтрока();
					ТаблицаИтоговПоОплате.ИД = лТЗОплат.PayType;
					ТаблицаИтоговПоОплате.ВидОплаты = лВидОплаты;
					ТаблицаИтоговПоОплате.Продажа = ?(ТипОперации=1,0,лТЗОплат.Summ);
					ТаблицаИтоговПоОплате.Возврат = ?(ТипОперации=1,лТЗОплат.Summ,0);
				КонецЕсли;
			КонецЦикла;



			БезналВсего= СуммаБезНал+СуммаКредит+СуммаПрочее;
			СуммаНал=ИтогЧека-БезналВсего;
		КонецЕсли;


		//получим наименование ККМ
		лТЗККМ=глБД.ПолучитьЗаписиИзТаблицыПоПолю("devkkm","serial",ККМНомер);
		лТЗККМ.ВыбратьСтроки();

		ККМСтр="ККМ "+СокрЛП(лТЗККМ.Name)+" №"+ККМНомер;

		Пока лТЗККМ.ПолучитьСтроку()=1 Цикл
			 ККМСтр=СокрЛП(лТЗККМ.Name)+" (№"+СокрЛП(ККМНомер)+")";
			 Прервать;
		КонецЦикла;


		ТаблицаОбъектов.НоваяСтрока();

		ТаблицаОбъектов.Статус=ЧекПробит;
		ТаблицаОбъектов.Дата = ДатаЧека;
		ТаблицаОбъектов.Время = ВремяЧека;
		ТаблицаОбъектов.ККМ = ККМНомер;
		ТаблицаОбъектов.ККМСтр = ККМСтр;

		ТаблицаОбъектов.НомерСмены = НомерСменыККМ;
		ТаблицаОбъектов.НомерЧека = НомерЧекаККМ;
		ТаблицаОбъектов.Сумма = СуммаЧека;
		ТаблицаОбъектов.Скидка = Скидка;
		ТаблицаОбъектов.Всего = ИтогЧека;
		ТаблицаОбъектов.Покупатель = Покупатель;
		ТаблицаОбъектов.ПокупательСтр = Покупатель;

		ТаблицаОбъектов.Продавец = Продавец;
		ТаблицаОбъектов.Кассир = Кассир;

		ТаблицаОбъектов.ВидБезнал=лВидОплаты;
		ТаблицаОбъектов.ВидБезналСтр=ВидБезнал;

		ТаблицаОбъектов.ИДЧековогоСервера=ТЗЧеков.SERVERID;
		ТаблицаОбъектов.ОтправленНаСервер=СокрЛП(ТЗЧеков.SENDED);

		ТаблицаОбъектов.ИД=ИД;

		ТаблицаОбъектов.ТипОперации=ТипОперации;
		//добавляем в журнал
		Если ТипОперации=0 Тогда

			ТаблицаОбъектов.ОперацияСтр="Продажа";
			ТаблицаОбъектов.ПродажаБезНал=СуммаБезНал+СуммаКредит+СуммаПрочее;
			ТаблицаОбъектов.ПродажаНал=ИтогЧека-ТаблицаОбъектов.ПродажаБезНал;


			Если ЧекПробит=1 Тогда
				ИтогиПоСмене.ПродажаБезСкидки=ИтогиПоСмене.ПродажаБезСкидки+СуммаЧека;//сумма всех продаж без скидки
				ИтогиПоСмене.Скидка=ИтогиПоСмене.Скидка+Скидка;//сумма всех скидок

				ИтогиПоСмене.Нал	= ИтогиПоСмене.Нал    + СуммаНал;
				ИтогиПоСмене.Банк	= ИтогиПоСмене.Банк + СуммаБезНал;
				ИтогиПоСмене.Кредит	= ИтогиПоСмене.Кредит + СуммаКредит;
				ИтогиПоСмене.Прочее	= ИтогиПоСмене.Прочее + СуммаПрочее;

			КонецЕсли;  //

		ИначеЕсли ТипОперации=1 Тогда
			ТаблицаОбъектов.ОперацияСтр="Возврат";
			Если ЧекПробит=1 Тогда
				ИтогиПоСмене.ВозвратБезСкидки=ИтогиПоСмене.ВозвратБезСкидки+СуммаЧека;//все возвраты без учета скидки
				ИтогиПоСмене.ВозвратСкидки=ИтогиПоСмене.ВозвратСкидки+Скидка;//скидки всех возвратов

				ИтогиПоСмене.ВозвратНал=ИтогиПоСмене.ВозвратНал+СуммаНал;
				ИтогиПоСмене.ВозвратБанк=ИтогиПоСмене.ВозвратБанк+СуммаБезНал;

			КонецЕсли;  //
        	ТаблицаОбъектов.ВозвратБезНал=СуммаБезНал+СуммаКредит+СуммаПрочее;
			ТаблицаОбъектов.ВозвратНал=ИтогЧека-ТаблицаОбъектов.ВозвратБезНал;

		Иначе
			ТаблицаОбъектов.ОперацияСтр="Операция №"+ТипОперации;
			ТаблицаОбъектов.ПродажаБезНал=СуммаБезНал+СуммаКредит+СуммаПрочее;
			ТаблицаОбъектов.ПродажаНал=ИтогЧека-ТаблицаОбъектов.ПродажаБезНал;

		КонецЕсли;
		ТаблицаОбъектов.ОплатаНал=ТаблицаОбъектов.ПродажаНал+ТаблицаОбъектов.ВозвратНал; //здесь суммируем т.к. только один из слагаемых ненулевой
		ТаблицаОбъектов.ОплатаБезнал=ТаблицаОбъектов.ПродажаБезНал+ТаблицаОбъектов.ВозвратБезНал;
	КонецЦикла;



	ТаблицаОбъектов.Сортировать("Дата,Время");
	ТаблицаИтоговПоОплате.Свернуть("ИД,ВидОплаты","Продажа,Возврат");
	ТаблицаИтоговПоОплате.Сортировать("ВидОплаты");

	Сам.ОбновитьСтроки();


	Если ПустоеЗначение(ТабличноеПолеИтогов)=0 Тогда
		ТабличноеПолеИтогов.УстановитьИтоги(ИтогиПоСмене);
	КонецЕсли;
	Если ПустоеЗначение(ТабличноеПолеИтоговОплаты)=0 Тогда
		ТабличноеПолеИтоговОплаты.УстановитьИтоги(ТаблицаИтоговПоОплате);
	КонецЕсли;
КонецПроцедуры	// ЗаполнитьЖурналЧеков



Процедура ПоказатьЧекВЖурнале()
Перем Чек,ИД;
	Сам=Сам();
	Попытка
		ИД=Сам.ТекущиеДанные.ИД;
		Чек=СоздатьОбъект("Чек");
		Если Чек.Прочитать(ИД)=0 Тогда
			Чек=0;
			глПредупреждение("Не удалось прочитать чек с ИД="+ИД);
			Возврат;
		КонецЕсли;
		//ОткрытьФорму("Обработка.Class_Чек_ОсновнаяФорма",Чек);
		Чек.ОткрытьФормуОбъектаМодально();

		Обновить();
	Исключение
		//#curmeth
		сообщить(""+ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры //ПоказатьЧекВЖурнале



Процедура Выбор() Экспорт
	ПоказатьЧекВЖурнале();
КонецПроцедуры



Процедура НастройкаПолей()  Экспорт


		Сам=Сам();
		Сам.Колонки.Добавить("Картинка");
		Сам.Колонки.Добавить("СерверИД");


		Сам.Колонки.Добавить("Дата");
		Сам.Колонки.Добавить("ККМСтр");
		Сам.Колонки.Добавить("НомерСмены");
		Сам.Колонки.Добавить("НомерЧека");
		Сам.Колонки.Добавить("Операция");
		Сам.Колонки.Добавить("Сумма");
		Сам.Колонки.Добавить("Скидка");
		Сам.Колонки.Добавить("Всего");
		Сам.Колонки.Добавить("ОплатаНал");
		Сам.Колонки.Добавить("ОплатаБезнал");

		Сам.Колонки.Добавить("ВидБезналСтр");

		Сам.Колонки.Добавить("ПокупательСтр");

		Сам.Колонки.Добавить("Кассир");
		Сам.Колонки.Добавить("Продавец");



		Сам.ВертСкроллер=0;
		Сам.РежимВыделенияСтроки=1;
		Сам.ВертикальныеЛинии=1;
		Сам.ГоризонтальныеЛинии=1;
		Сам.СтильЗаголовков=0;
		Сам.ТаймаутБыстрогоПоиска=1;
		Сам.ТаймаутОбновления=0;
		Сам.ИзменятьПозициюКолонок=0;
		Сам.РазрешитьНачалоПеретаскивания=0;
		Сам.РазрешитьПеретаскивание=0;
		Сам.ЧередованиеЦветовСтрок=1;

		Сам.ЦветФонаЧередованияСтрок=глОбщиеФункции.ПолучитьЦвет(250,240,240);

		ЦветФонаЗаголовка=глОбщиеФункции.ПолучитьЦвет(255,250,190);
		ЦветТекстаЗаголовка=глОбщиеФункции.ПолучитьЦвет(190,185,125);

		ЦветТекстаПродаж=глОбщиеФункции.ПолучитьЦвет(0,0,0);
		ЦветТекстаВозврат=глОбщиеФункции.ПолучитьЦвет(200,50,50);

		ЦветТекстаНорма=глОбщиеФункции.ПолучитьЦвет(0,0,0);
		ЦветТекстаОшибкаНаСервере =глОбщиеФункции.ПолучитьЦвет(200,50,50);


		Сам.ЦветФона=глОбщиеФункции.ПолучитьЦвет(255,255,255);
		Сам.ЦветТекста=глОбщиеФункции.ПолучитьЦвет(0,0,0);
		Сам.ЦветЛиний=глОбщиеФункции.ПолучитьЦвет(200,200,200);
		Сам.Шрифт=ШрифтОсновной;




		Сам.Колонки.Картинка.Данные="Статус";
		Сам.Колонки.Картинка.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.Картинка.Ширина=4;
		Сам.Колонки.Картинка.Заголовок="";
		Пиктограммы=СоздатьОбъект("Картинка");
		Пиктограммы.Загрузить("СтатусыУтверждения");
		Сам.Колонки.Картинка.УстановитьКартинкиСтрок(Пиктограммы);

		Сам.Колонки.СерверИД.Данные="ИДЧековогоСервера";
		Сам.Колонки.СерверИД.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.СерверИД.Ширина=8;
		Сам.Колонки.СерверИД.Заголовок="Server ID";

		Если глНастройки.ПолучитьКакЧисло("EXCHANGE/CopyChecksToServer")=1 Тогда
			Сам.Колонки.СерверИД.Видимость=1;
		Иначе
			Сам.Колонки.СерверИД.Видимость=0;
		КонецЕсли;

		Сам.Колонки.Дата.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.Дата.Ширина=15;
		Сам.Колонки.Дата.Заголовок="Дата+Время";

		Сам.Колонки.ККМСтр.Данные="ККМСтр";
		Сам.Колонки.ККМСтр.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.ККМСтр.Ширина=20;
		Сам.Колонки.ККМСтр.Заголовок="ККМ";


		Сам.Колонки.НомерСмены.Данные="НомерСмены";
		Сам.Колонки.НомерСмены.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.НомерСмены.Ширина=5;
		Сам.Колонки.НомерСмены.Заголовок="Z";

		Сам.Колонки.НомерЧека.Данные="НомерЧека";
		Сам.Колонки.НомерЧека.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.НомерЧека.Ширина=8;
		Сам.Колонки.НомерЧека.Заголовок="Чек №";

		Сам.Колонки.Операция.Данные="ОперацияСтр";
		Сам.Колонки.Операция.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.Операция.Ширина=12;
		Сам.Колонки.Операция.Заголовок="Операция";

		Сам.Колонки.Сумма.Данные="Сумма";
		Сам.Колонки.Сумма.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.Сумма.Ширина=10;
		Сам.Колонки.Сумма.Заголовок="Сумма";

		Сам.Колонки.Скидка.Данные="Скидка";
		Сам.Колонки.Скидка.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.Скидка.Ширина=10;
		Сам.Колонки.Скидка.Заголовок="Скидка";
		Сам.Колонки.Скидка.Видимость=1;

		Сам.Колонки.Всего.Данные="Всего";
		Сам.Колонки.Всего.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.Всего.Ширина=10;
		Сам.Колонки.Всего.Заголовок="Всего";
		Сам.Колонки.Всего.Видимость=1;

		Сам.Колонки.ОплатаНал.Данные="ОплатаНал";
		Сам.Колонки.ОплатаНал.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.ОплатаНал.Ширина=10;
		Сам.Колонки.ОплатаНал.Заголовок="Нал";
		Сам.Колонки.ОплатаНал.Видимость=1;

		Сам.Колонки.ОплатаБезнал.Данные="ОплатаБезнал";
		Сам.Колонки.ОплатаБезнал.ГоризонтальноеВыравнивание=2;
		Сам.Колонки.ОплатаБезнал.Ширина=10;
		Сам.Колонки.ОплатаБезнал.Заголовок="Безнал";
		Сам.Колонки.ОплатаБезнал.Видимость=1;

		Сам.Колонки.ВидБезналСтр.Данные="ВидБезналСтр";
		Сам.Колонки.ВидБезналСтр.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.ВидБезналСтр.Ширина=15;
		Сам.Колонки.ВидБезналСтр.Заголовок="Вид оплаты";
		Сам.Колонки.ВидБезналСтр.Видимость=1;


		Сам.Колонки.ПокупательСтр.Данные="ПокупательСтр";
		Сам.Колонки.ПокупательСтр.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.ПокупательСтр.Ширина=20;
		Сам.Колонки.ПокупательСтр.Заголовок="Покупатель";
		Сам.Колонки.ПокупательСтр.Видимость=1;

		Сам.Колонки.Кассир.Данные="Кассир";
		Сам.Колонки.Кассир.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.Кассир.Ширина=10;
		Сам.Колонки.Кассир.Заголовок="Кассир";
		Сам.Колонки.Кассир.Видимость=1;

		Сам.Колонки.Продавец.Данные="Продавец";
		Сам.Колонки.Продавец.ГоризонтальноеВыравнивание=1;
		Сам.Колонки.Продавец.Ширина=10;
		Сам.Колонки.Продавец.Заголовок="Продавец";
		Сам.Колонки.Продавец.Видимость=1;


КонецПроцедуры	// НастройкаПолей


Процедура НастройкаШрифтов() Экспорт
	ШрифтОсновной 	= глФабрикаОбъектов.Шрифт("Arial", 8, 0);
	ШрифтЗаголовка 	= глФабрикаОбъектов.Шрифт("Arial", 8, 1);
	ШрифтСумма		= глФабрикаОбъектов.Шрифт("Arial", 10, 0);

КонецПроцедуры	// НастройкаШрифтов

Процедура ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) Экспорт
	Сам=Сам();

	ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку=1;
	ОформлениеСтроки.Ячейки.Картинка.ОтображатьТекст=0;


	ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=1;
	Если ДанныеСтроки.Статус=0 Тогда
		Если ДанныеСтроки.ТипОперации=0 Тогда
			ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=1;
		ИначеЕсли ДанныеСтроки.ТипОперации=1 Тогда
		    ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=2;
		Иначе
			ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=0;
		КонецЕсли;  //

	ИначеЕсли ДанныеСтроки.Статус=1 Тогда
		Если ДанныеСтроки.ТипОперации=0 Тогда
			ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=3;
		ИначеЕсли ДанныеСтроки.ТипОперации=1 Тогда
		    ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=4;
		Иначе
		    ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки=3;
		КонецЕсли;  //
	КонецЕсли;  //


	ОформлениеСтроки.Ячейки.Дата.ОтображатьТекст=1;

	ДатаДок=глСтроки.ДатаИзСтроки(ДанныеСтроки.Дата);
	ОформлениеСтроки.Ячейки.Дата.Текст=Формат(ДатаДок,"ДЧЧММГГГГ")+" "+ДанныеСтроки.Время;

	Если ДанныеСтроки.ТипОперации=1 Тогда
	    ОформлениеСтроки.ЦветТекста=ЦветТекстаВозврат;
	Иначе
		ОформлениеСтроки.ЦветТекста=ЦветТекстаПродаж;
	КонецЕсли;

	Если ПустаяСтрока(ДанныеСтроки.ОтправленНаСервер)=1 Тогда
	    ОформлениеСтроки.Ячейки.СерверИД.ЦветТекста=ЦветТекстаОшибкаНаСервере;
	Иначе
		ОформлениеСтроки.Ячейки.СерверИД.ЦветТекста=ЦветТекстаНорма;
	КонецЕсли;
КонецПроцедуры


Функция Инит(КонтекстФормы, ИдентификаторРеквизита,_ТабличноеПолеИтогов="",_ТабличноеПолеИтоговОплаты="") Экспорт

	_База.Инит(КонтекстФормы, ИдентификаторРеквизита);

	Сам=Сам();
	Сам.НастройкаШрифтов();
	Сам.НастройкаПолей();

	Сам.ПоставщикДанных=СоздатьОбъект("ПоставщикДанныхТЗ");
	Сам.ПоставщикДанных.УстТаблицуЗначений(ТаблицаОбъектов);

	ТабличноеПолеИтогов=_ТабличноеПолеИтогов;
	ТабличноеПолеИтоговОплаты=_ТабличноеПолеИтоговОплаты;

	Возврат 1;
КонецФункции


//таблица итогов по смене используется при просмотре журнала чеков
//при заполнении журнала производится суммирование итогов
Функция СоздатьТаблицуЧеков()  экспорт
Перем ТЗ;
	ТЗ=СоздатьОбъект("ТаблицаЗначений");

	ТЗ.НоваяКолонка("Статус","Число");
	ТЗ.НоваяКолонка("ИДЧековогоСервера","Число");
	ТЗ.НоваяКолонка("ОтправленНаСервер","Строка");

	ТЗ.НоваяКолонка("Дата","Дата");
	ТЗ.НоваяКолонка("Время","Строка");
	ТЗ.НоваяКолонка("ККМ","Строка");
	ТЗ.НоваяКолонка("ККМСтр","Строка");
	ТЗ.НоваяКолонка("НомерСмены","Число");
	ТЗ.НоваяКолонка("НомерЧека","Число");
	ТЗ.НоваяКолонка("ТипОперации","Число");
	ТЗ.НоваяКолонка("ОперацияСтр","Строка");

	ТЗ.НоваяКолонка("Сумма","Число",19,2);
	ТЗ.НоваяКолонка("Скидка","Число",19,2);
	ТЗ.НоваяКолонка("Всего","Число",19,2);

	ТЗ.НоваяКолонка("ПродажаНал","Число",19,2);
	ТЗ.НоваяКолонка("ПродажаБезНал","Число",19,2);
	ТЗ.НоваяКолонка("Сдача","Число",19,2);

	ТЗ.НоваяКолонка("ВозвратНал","Число",19,2);
	ТЗ.НоваяКолонка("ВозвратБезНал","Число",19,2);

	ТЗ.НоваяКолонка("ВидБезнал","Строка");
	ТЗ.НоваяКолонка("ВидБезналСтр","Строка");

	ТЗ.НоваяКолонка("Покупатель","Строка");
	ТЗ.НоваяКолонка("ПокупательСтр","Строка");

	ТЗ.НоваяКолонка("Продавец","Строка");
	ТЗ.НоваяКолонка("Кассир","Строка");


	ТЗ.НоваяКолонка("ИД","Строка");

	ТЗ.НоваяКолонка("ОплатаБезнал","Число",19,2);   //для отображения в ТП
	ТЗ.НоваяКолонка("ОплатаНал","Число",19,2);      //для отображения в ТП


	возврат ТЗ;
КонецФункции


Функция СоздатьСтруктуруИтоговПоСмене() Экспорт
Перем Структура;
	//Структура=СоздатьОбъект("Структура");
	//Структура.Вставить("ПродажаБезСкидки",0);//сумма всех продаж без скидки
	//Структура.Вставить("Скидка",0);//сумма всех скидок
	//
	//Структура.Вставить("ВозвратБезСкидки",0);//все возвраты без учета скидки
	//Структура.Вставить("ВозвратСкидки",0);//скидки всех возвратов
	//
	//Структура.Вставить("ВозвратНал",0); //возвраты за нал
	//Структура.Вставить("ВозвратБанк",0);//возвраты за безнал
	//
	//Структура.Вставить("Нал",0); //оплаты за нал
	//Структура.Вставить("Банк",0);//оплаты по картам
	//Структура.Вставить("Кредит",0);//оплаты кредитом
    //Структура.Вставить("Прочее",0);//прочие виды оплат
	//

	Структура = НовыйОбъект("СтруктураИтоговПоСмене");

	возврат Структура;
КонецФункции


//вызывается посредством подписки на событие
//1 - можно продолжать обработку события другими обработчиками
//
Функция ОбработкаСобытий(Издатель,Событие) Экспорт
	Сам=Сам();

	Отработали=0;

	Если Событие.Источник="Команда" Тогда

		Команда=Событие.Описатель.Команда;

		Если Команда="ЗапросТекущейСтрокиЖурналаЧеков" Тогда
			Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
				Событие.Описатель.Ответ=Сам.ТекущаяСтрока;
			Иначе
				Событие.Описатель.Ответ=0;
			КонецЕсли;

			Отработали = 1;

		ИначеЕсли Команда="ВНИЗ" Тогда

			//Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
			//	Сам.ТекущаяСтрока=Сам.ТекущаяСтрока+1;
			//КонецЕсли;


			Отработали = 1;
		ИначеЕсли Команда="ВВЕРХ" Тогда
			//Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
			//	Если Сам.ТекущаяСтрока>1 Тогда
			//		Сам.ТекущаяСтрока=Сам.ТекущаяСтрока-1;
			//	КонецЕсли;
			//КонецЕсли;

			Отработали = 1;
		ИначеЕсли Команда="В_НАЧАЛО" Тогда
			Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
				Если Сам.ТекущаяСтрока>1 Тогда
					Сам.ТекущаяСтрока=1;
				КонецЕсли;
			КонецЕсли;

			Отработали = 1;
		ИначеЕсли Команда="В_КОНЕЦ" Тогда
			Если ТипЗначенияСтр(Сам.ТекущаяСтрока)="Число" Тогда
				Сам.ТекущаяСтрока=Сам.ПоставщикДанных.ТаблицаЗначений.КоличествоСтрок();
				Отработали = 1;
			КонецЕсли;

		ИначеЕсли Команда="ОТКРЫТЬ_ЧЕК" Тогда

			ПоказатьЧекВЖурнале();
			Отработали = 1;
		КонецЕсли;
		//глДебаг(Команда);
	КонецЕсли;

	Если Отработали = 1 Тогда
		глСобытиеОбработано(Событие);
		Сам.ОбновитьСтроки();
		Возврат 0;
    КонецЕсли;
	Возврат 1;
КонецФункции


Процедура Конструктор()
	_База = Этот(Контекст).ПолучитьБазовыйКласс("ТабличноеПолеСНастройками");
	Сам=Сам();
	ТаблицаОбъектов=Сам.СоздатьТаблицуЧеков();
	Отбор=Сам.СоздатьСтруктуруОтбора();
	ИтогиПоСмене=Сам.СоздатьСтруктуруИтоговПоСмене();

	ТаблицаИтоговПоОплате=СоздатьОбъект("ТаблицаЗначений");
	ТаблицаИтоговПоОплате.НоваяКолонка("ИД","Строка");
	ТаблицаИтоговПоОплате.НоваяКолонка("ВидОплаты","Строка");
	ТаблицаИтоговПоОплате.НоваяКолонка("Продажа","Число");
	ТаблицаИтоговПоОплате.НоваяКолонка("Возврат","Число");
КонецПроцедуры	// Конструктор


Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии