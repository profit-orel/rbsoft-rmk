//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:51
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Экранная форма класса Автоскидка
//Имя формы : ОсновнаяФорма
//_______________________________________________________________________________________
Перем Объект;

Перем ЗначениеУсловияСтрока;
Перем ЗначениеУсловияВидДк;
Перем ЗначениеУсловияДк;
Перем ЗначениеУсловияВидОплаты;

Перем ЗначениеТипКарты;
Перем ЗначениеИДКарты;
Перем ЗначениеИДТовара;


//возвращает 1 - когда строка описывает правильное время
Функция КорректноеВремя(ТекстВремя)
	Если ПустоеЗначение(ТекстВремя)=1 Тогда
		Возврат 0;
	ИначеЕсли СокрЛП(ТекстВремя) = ":" Тогда
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

//возвращает 1 - когда строка описывает правильную дату
//ТекстДата должна быть в формате ДД.ММ.ГГ или ДД.ММ.ГГГГ
//корректные годы в формате ГГ от 10 до 99
//корректные годы в формате ГГГГ от 2010 до 2099
Функция КорректнаяДата(ДанныеДата)

	СтрокаДата = ДанныеДата;

	Если ПустоеЗначение(СтрокаДата) = 1 Тогда
		Возврат 0;
	КонецЕсли;

	ДатаИсходная = ДанныеДата;
	ДатаИсходная = СтрЗаменить(ДатаИсходная,".",РазделительСтрок);
	День = СтрПолучитьСтроку(ДатаИсходная,1);
	Месяц = СтрПолучитьСтроку(ДатаИсходная,2);
	Год = СтрПолучитьСтроку(ДатаИсходная,3);

	Если Число(Год)<10 Тогда
		Возврат 0;
	КонецЕсли;

	Возврат 1;

КонецФункции

//вернуть в формате ГГГГММДД
Функция ПреобразоватьДатуДляЗаписи(ДанныеДата)ТекущееВремя();

	ДатаИсходная = ДанныеДата;
	ДатаИсходная = СтрЗаменить(ДатаИсходная,".",РазделительСтрок);
	День = СтрПолучитьСтроку(ДатаИсходная,1);
	Месяц = СтрПолучитьСтроку(ДатаИсходная,2);
	Год = ДатаГод(ДанныеДата);

	ДатаДляЗаписи = ""+Год+Месяц+День;

	возврат ДатаДляЗаписи;

КонецФункции
//вернуть в формате ЧЧММСС
Функция ПреобразоватьВремяДляЗаписи(ТекстВремя)
	СтрокаВремя = глСтроки.ФРМ_Время(ТекстВремя);
	СтрокаВремя = СтрЗаменить(СтрокаВремя,":","");
	Час = Лев(СтрокаВремя,2);
	Если Число(Час)>24 Тогда
		Час = "24";
	КонецЕсли;

	Минута = Сред(СтрокаВремя,3,2);
	Если Число(Минута)>60 Тогда
		Минута = "60";
	КонецЕсли;

	Секудна = Сред(СтрокаВремя,5,2);
	Если Число(Секудна)>60 Тогда
		Секунда = "60";
	КонецЕсли;

	СтрокаВремя = ""+Час+Минута+Секудна;

	возврат СтрокаВремя;
КонецФункции

//возвращает данные типа Дата из строки формата ГГГГММДД
Функция ПреобразоватьДатуДляОтображения(ТекстДата)
	//проверить на корректность строки и пустоту

	Возврат глСтроки.ДатаИзСтроки(ТекстДата);
КонецФункции

//возвращает данные типа Строка в формате ЧЧ:ММ из строки формата ЧЧММСС
Функция ПреобразоватьВремяДляОтображения(ТекстВремя)
	//проверить на корректность строки и пустоту
	Час = Лев(ТекстВремя,2);
	Минута = Сред(ТекстВремя,3,2);
	Время = ""+Час+":"+Минута;
	Возврат СокрЛП(Время);
КонецФункции

Процедура ПроверитьВводВремени()
	//Стр = ВремяКонца;
	//Если Найти(Стр,"7")=1 Тогда
	//	ВремяКонца = СтрЗаменить(Стр,"7","");
	//	Возврат;
	//КонецЕсли;
КонецПроцедуры

//*******************************************
Процедура ПоКнопкеЗаписать()

	Объект.Данные.ИД=ИД;
	Объект.Данные.Наименование=Наименование;
	Объект.Данные.Активность=Активность;
	Объект.Данные.Приоритет=Приоритет;
	Объект.Данные.ТипУсловияАвтоскидки=ТипУсловияАвтоскидки.ПолучитьЗначение(ТипУсловияАвтоскидки.ТекущаяСтрока());
	Объект.Данные.ЗначениеУсловияЧисло=0;
	Объект.Данные.ЗначениеУсловияСтрока="";


	Если Объект.Данные.ТипУсловияАвтоскидки=0 Тогда
		Объект.Данные.ЗначениеУсловияЧисло=ЗначениеУсловия;
	ИначеЕсли Объект.Данные.ТипУсловияАвтоскидки=1 Тогда
		Объект.Данные.ЗначениеУсловияЧисло=ЗначениеУсловия;
	ИначеЕсли Объект.Данные.ТипУсловияАвтоскидки=2 Тогда
		Объект.Данные.ЗначениеУсловияСтрока=ЗначениеУсловияВидДк;
	ИначеЕсли Объект.Данные.ТипУсловияАвтоскидки=3 Тогда
		Объект.Данные.ЗначениеУсловияСтрока=ЗначениеУсловияДК;
	ИначеЕсли Объект.Данные.ТипУсловияАвтоскидки=4 Тогда
		Объект.Данные.ЗначениеУсловияСтрока=ЗначениеУсловияВидОплаты;
	КонецЕсли;

	Объект.Данные.ТипСкидки=ТипСкидки.ПолучитьЗначение(ТипСкидки.ТекущаяСтрока());
	Объект.Данные.Скидка=Скидка;


	ДатаНачалаЗапись="";
	ДатаКонцаЗапись="";
	Если КорректнаяДата(ДатаНачала)=1 Тогда
		ДатаНачалаЗапись=ПреобразоватьДатуДляЗаписи(ДатаНачала);
	Иначе
		ДатаНачалаЗапись="20100101";
	КонецЕсли;

	Если КорректнаяДата(ДатаКонца)=1 Тогда
		ДатаКонцаЗапись=ПреобразоватьДатуДляЗаписи(ДатаКонца);
	Иначе
		ДатаКонцаЗапись="20100101";
	КонецЕсли;

	Объект.Данные.ДатаНачала=ДатаНачалаЗапись;
	Объект.Данные.ДатаКонца=ДатаКонцаЗапись;

	ВремяНачалаЗапись="";
	ВремяКонцаЗапись="";
	Если КорректноеВремя(ВремяНачала)=1 Тогда
		ВремяНачалаЗапись=ПреобразоватьВремяДляЗаписи(ВремяНачала);
	Иначе
		ВремяНачалаЗапись="";
	КонецЕсли;

	Если КорректноеВремя(ВремяКонца)=1 Тогда
		ВремяКонцаЗапись=ПреобразоватьВремяДляЗаписи(ВремяКонца);
	Иначе
		ВремяКонцаЗапись="";
	КонецЕсли;

	Объект.Данные.ВремяНачала=ВремяНачалаЗапись;
	Объект.Данные.ВремяКонца=ВремяКонцаЗапись;

	_ДниНедели="";
	Есть=0;
	Для Инд=1 По ДниНедели.РазмерСписка() Цикл
		Если ДниНедели.Пометка(Инд)=1 Тогда
			_ДниНедели=_ДниНедели+"1";
			Есть=1;
		Иначе
			_ДниНедели=_ДниНедели+"0";
		КонецЕсли;

	КонецЦикла;
	Если Есть=1 Тогда
		Объект.Данные.Днинедели=_ДниНедели;
	Иначе
		Объект.Данные.Днинедели="";
	КонецЕсли;


	_ДниМесяца="";
	Есть=0;
	Для Инд=1 По ДниМесяца1.РазмерСписка() Цикл
		Если ДниМесяца1.Пометка(Инд)=1 Тогда
			Есть=1;
			Если ПустаяСтрока(_ДниМесяца)=1 Тогда
				_ДниМесяца=Строка(Инд);
			Иначе
				_ДниМесяца=_ДниМесяца+","+Строка(Инд);
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;
	Для Инд=1 По ДниМесяца2.РазмерСписка() Цикл
		Если ДниМесяца2.Пометка(Инд)=1 Тогда
			Есть=1;
			Если ПустаяСтрока(_ДниМесяца)=1 Тогда
				_ДниМесяца=Строка(ДниМесяца1.РазмерСписка()+Инд);
			Иначе
				_ДниМесяца=_ДниМесяца+","+Строка(ДниМесяца1.РазмерСписка()+Инд);
			КонецЕсли;
		КонецЕсли;


	КонецЦикла;
	Объект.Данные.ДниМесяца=_ДниМесяца;

	Если флДляТипаКарты=1 Тогда
		Объект.Данные.ТипКарты=ТипКарты;
	Иначе
		Объект.Данные.ТипКарты="";
	КонецЕсли;

	Если флДляКарты=1 Тогда
		Объект.Данные.ИДКарты=ЗначениеИДКарты;
	Иначе
		Объект.Данные.ИДКарты="";
	КонецЕсли;

	Если флДляТовара=1 Тогда
		Объект.Данные.ИДТовара=ЗначениеИДТовара;
	Иначе
		Объект.Данные.ИДТовара="";
	КонецЕсли;

	Если Объект.Записать()=0 Тогда
		глПредупреждение("Объект не записан.");
	КонецЕсли;

КонецПроцедуры


Процедура Обновить()
	Данные=Объект.Данные;

	ИД=Данные.ИД;
	Наименование=Данные.Наименование;
	Активность=Данные.Активность;
	Приоритет=Данные.Приоритет;

	Поз=ТипУсловияАвтоскидки.НайтиЗначение(Данные.ТипУсловияАвтоскидки);

	Если Поз=0 Тогда
		ТипУсловияАвтоскидки.ДобавитьЗначение(Данные.ТипУсловияАвтоскидки,"Тип "+Данные.ТипУсловияАвтоскидки);
		ТипУсловияАвтоскидки.ТекущаяСтрока(ТипУсловияАвтоскидки.РазмерСписка());
	Иначе
		ТипУсловияАвтоскидки.ТекущаяСтрока(Поз);
	КонецЕсли;

	//ЗначениеУсловияСтрока	StrValue	(C) Строка	100	 	 	"Зависит от поля Type.
	//Type  StrValue
	//0        игнорируется
	//1        игнорируется
	//2        ИД вида дисконтной карты
	//3        ИД дисконтной карты
	//4        ИД вида оплаты
	//5        игнорируется"

	//ЗначениеУсловияЧисло	NumValue	(N) Число	15	2	 	"Зависит от поля Type.
	//Type  NumValue
	//0        Сумма чека, при превышении которой предоставляется скидка
	//1        Количество товара в чеке, при превышении которого предоставляется скидка
	//2        игнорируется
	//3        игнорируется
	//4        игнорируется
	//5        игнорируется"

	Видимость=1;

	Если Данные.ТипУсловияАвтоскидки=0 Тогда
		Форма.ЗначениеУсловия.НазначитьТип("Число",15,2);
		ЗначениеУсловия=Данные.ЗначениеУсловияЧисло;
	ИначеЕсли Данные.ТипУсловияАвтоскидки=1 Тогда
		Форма.ЗначениеУсловия.НазначитьТип("Число",15,3);
		ЗначениеУсловия=Данные.ЗначениеУсловияЧисло;
	ИначеЕсли Данные.ТипУсловияАвтоскидки=2 Тогда
		Форма.ЗначениеУсловия.НазначитьТип("Строка",100);
		ЗначениеУсловияВидДк=Данные.ЗначениеУсловияСтрока;
		ЗначениеУсловия=ЗначениеУсловияВидДк;
	ИначеЕсли Данные.ТипУсловияАвтоскидки=3 Тогда
		Форма.ЗначениеУсловия.НазначитьТип("Строка",100);
		ЗначениеУсловияДК=Данные.ЗначениеУсловияСтрока;
		ИДКарта=СоздатьОбъект("ИДКарта");

		Если ИДКарта.Прочитать(ЗначениеУсловияДК)=1 Тогда
			ЗначениеУсловия=ИДКарта.Данные.Наименование;
		Иначе
			ЗначениеУсловия=ЗначениеУсловияДК;
		КонецЕсли;

	ИначеЕсли Данные.ТипУсловияАвтоскидки=4 Тогда
		Форма.ЗначениеУсловия.НазначитьТип("Строка",100);
		ЗначениеУсловияВидОплаты=Данные.ЗначениеУсловияСтрока;

		ЗначениеУсловия=ЗначениеУсловияВидОплаты;
	ИначеЕсли Данные.ТипУсловияАвтоскидки=5 Тогда
		Видимость=0;
	Иначе
		ЗначениеУсловияСтрока=Данные.ЗначениеУсловияСтрока;
		ЗначениеУсловия=ЗначениеУсловияСтрока;
	КонецЕсли;

	Форма.ЗначениеУсловия.Видимость(Видимость);
	Форма.ТекстЗначениеУсловия.Видимость(Видимость);


	//ТипСкидки	DiscType	(N) Число	1	0	 	"тип значения скидки:
	//0 - процентный
	//1 - суммовой


	Если Данные.ТипСкидки=0 Тогда
		ТипСкидки.ТекущаяСтрока(1);
		Форма.ТекстСкидки.Заголовок("%");
	ИначеЕсли Данные.ТипСкидки=1 Тогда
		ТипСкидки.ТекущаяСтрока(2);
		Форма.ТекстСкидки.Заголовок("руб.");
	КонецЕсли;

	//"
	//Скидка	Discount	(N) Число	10	2	 	"Процент или сумма скидки.
	//Зависит от DiscType
	//DiscType Discount
	//0              Процент скидки
	//1              Сумма скидки"

	Скидка=Данные.Скидка;

	//ДатаНачала	Date1	(C) Строка	8	 	 	"Дата начала применения правила  в формате ГГГГММДД
	//Пустая строка - игнорировать ограничение по дате начала действия правила"
	//ДатаКонца	Date2	(C) Строка	8	 	 	"Дата окончания применения правила в формате ГГГГММДД
	//Пустая строка - игнорировать ограничение по дате окончания действия правила"

	ДатаНачала=ПреобразоватьДатуДляОтображения(Данные.ДатаНачала);
	ДатаКонца=ПреобразоватьДатуДляОтображения(Данные.ДатаКонца);


	//ВремяНачала	Time1	(C) Строка	6	 	 	"Время начала применения правила  в формате ЧЧММСС.
	//Пустая строка - игнорировать ограничение по времени начала (правило действует c 00:00:00)"
	//ВремяКонца	Time2	(C) Строка	6	 	 	"Время окончания применения правила в формате ЧЧММСС.
	//Пустая строка - игнорировать ограничение по времени окончания (правило действует до 23:59:59)"

	ВремяНачала=ПреобразоватьВремяДляОтображения(Данные.ВремяНачала);
	ВремяКонца=ПреобразоватьВремяДляОтображения(Данные.ВремяКонца);

	//ДниНедели	WeekDays	(C) Строка	7	 	 	"Строка из символов ""0"", ""1"".
	//Позиция символа в строке обозначает номер дня недели, ""1"" - применять правило, ""0"" - не применять правило.
	//Пустая строка - игнорировать ограничение по дням недели
	//Пример:
	// 1100110 - правило применимо в понедельник, вторник, пятницу и субботу"
	Для Инд=1 По 7 Цикл
		Если Сред(Данные.ДниНедели,Инд,1)="1" Тогда
			ДниНедели.Пометка(Инд,1);
		Иначе
			ДниНедели.Пометка(Инд,0);
		КонецЕсли;
	КонецЦикла;


//ДниМесяца	MonthDay	(C) Строка	100
//Числа месяца через запятую.
//01,05,10,25 - Даем скидки 1,5,10 и 25 числа КАЖДОГО месяца.
//Пустая строка - игнорировать ограничение по числам месяца


	ДниМесяца=СтрЗаменить(Данные.ДниМесяца,",",РазделительСтрок);

	Для Инд=1 По 16  Цикл
		ДниМесяца1.Пометка(Инд,0);
	КонецЦикла;
	Для Инд=1 По 15  Цикл
		ДниМесяца2.Пометка(Инд,0);
	КонецЦикла;



	Для Инд=1 По СтрКоличествоСтрок(ДниМесяца) Цикл
		ЧислоМесяца=Число(СтрПолучитьСтроку(ДниМесяца,Инд));
		Поз=ДниМесяца1.НайтиЗначение(ЧислоМесяца);
		Если Поз>0 Тогда
			ДниМесяца1.Пометка(Поз,1);
		Иначе

			Поз=ДниМесяца2.НайтиЗначение(ЧислоМесяца);
			Если Поз>0 Тогда
				ДниМесяца2.Пометка(Поз,1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	//ТипКарты	CARDTYPE	(C) Строка	40	 	 	"ИД типа карт клиента. Ограничение по типу карты клиента.
	//Пустая строка - нет ограничения"
	ЗначениеТипКарты=СокрЛП(Данные.ТипКарты);
	Если ПустоеЗначение(ЗначениеТипКарты)=0 Тогда
		флДляТипаКарты=1;
		ТипКарты=ЗначениеТипКарты;
	КонецЕсли;

	//ИДКарты	IDCARD	(C) Строка	40	 	 	"ИД карты клиента. Ограничение по конкретной карте клиента.
	//Пустая строка - нет ограничения"
	ЗначениеИДКарты=СокрЛП(Данные.ИДКарты);
	Если ПустоеЗначение(ЗначениеИДКарты)=0 Тогда
		флДляКарты=1;

		ИДКарта=СоздатьОбъект("ИДКарта");

		Если ИДКарта.Прочитать(ЗначениеИДКарты)=1 Тогда
			Карта=ИДКарта.Данные.Наименование;
		Иначе
			Карта=ЗначениеИДКарты;
		КонецЕсли;
	КонецЕсли;

	//ИДТовара	IDGOOD	(C) Строка	40	 	 	"ИД товара. Правило действует только на конкретный товар.
	//Пустая строка - нет ограничения"
	ЗначениеИДТовара=СокрЛП(Данные.ИДТовара);
	Если ПустоеЗначение(ЗначениеИДТовара)=0 Тогда
		флДляТовара=1;

		_ТоварСпр=СоздатьОбъект("Товар");
		Если _ТоварСпр.Прочитать(ЗначениеИДТовара)=1 Тогда
			Товар=_ТоварСпр.Данные.Наименование;
		Иначе
			Товар=ЗначениеИДТовара;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПриИзмененииТипаУсловия()
	Объект.Данные.ТипУсловияАвтоскидки=ТипУсловияАвтоскидки.ПолучитьЗначение(ТипУсловияАвтоскидки.ТекущаяСтрока());
	Обновить();
КонецПроцедуры

Процедура ПриОткрытии()

	Если ПустоеЗначение(Форма.Параметр)=1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	СтруктураПараметров=Форма.Параметр;
	Объект=СтруктураПараметров.Объект;

	ДниНедели.ДобавитьЗначение(1,"Понедельник");
	ДниНедели.ДобавитьЗначение(2,"Вторник");
	ДниНедели.ДобавитьЗначение(3,"Среда");
	ДниНедели.ДобавитьЗначение(4,"Четверг");
	ДниНедели.ДобавитьЗначение(5,"Пятница");
	ДниНедели.ДобавитьЗначение(6,"Суббота");
	ДниНедели.ДобавитьЗначение(7,"Воскресенье");

	Для Инд=1 По 16  Цикл
		ДниМесяца1.ДобавитьЗначение(Инд);
	КонецЦикла;
	Для Инд=17 По 31  Цикл
		ДниМесяца2.ДобавитьЗначение(Инд);
	КонецЦикла;
	ТипСкидки.ДобавитьЗначение(0,"Процентная");
	ТипСкидки.ДобавитьЗначение(1,"Суммовая");

	ТипУсловияАвтоскидки.ДобавитьЗначение(0,"По сумме чека");
	ТипУсловияАвтоскидки.ДобавитьЗначение(1,"По количеству товара");
	ТипУсловияАвтоскидки.ДобавитьЗначение(2,"По виду дисконтных карт");
	ТипУсловияАвтоскидки.ДобавитьЗначение(3,"По дисконтной карте");
	ТипУсловияАвтоскидки.ДобавитьЗначение(4,"По виду оплаты");
	ТипУсловияАвтоскидки.ДобавитьЗначение(5,"Для именинников");

	Обновить();
КонецПроцедуры	// ПриОткрытии


Процедура ПриПовторномОткрытии()
	ПриОткрытии();

КонецПроцедуры	// ПриПовторномОткрытии

Процедура РазблокироватьИД()
	Если Форма.ИД.Редактирование()=1 Тогда
		Форма.ИД.Редактирование(0);
	Иначе
		Форма.ИД.Редактирование(1);
	КонецЕсли;

КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ИД,ФСО)
	Если ИД="ТипКарты" Тогда
		ФСО=0;
		ИДКарта=СоздатьОбъект("ИДКарта");
		_ТипКарты="";
		Если ИДКарта.ВыбратьВидКарты(_ТипКарты)=1 Тогда

			ТипКарты=_ТипКарты;
			флДляТипаКарты=1;
		КонецЕсли;

	ИначеЕсли ИД="Карта" Тогда
		ФСО=0;
		ИДКарта=СоздатьОбъект("ИДКарта");
		_Карта="";
		Если ИДКарта.ВыбратьОбъект(_Карта)=1 Тогда
			ЗначениеИДКарты=_Карта.Данные.ИД;
			Карта=_Карта.Данные.Наименование;
			флДляКарты=1;
		КонецЕсли;

	ИначеЕсли ИД="Товар" Тогда
		ФСО=0;

		_ТоварСпр=СоздатьОбъект("Товар");
		_Товар="";
		Если _ТоварСпр.ВыбратьОбъект(_Товар)=1 Тогда
			ЗначениеИДТовара=_Товар.Данные.ИД;
			Товар=_Товар.Данные.Наименование;
			флДляТовара=1;
		КонецЕсли;
	ИначеЕсли ИД="ЗначениеУсловия" Тогда
		ТипАвтоскидки=ТипУсловияАвтоскидки.ПолучитьЗначение(ТипУсловияАвтоскидки.ТекущаяСтрока());
		Если ТипАвтоскидки=2 Тогда
			ФСО=0;
			//По виду карты
			ИДКарта=СоздатьОбъект("ИДКарта");
			_ТипКарты="";
			Если ИДКарта.ВыбратьВидКарты(_ТипКарты)=1 Тогда
				ЗначениеУсловияВидДк=_ТипКарты;
				ЗначениеУсловия=_ТипКарты;
			КонецЕсли;

		ИначеЕсли ТипАвтоскидки=3 Тогда
			ФСО=0;
			//По карте
			ИДКарта=СоздатьОбъект("ИДКарта");
			_Карта="";
			Если ИДКарта.ВыбратьОбъект(_Карта)=1 Тогда
				ЗначениеУсловияДк=_Карта.Данные.ИД;
				ЗначениеУсловия=_Карта.Данные.Наименование;
			КонецЕсли;

		ИначеЕсли ТипАвтоскидки=4 Тогда
			ФСО=0;
			//По типу оплаты


		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриИзмененииТипаСкидки()

	Объект.Данные.ТипСкидки=ТипСкидки.ПолучитьЗначение(ТипСкидки.ТекущаяСтрока());

	Если Объект.Данные.ТипСкидки=0 Тогда
		Форма.ТекстСкидки.Заголовок("%");
	ИначеЕсли Объект.Данные.ТипСкидки=1 Тогда
		Форма.ТекстСкидки.Заголовок("руб.");
	КонецЕсли;
КонецПроцедуры