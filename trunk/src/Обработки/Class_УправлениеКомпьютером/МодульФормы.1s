//Конфигурация для платформы "1С:Предприятие 7.7" РБ-Софт:Рабочее место кассира.
//Версия 4.57 от 05.06.11 23:24:52
//(c) Баинов Евгений, ООО "РБ-Софт" 2006-2011 г.Улан-Удэ, ул.Балтахинова,17Е,офис 215
//e-mail: bainov@rb-soft.ru  icq: 73718937, телефоны: (3012) 440-357, 278-228
//Сайт проекта: http://code.google.com/p/rbsoft-rmk/
//_______________________________________________________________________________________
//Класс УправлениеКомпьютером
//_______________________________________________________________________________________
Перем _База Экспорт;

Перем COMServices;
Перем СервисДоступен;

Функция Этот(Конт) Возврат Конт; КонецФункции

Функция Сам() Возврат Этот(Контекст) КонецФункции


//------------------------------------ ------------------------------------
Процедура Конструктор()
	Сам=Сам();
	_База=Сам.ПолучитьБазовыйКласс("Система");

	СервисДоступен=0;
	Попытка
		COMServices=СоздатьОбъект("COMServices.COM");
		СервисДоступен=1;
	Исключение

	КонецПопытки;

КонецПроцедуры // Конструктор

//------------------------------------ ------------------------------------
Процедура Деструктор()
	COMServices=0;
КонецПроцедуры // Деструктор

//------------------------------------ ------------------------------------
Процедура ПриОткрытии()
//#if _NOW_PREPARE_CLASS
//	Форма.Параметр._ПриОткрытии(); // для отладки класса
//#endif // _NOW_PREPARE_CLASS
КонецПроцедуры // ПриОткрытии

 //выключение компьютера.
//в Windows 2000 не выключает питание.

Процедура ВыключитьКомпьютер() Экспорт
	Попытка
	    ИмяСервера=".";

		ServicesSet=COMServices.GetCOMObject("winmgmts:{impersonationLevel=impersonate,(Shutdown)}!\\"+ИмяСервера+"\root\cimv2");
		Items=ServicesSet.ExecQuery("Select * from Win32_OperatingSystem");

		i=0;
		Для i=0 по Items.Count-1 Цикл
			Item=COMServices.EnumerateCollection(Items,i);
			Item.Win32Shutdown(5);
		КонецЦикла;
	Исключение

	    Сообщить("Сбой при выключении:
		|"+ОписаниеОшибки());
	КонецПопытки;


КонецПроцедуры	// глВыключитьКомпьютер

Функция СервисДоступен() экспорт
	возврат СервисДоступен;
КонецФункции

функция УстановитьВСистему()  Экспорт
	СервисДоступен=0;
	Попытка
		COMServices=СоздатьОбъект("COMServices.COM");
		СервисДоступен=1;
		возврат 1;
	Исключение
		ФайлБиблиотеки=глОбработатьМакроСтроку("%DLL%\ComServices.dll");
		Если ФС.СуществуетФайл(ФайлБиблиотеки)=0 Тогда
			возврат -1;
		КонецЕсли;
		ФС.КопироватьФайл(ФайлБиблиотеки,КаталогПрограммы()+"ComServices.dll",1);
		ФС.УстТекКаталог(КаталогПрограммы());
		ЗапуститьПриложение("regsvr32.exe /i /s ComServices.dll");
		Попытка
			COMServices=СоздатьОбъект("COMServices.COM");
			СервисДоступен=1;
			возврат 1;
		Исключение
			возврат 0;
		КонецПопытки;
	КонецПопытки;

КонецФункции




//_____________________________________________________________________________
//Процедура
//Назначение:
//
//Параметры:
//
//
Процедура ЗакрытьОкноСообщений() Экспорт


	Попытка
		WshShell= СоздатьОбъект("WScript.Shell");
		WshShell.appActivate("1С:Предприятие");
		WshShell.SendKeys("^+(z)");
		WshShell.SendKeys("^+(я)");
	Исключение
		сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры


//возвращает имя текущего пользователя Windows
Функция ИмяПользователяОС(ДоменПользователя="",ИмяПользователяОС="") Экспорт
	objNet = СоздатьОбъект("WScript.NetWork");
    ДоменПользователя = objNet.UserDomain;
    ИмяПользователяОС = objNet.UserName;
    ИмяТекущегоПользователяОС = ДоменПользователя + "\" + ИмяПользователяОС;
	Возврат ИмяТекущегоПользователяОС;
КонецФункции


//возвращает список принтеров, установленных в системе

Функция ПолучитьСписокПринтеров() Экспорт


	СписокПринтеров=СоздатьОбъект("СписокЗначений");

	objWsNet=СоздатьОбъект("WScript.Network");
	objCollection=objWsNet.EnumPrinterConnections();

	Инд=0;
	Пока Инд < objCollection.Count() Цикл
		СписокПринтеров.ДобавитьЗначение(objCollection.Item(Инд + 1));
		Инд=Инд+2;
	КонецЦикла;

	Возврат СписокПринтеров;
КонецФункции


//Может возвращать пустой список если долго не отвечает нужный компьютер
//ИмяСервера - необязательно. если не указан, то возвращает список локальных принтеров
//если указан, то запрашивает у сервера печати список принтеров
Функция ПолучитьСписокСетевыхПринтеров(ИмяСервера=".") Экспорт
	СписокПринтеров=СоздатьОбъект("СписокЗначений");


	Попытка

		ServicesSet=COMServices.GetCOMObject("winmgmts:{impersonationLevel=impersonate}!\\" + ИмяСервера + "\root\cimv2");

		Принтеры = ServicesSet.ExecQuery("SELECT * FROM Win32_Printer");

		Инд=0;
		Для Инд=0 по Принтеры.Count-1 Цикл
			Принтер=COMServices.EnumerateCollection(Принтеры,Инд);
			СписокПринтеров.ДобавитьЗначение(Принтер.Name);
		КонецЦикла;
	Исключение
	КонецПопытки;

	Возврат СписокПринтеров;
КонецФункции

